!function t(e, i, n) { function o(s, a) { if (!i[s]) { if (!e[s]) { var l = "function" == typeof require && require; if (!a && l) return l(s, !0); if (r) return r(s, !0); throw new Error("Cannot find module '" + s + "'") } var u = i[s] = { exports: {} }; e[s][0].call(u.exports, function (t) { var i = e[s][1][t]; return o(i ? i : t) }, u, u.exports, t, e, i, n) } return i[s].exports } for (var r = "function" == typeof require && require, s = 0; s < n.length; s++) o(n[s]); return o }({
    1: [function (t, e, i) { "use strict"; i.grid = [".hypergrid-container {", "\tposition: relative;", "\theight: 500px;", "}", ".hypergrid-textfield {", "\tposition: absolute;", "\tfont-size: 12px;", "\tcolor: black;", "\tbackground-color: ivory;", "\tbox-sizing: border-box;", "\tmargin: 0;", "\tpadding: 0 5px;", "\tborder: 0; /*border: 1px solid #777;*/", "\toutline: 0;", "}", "", "div.hypergrid-combobox {", "\tposition: absolute;", "\tdisplay: none;", "\toutline: 0;", "\tpadding: 0;", "\tborder: 0; /*border: 1px solid #777;*/", "\tbox-sizing: border-box;", "\tbackground-color: ivory;", "\tcolor: black;", "\tfont-size: 12px;", "}", "div.hypergrid-combobox > input {", "\tposition: absolute;", "\tmargin-top: -1px;", "\theight: 100%;", "\tright: 20px;", "\tleft: 0;", "\twidth: 100%;", "\toutline: 0;", "\tpadding: 0;", "", "\tborder: 5px solid transparent;", "\tborder-right-width: 20px;", "\tborder-bottom-width: 0;", "\tborder-top-width: 0;", "\tbox-sizing: border-box;", "", "\tfont-size: 12px;", "\tcolor: black;", "\tbackground-color: transparent;", "}", "div.hypergrid-combobox > span {", "\tposition: absolute;", "\tbox-sizing: border-box;", "\twidth: 20px;", "\theight: 100%;", "\tright: 0;", "\ttext-align: center;", "\tfont-size: 1.5em;", "\tline-height: 1em;", "}", "div.hypergrid-combobox span[title] {", "\tcolor: lightgrey;", "\tcursor: pointer;", "\tmargin-top: -2px;", "}", "div.hypergrid-combobox span[title]:hover {", "\tcolor: grey;", "}", "div.hypergrid-combobox span[title]:active, div.hypergrid-combobox span[title].active {", "\tcolor: blue;", "}", "div.hypergrid-combobox > span {", "\tmargin-top: -1px;", "}", "div.hypergrid-combobox > span::after {", "\tcontent: '\\25BE';", "\tfont-size: 20px;", "}", "div.hypergrid-combobox > div {", "\tposition: absolute;", "\tleft: -1px;", "\tright: -1px;", "\ttop: 14px;", "\theight: 0;", "\ttransition: height .25s;", "\tvisibility: hidden;", "\t/*box-shadow: white 0 0 1px 1px;*/", "\tbox-sizing: border-box;", "\tborder: 1px solid #777;", "\tbackground-color: ivory;", "\t-webkit-user-select: none;", "\t-moz-user-select: none;", "\t-ms-user-select: none;", "}", "div.hypergrid-combobox > div > div {", "\tposition: absolute;", "\theight: 13px;", "\twidth: 100%;", "\ttext-align: center;", "}", "div.hypergrid-combobox > div span[title] {", "\tfont-weight: bold;", "\tfont-size: 12px;", "\tfont-family: verdana, geneva, sans-serif;", "\tmargin-left: 6px;", "\tmargin-right: 6px;", "}", "div.hypergrid-combobox > div span:not([title]) {", "\tfont-style: italic;", "\tpadding-top: 1px;", "}", "div.hypergrid-combobox > div select {", "\tposition: absolute;", "\tpadding-top: 2px;", "\tborder: 0;", "\toutline: 0;", "\tborder-top: 1px solid #777;", "\twidth: 100%;", "\ttop: 15px;", "\tbottom: 0;", "\tleft: 0;", "\tright: 0;", "\tbackground-color: transparent;", "\tfont-family: sans-serif;", "\tfont-weight: bold;", "\tfont-size: 9px;", "}", "div.hypergrid-combobox > div select option:hover {", "\tbackground-color: #777;", "\tcolor: ivory;", "}"].join("\n"), i["list-dragon-addendum"] = ["div.dragon-list, li.dragon-pop {", "\tfont-family: Roboto, sans-serif;", "\ttext-transform: capitalize; }", "div.dragon-list {", "\tposition: absolute;", "\ttop: 4%;", "\tleft: 4%;", "\theight: 92%;", "\twidth: 20%; }", "div.dragon-list:nth-child(2) { left: 28%; }", "div.dragon-list:nth-child(3) { left: 52%; }", "div.dragon-list:nth-child(4) { left: 76%; }", "div.dragon-list > div, div.dragon-list > ul > li, li.dragon-pop { line-height: 46px; }", "div.dragon-list > ul { top: 46px; }", "div.dragon-list > ul > li:not(:last-child)::before, li.dragon-pop::before {", "\tcontent: '\\2b24';", "\tcolor: #b6b6b6;", "\tfont-size: 30px;", "\tmargin: 8px 14px 8px 8px; }", "li.dragon-pop { opacity:.8; }"].join("\n") }, {}], 2: [function (t, e, i) { "use strict"; i.CQL = ["<li>", '\t<label title="${1}">', '\t\t<a type="button" class="filter-copy"></a>', '\t\t<div class="filter-tree-remove-button" title="delete conditional"></div>', "\t\t<strong>%{0}:</strong>", '\t\t<input name="${1}" class="filter-text-box ${3}" value="%{2}">', "\t</label>", '\t<div class="filter-tree-warn"></div>', "</li>"].join("\n"), i.SQL = ["<li>", '\t<label title="${1}">', '\t\t<a type="button" class="filter-copy"></a>', '\t\t<div class="filter-tree-remove-button" title="delete conditional"></div>', "\t\t<strong>%{0}:</strong>", '\t\t<textarea name="${1}" rows="1" class="filter-text-box ${3}">%{2}</textarea>', "\t</label>", '\t<div class="filter-tree-warn"></div>', "</li>"].join("\n"), i.dialog = ['<div id="hypergrid-dialog">', "", "\t<style>", "\t\t#hypergrid-dialog {", "\t\t\tposition: absolute;", "\t\t\ttop: 0;", "\t\t\tleft: 0;", "\t\t\tbottom: 0;", "\t\t\tright: 0;", "\t\t\tbackground-color: white;", "\t\t\tfont: 10pt sans-serif;", "\t\t\topacity: 0;", "\t\t\ttransition: opacity 1s;", "\t\t\tbox-shadow: rgba(0, 0, 0, 0.298039) 0px 19px 38px, rgba(0, 0, 0, 0.219608) 0px 15px 12px;", "\t\t}", "\t\t#hypergrid-dialog.hypergrid-dialog-visible {", "\t\t\topacity: 1;", "\t\t\ttransition: opacity 1s;", "\t\t}", "", "\t\t#hypergrid-dialog .hypergrid-dialog-control-panel {", "\t\t\tposition: absolute;", "\t\t\ttop: 0px;", "\t\t\tright: 12px;", "\t\t}", "\t\t#hypergrid-dialog .hypergrid-dialog-control-panel a {", "\t\t\tcolor: #999;", "\t\t\tfont-size: 33px;", "\t\t\ttransition: text-shadow .35s, color .35s;", "\t\t\ttext-decoration: none;", "\t\t}", "\t\t#hypergrid-dialog .hypergrid-dialog-close:after {", "\t\t\tcontent: '\\D7';", "\t\t}", "\t\t#hypergrid-dialog .hypergrid-dialog-settings:after {", "\t\t\tfont-family: Apple Symbols;", "\t\t\tcontent: '\\2699';", "\t\t}", "\t\t#hypergrid-dialog .hypergrid-dialog-control-panel a:hover {", "\t\t\tcolor: black;", "\t\t\ttext-shadow: 0 0 6px #337ab7;", "\t\t\ttransition: text-shadow .35s, color .35s;", "\t\t}", "\t\t#hypergrid-dialog .hypergrid-dialog-control-panel a:active {", "\t\t\tcolor: #d00;", "\t\t\ttransition: color 0s;", "\t\t}", "\t</style>", "", '\t<span class="hypergrid-dialog-control-panel">', '\t\t<a class="hypergrid-dialog-settings" title="(There are no settings for Manage Filters at this time.)"></a>', '\t\t<a class="hypergrid-dialog-close"></a>', "\t</span>", "", "</div>"].join("\n"), i.filterTrees = ["<style>", "\t#hypergrid-dialog > div {", "\t\tposition: absolute;", "\t\ttop: 0;", "\t\tleft: 0;", "\t\tbottom: 0;", "\t\tright: 0;", "\t}", "\t#hypergrid-dialog > div:first-of-type {", "\t\tpadding: 1em 1em 1em 0.5em;", "\t\tmargin-left: 50%;", "\t}", "\t#hypergrid-dialog > div:last-of-type {", "\t\tpadding: 1em 0.5em 1em 1em;", "\t\tmargin-right: 50%;", "\t}", "\t#hypergrid-dialog > div > p:first-child {", "\t\tmargin-top: 0;", "\t}", "\t#hypergrid-dialog > div > p > span:first-child {", "\t\tfont-size: larger;", "\t\tletter-spacing: 2px;", "\t\tfont-weight: bold;", "\t\tcolor: #666;", "\t\tmargin-right: 1em;", "\t}", "\t#hypergrid-dialog input, #hypergrid-dialog textarea {", "\t\toutline: 0;", "\t\tline-height: initial;", "\t}", "", "\t.tabz { z-index: 0 }", "\t.tabz > p:first-child, .tabz > section > p:first-child, .tabz > section > div > p:first-child { margin-top: 0 }", "", "\t#hypergrid-dialog a.more-info { font-size: smaller; }", "\t#hypergrid-dialog a.more-info::after { content: '(more info)'; }", "\t#hypergrid-dialog a.more-info.hide-info { color: red; }", "\t#hypergrid-dialog a.more-info.hide-info::after { content: '(hide info)'; }", "\t#hypergrid-dialog div.more-info {", "\t\tborder: 1px tan solid;", "\t\tborder-radius: 8px;", "\t\tpadding: 0 8px .2em;", "\t\tdisplay: none;", "\t\tbackground-color: ivory;", "\t\tbox-shadow: 3px 3px 5px #707070;", "\t\tmargin-bottom: 1em;", "\t}", "\t#hypergrid-dialog div.more-info > p { margin: .5em 0; }", "", "\t#hypergrid-dialog .tabz ul {", "\t\tpadding-left: 1.5em;", "\t\tlist-style-type: circle;", "\t\tfont-weight: bold;", "\t}", "\t#hypergrid-dialog .tabz ul > li > ul {", "\t\tlist-style-type: disc;", "\t\tfont-weight: normal;", "\t}", "\t#hypergrid-dialog .tabz li {", "\t\tmargin: .3em 0;", "\t}", "\t#hypergrid-dialog .tabz li > code {", "\t\tbackground: #e0e0e0;", "\t\tmargin: 0 .1em;", "\t\tpadding: 0 5px;", "\t\tborder-radius: 4px;", "\t}", "", "\t#hypergrid-dialog .tabz > section.filter-expression-syntax > div:last-child ol {", "\t\tpadding-left: 1.6em;", "\t}", "\t#hypergrid-dialog .tabz > section.filter-expression-syntax > div:last-child ol > li > label {", "\t\twidth: 100%;", "\t\tfont-weight: normal;", "\t\tdisplay: inline;", "\t}", "\t#hypergrid-dialog .tabz .filter-tree-warn {", "\t\tcolor: darkred;", "\t\tfont-size: smaller;", "\t\tfont-style: italic;", "\t\tline-height: initial;", "\t}", "\t#hypergrid-dialog .tabz > section.filter-expression-syntax > textarea,", "\t#hypergrid-dialog .tabz > section.filter-expression-syntax > div:last-child textarea,", "\t#hypergrid-dialog .tabz > section.filter-expression-syntax > div:last-child input {", "\t\tdisplay: block;", "\t\tposition: relative;", "\t\tmin-width: 100%;", "\t\tmax-width: 100%;", "\t\tbox-sizing: border-box;", "\t\tborder: 1px solid black;", "\t\tpadding: .4em .7em;", "\t\tfont-family: monospace;", "\t\tfont-size: 9pt;", "\t\tmargin-top: 3px;", "\t}", "\t#hypergrid-dialog .tabz > section.filter-expression-syntax > textarea {", "\t\theight: 96%;", "\t}", "\t#hypergrid-dialog .tabz a.filter-copy {", "\t\tdisplay: block;", "\t\tfloat: right;", "\t\tfont-size: smaller;", "\t}", "\t#hypergrid-dialog .tabz a.filter-copy:before {", "\t\tcontent: '(copy';", "\t}", "\t#hypergrid-dialog .tabz a.filter-copy:after {", "\t\tcontent: ')';", "\t}", "\t#hypergrid-dialog .tabz a.filter-copy:active {", "\t\tcolor: red;", "\t}", "</style>", "", "<div>", '\t<select id="add-column-filter-subexpression" style="float:right; margin-left:1em; margin-right:4em;">', '\t\t<option value="">New column filter&hellip;</option>', "\t</select>", "", "\t<p>", "\t\t<span>Column Filters</span>", '\t\t<a class="more-info"></a>', "\t</p>", '\t<div class="more-info">', "\t\t<p>The table filter can be viewed in the Query Builder or as SQL WHERE clause syntax. Both interfaces manipulate the same underlying filter data structure.</p>", "\t\t<p>All column filters are AND&rsquo;d together. Each grid row is first qualified by the table filter and then successively qualified by each column filter subexpression.</p>", "\t</div>", "", '\t<div class="tabz" id="columnFiltersPanel">', "", '\t\t<header id="columnsQB" class="default-tab">', "\t\t\tQuery Builder", "\t\t</header>", "", "\t\t<section>", "\t\t</section>", "", '\t\t<header id="columnsSQL" class="tabz-bg2">', "\t\t\tSQL", "\t\t</header>", "", '\t\t<section class="filter-expression-syntax tabz-bg2">', "\t\t\t<div>", "\t\t\t\t<p>", "\t\t\t\t\t<span></span>", '\t\t\t\t\t<a type="button" class="filter-copy" title="The state of the column filters subtree expressed in SQL syntax (all the column filter subexpressions shown below AND&rsquo;d together).">', "\t\t\t\t\t\tall</a>", "\t\t\t\t</p>", "\t\t\t\t<ol></ol>", "\t\t\t</div>", "\t\t</section>", "", '\t\t<header id="columnsCQL" class="tabz-bg1">', "\t\t\tCQL", "\t\t</header>", "", '\t\t<section class="filter-expression-syntax tabz-bg1">', "\t\t\t<p>", "\t\t\t\t<em>", "\t\t\t\t\t<small>Column filter cells accept a simplified, compact, and intuitive syntax, which is however not as flexible or concise as SQL syntax or using the Query Builder.</small>", '\t\t\t\t\t<a class="more-info"></a>', "\t\t\t\t</em>", "\t\t\t</p>", '\t\t\t<div class="more-info">', "\t\t\t\t<ul>", "\t\t\t\t\t<li>", "\t\t\t\t\t\tSimple expressions", "\t\t\t\t\t\t<ul>", "\t\t\t\t\t\t\t<li>All simple expressions take the form <i>operator literal</i> or <i>operator identifier</i>. The (left side) column is always implied and is the same for all simple expressions in a compound expression. This is because column filters are always tied to a known column.</li>", "", "\t\t\t\t\t\t\t<li>If the operator is an equals sign (=), it may be omitted.</li>", "", "\t\t\t\t\t\t\t<li>Besides operators, no other punctuation is permitted, meaning that no quotation marks and no parentheses.</li>", "", "\t\t\t\t\t\t\t<li>If a literal exactly matches a column name or alias, the operand is not taken literally and instead refers to the value in that column. (There are properties to control what constitutes such a match: Column name, alias, or either; and the case-sensitivity of the match.)</li>", "", "\t\t\t\t\t\t\t<li>As literals are unquoted, any operator symbol or operator word (including logical operators for compound expressions) terminates a literal.</li>", "", "\t\t\t\t\t\t\t<li>An important corollary to the above features is that operators may not appear in literals.</li>", "\t\t\t\t\t\t</ul>", "\t\t\t\t\t</li>", "", "\t\t\t\t\t<li>", "\t\t\t\t\t\tCompound expressions", "\t\t\t\t\t\t<ul>", '\t\t\t\t\t\t\t<li>Compound expressions are formed by connecting simple expressions with the logical operators <code>AND</code>, <code>OR</code>, <code>NOR</code>, or <code>NAND</code> ("not and").</li>', "", "\t\t\t\t\t\t\t<li>However, all logical operators used in a compound column filter expression must be homogeneous. You may not mix the above logical operators in a single column. (If you need to do this, create a table filter expression instead.)</li>", "\t\t\t\t\t\t</ul>", "\t\t\t\t\t</li>", "", "\t\t\t\t\t<li>", "\t\t\t\t\t\tHidden logic", "\t\t\t\t\t\t<ul>", '\t\t\t\t\t\t\t<li>If the column is also referenced in a table filter expression (on the left side of a simple expression), the column filter is flagged in its grid cell with a special star character. This is just a flag; it is not part of the syntax. <span style="color:red; font-style:italic">Not yet implemented.</span></li>', "\t\t\t\t\t\t</ul>", "\t\t\t\t\t</li>", "\t\t\t\t</ul>", "\t\t\t</div>", "", "\t\t\t<div>", "\t\t\t\t<p><span></span></p>", "\t\t\t\t<ol></ol>", "\t\t\t</div>", "\t\t</section>", "\t</div>", "</div>", "", "<div>", "\t<p>", "\t\t<span>Table Filter</span>", '\t\t<a class="more-info"></a>', "\t</p>", '\t<div class="more-info">', "\t\t<p>The table filter can be viewed in the Query Builder or as SQL WHERE clause syntax. Both interfaces manipulate the same underlying filter data structure.</p>", "\t\t<p>", "\t\t\tThese filter subexpressions are both required (<code>AND</code>&rsquo;d together), resulting in a subset of <em>qualified rows</em> which have passed through both filters.", "\t\t\tIt's called a <dfn>tree</dfn> because it contains both <dfn>branches</dfn> and <dfn>leaves</dfn>.", "\t\t\tThe leaves represent <dfn>conditional expressions</dfn> (or simply <dfn>conditionals</dfn>).", "\t\t\tThe branches, also known as <dfn>subtrees</dfn>, contain leaves and/or other branches and represent subexpressions that group conditionals together.", "\t\t\tGrouped conditionals are evaluated together, before conditionals outside the group.", "\t\t</p>", "\t</div>", "", '\t<div class="tabz" id="tableFilterPanel">', '\t\t<header id="tableQB">', "\t\t\tQuery Builder", "\t\t</header>", "", "\t\t<section>", "\t\t</section>", "", '\t\t<header id="tableSQL" class="tabz-bg2">', "\t\t\tSQL", "\t\t</header>", "", '\t\t<section class="filter-expression-syntax tabz-bg2">', "\t\t\t<div>", "\t\t\t\t<p>", "\t\t\t\t\tSQL WHERE clause syntax with certain restrictions.", '\t\t\t\t\t<a class="more-info"></a>', "\t\t\t\t</p>", '\t\t\t\t<div class="more-info">', "\t\t\t\t\t<ul>", "\t\t\t\t\t\t<li>", "\t\t\t\t\t\t\tSimple expressions", "\t\t\t\t\t\t\t<ul>", "\t\t\t\t\t\t\t\t<li>All simple expressions must be of the form <i>column operator literal</i> or <i>column operator identifier</i>. That is, the left side must refer to a column (may not be a literal); whereas the right side may be either.</li>", "", "\t\t\t\t\t\t\t\t<li>Column names may be quoted with the currently set quote characters (typically double-quotes). If unquoted, they must consist of classic identifier syntax (alphanumerics and underscore, but not beginning with a numeral).</li>", "", "\t\t\t\t\t\t\t\t<li>All literals must be quoted strings (using single quotes). (In a future release we expect to support unquoted numeric syntax for columns explicitly typed as numeric.)</li>", "\t\t\t\t\t\t\t</ul>", "\t\t\t\t\t\t</li>", "", "\t\t\t\t\t\t<li>", "\t\t\t\t\t\t\tCompound expressions", "\t\t\t\t\t\t\t<ul>", "\t\t\t\t\t\t\t\t<li>Compound expressions are formed by connecting simple expressions with the logical operators <code>AND</code> or <code>OR</code>.</li>", "", "\t\t\t\t\t\t\t\t<li>However, all logical operators at each level in a complex expression (each parenthesized subexpression) must be homogeneous, <i>i.e.,</i> either <code>AND</code> or <code>OR</code> but not a mixture of the two. In other words, there is no implicit operator precedence; grouping of expressions must always be explicitly stated with parentheses.</li>", "", "\t\t\t\t\t\t\t\t<li>The unary logical operator <code>NOT</code> is supoorted before parentheses only. While the Query Builder and the Column Filter allow they syntax <code>&hellip; NOT <i>operator</i> &hellip;</code> (where <code><i>operator</i></code> is <code>IN</code>, <code>LIKE</code>, <i>etc.</i>), these must be expressed here with parenthethes: <code>NOT (&hellip; <i>operator</i> &hellip;)</code>.</li>", "", "\t\t\t\t\t\t\t\t<li>While the Query Builder and Column Filter syntax support the pseudo-operators <code>NOR</code> and <code>NAND</code>, in SQL these must be expressed as <code>NOT (&hellip; OR &hellip;)</code> and <code>NOT (&hellip; AND &hellip;)</code>, respectively.</li>", "", "\t\t\t\t\t\t\t\t<li>The Query Builder and Column Filter syntax also support the pseudo-operators <code>BEGINS abc</code>, <code>ENDS xyz</code>, and <code>CONTAINS def</code>. These are expressed in SQL by <code>LIKE 'abc%'</code>, <code>LIKE '%xyz'</code>, and <code>LIKE '%def%'</code>, respectively.</li>", "\t\t\t\t\t\t\t</ul>", "\t\t\t\t\t\t</li>", "\t\t\t\t\t</ul>", "\t\t\t\t</div>", "\t\t\t</div>", '\t\t\t<div class="filter-tree-warn"></div>', "\t\t\t<textarea></textarea>", "\t\t</section>", "", "\t</div>", "</div>"].join("\n") }, {}], 3: [function (t, e, i) { e.exports = { calendar: { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAc0lEQVR4nIXQwQkCMRSE4U9ZLMCT9Xjaq2AfNhfYU5oQLMAOtoN48EWei5iBIRPe/yYQ3qrhf1lFG7iKcEaJxSfukUvMWgdHavt0uWHtg2QwxXnAnJZ2uOLyVZtybzzhgWNmfoFl0/YB87NbzR1cjP9xeQHSDC6mcL1xFQAAAABJRU5ErkJggg==" }, checked: { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAA0AAAAPCAYAAAA/I0V3AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC41ZYUyZQAAAYJJREFUOE+NkstLglEQxf0fahG0iFrUxm2ElFDYLohCqCDaCAkWPaxIRbFFEJEaGEKLDCoMETRFUAMLyaIHBUG6sSKIMtKFqEhLT818ZUgmDhzu3DPn9z0uV1RrmUwmyGQyqNVqfFvViwBxu5RFPZuLSyGMKhz/qlEsRV19K8xm6y+w7bpBPFnAferjj3bdQX6DpHcAUwavAHUN2RGIZxBJZHH2mC/TUeydwwTZvBegLENNgw7sX6Wh1FswNmPEmjPCDyGRRwCtW9E3tMgdAtQw7GZjYcNX+gza2wJ3ZXsSZUuQ0vWCOV8SHfJJ/uluhbHUj1v8PKNMszIoQNRMHCShD6Wh8zyhrbOPwz8w+STKlCCJ7oRNUzQH63kBs5thBghePXxlj2aUoSxDPcuXPNiLAc5EEZ6HIkbmV2DYiXBPHs0o079+K0DTVj/s11mE00A0L+g4VcDp10qKZMAzytBhMaTRaPmYg885DlcSzSij0eoEiIouoUqlqqqaL2rlEok+Ad4vlfzPoVDsAAAAAElFTkSuQmCC" }, dialog: { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAH4AAAAUCAMAAAB8knmGAAAAXVBMVEXn4tfm4dfn4tjn49no5Nrp5dzp5Nvm4dbi3NDg2s3o5Nvl4NTh287k39Pp5dvh3M/j3dHk39Tl4NXg287k3tPi3dHh3NDm4tfj3tLh28/o49ro49ng2s7l4dbl4Nb6VbEyAAAC1ElEQVR4AXVV0YKDKAwE4AAVK6SwC9bt/3/mnYJ2tF7ewMEJyWRgjHMuhFT/nEMb261hxbrqh23hRomYhxLrYfXATTm6DTv060q0vxh9+b+SYj3Muj3c5IORAFMBEtD0rKgoAHIJLWLlfpIG8qAAIk3wk9tJKz2E84GrHUvbVhLbyvw0iA2/6ota/Qbbvv+YbUekbUV6R/Dg3YWN+ZyzT/a8X6KpBLpW3cta2FCOLFMkLuZe97PgFJM7joaG9bUHlVyZWM63tGllZp+yzIwipGFJQwJ5rqgX2e7/w9KrwuYMAtBkgTbS73z0r9JD9IJyy2GJEjSQD9kJwiIeTSNxyC9Dz2VcGiKT6IHplr7VynbA+UpVA+bxQYi/kNPknJtSDn9CfebBNPSrZdK0r+6ImE8p5RzDm4szgFtIQNqme3ZkcBsP1rRvJZBbfr6c4O8Qc04pgfJrY5rs4dJ5hhZ0z9z6+x0vys8Oyj5nKEMTP8oLBw+7OAh9TkCdJ8/5Nno4dt6d506dybUYbhTDmFjtxwxjTvjVDhITiJVNoe5LyoGIQk4Ftd+QEcnlYPF+KY+DWc1WgPSqJeXjXxPpT9uXoBqGx6m7jylyvRvm8hGApuNAyWis98rXYvevZVSguzgfw8kGf3aR4gd2DNUcQX1qXHavvLFrpv6L/nt/d+9RXV8OFDCFEAhHBt+qSr6/FN+37JVS7BC9zwOXj6/JW04JLB7m984v/HIiX77m7iH5kL1198ov8OI0ziX01b32Fo9c3VHzce9xdcs+LC0TeHPKRfmulOLcZfTyW2ICz6Dr5Fl4F41o1q1nYeAts6buhieSy3e+kqzM7PP885AtfB0FJOCoUZnUQSyllAU3kmk4ckAuRqC2OXAh1b3ylaBj9Ka3PidQQxJcBEtGrWRncv2ejrEjVCnSX9tYOuBk07YI4J6MYppcBU0pEgOvDtv+xCCTrtwL5l87wVO3O/g5GQAAAABJRU5ErkJggg==" }, "down-rectangle": { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAAkAAAAECAYAAABcDxXOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAadEVYdFNvZnR3YXJlAFBhaW50Lk5FVCB2My41LjExR/NCNwAAABpJREFUGFdjgIL/eDAKIKgABggqgAE0BQwMAPTlD/Fpi0JfAAAAAElFTkSuQmCC" }, "filter-off": { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAMCAYAAABSgIzaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuNWWFMmUAAAChSURBVChTzZHBCoUgFET9TqEiskgyWoutQvRLRIr+cR7XQAjiJW/1BgZmMUevXsY5xy9OoDEGMcYiUzeB67qibVuwQjVNA6311V+WBeM4vsLDMEApde/1fY9pmtI453neHEKAlBJd1z0fXtc16PbjODK07zvmeUZVVd8nooc75zJIOX3Gm6i0bVsGKf8xKIRIuyJTLgJJ3nvQzsjW2geIsQ/pr9hMVrSncAAAAABJRU5ErkJggg==" }, "filter-on": { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAMCAYAAABSgIzaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuNWWFMmUAAACoSURBVChTY3BqfP2fHAzWmDbj7f8p294RhVOBasEa02e+/e/VBmQQCTxaX/9PnvYGoj5ywpv/Qd2ENft3vv4f1gfVBAP+nW/+h/a+ATtn1q73KHjytvdgg3070DTBgHvL6/8g22fsQGiaDmSHA21xaybgIpDHixa8hWssnA8NDEIApCh3LkIjiD2INYJCL2X6W3B8gdhEaQQBUOCA4gyE8+e9xaKJgQEA/74BNE3cElkAAAAASUVORK5CYII=" }, unchecked: { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAA0AAAAPCAYAAAA/I0V3AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC41ZYUyZQAAARBJREFUOE+9krtug1AQRPldSio7FQ1tZImOkoKOBomGT0EURC5ino54yTw90WywQhTkIkVWGoF2zuxdrlD+t0zThKZpT0Vmxb8CQRCg6zr0fb8rer7vfwcPxxdcrx+YpgnzPGNZlh9ibxxHlGUJshLSdV0at9tNpg7DIBrX5+OkPM9BVkKGYSBJEtR1jbZrBdiqbVtUVYU0TUFWQq+nE+I4xvvlImGaW7FHjwxZCVmWhbfzGVmWoSgKWXUr9uiRISshx3FkEldomubXauzRI0NWQp7nyUR+NG/rfr/jUXxnjx5vmKyEbNuWox9Xvid6ZMhK6HA4wnVdhGGIKIp2RY8MWQmx+JuoqvpUZFb8L6UonyYL3uOtrFH+AAAAAElFTkSuQmCC" }, "up-down-spin": { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAPCAYAAADUFP50AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwQAADsEBuJFr7QAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC41ZYUyZQAAAGJJREFUOE+lkwEKACEIBH2Zb/PnHsoGeaVJDUjGOgRRpKpkiIj+y4MME3eDR7kaKOVNsJyMNjIHzGy9YnW6J7qIcrriQimeCqORNABd0fpRTkt8uVUj7EsxC6vs/q3e/Q6iD2bwnByjPXHNAAAAAElFTkSuQmCC" }, "up-down": { type: "image/png", data: "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAPCAYAAADUFP50AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwQAADsEBuJFr7QAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC41ZYUyZQAAAGFJREFUOE+lkkEKQCEIRD2ZJ3Ph3iN4WD9GflpYhj0YYowpGgJmbikd3gjMDFokwbuT1iAiurG5nomgqo5QaPo9ERQRI6Jf7sfGjudy2je23+i0Wl2oQ85TOdlfrJQOazF8br+rqTXQKn0AAAAASUVORK5CYII=" } } }, {}], 4: [function (t, e, i) { "use strict"; var n = t("object-iterators"), o = t("./images"); n(o).each(function (t, e) { var i = new Image; i.src = "data:" + t.type + ";base64," + t.data, o[e] = i }), o.checkbox = function (t) { return o[t ? "checked" : "unchecked"] }, o.filter = function (t) { return o[t ? "filter-on" : "filter-off"] }, e.exports = o }, { "./images": 3, "object-iterators": 42 }], 5: [function (t, e, i) { "use strict"; function n(t, e) { var i = arguments.length > 1; if ("function" == typeof t && (t = t.call(this)), i) { var o = arguments; t = t.replace(n.replacersRegex, function (t, e) { return e -= -1, o.length > e ? o[e] : "" }), t = t.replace(n.encodersRegex, function (t, e) { if (e -= -1, o.length > e) { var i = document.createElement("DIV"); return i.textContent = o[e], i.innerHTML } return "" }) } return t } function o(t, e, i) { var o = "object" != typeof e, r = Array.prototype.slice.call(arguments, 1); return o ? (e = document.createElement("DIV"), r.unshift(t)) : r[0] = t, e.innerHTML = n.apply(null, r), e } function r(t, e, i, n) { var r = 3, s = "object" != typeof i; s && (i = null, r = 2), n = Array.prototype.slice.call(arguments, r); for (var a = [], l = o.apply(null, [t].concat(n)) ; l.childNodes.length;) a.push(l.firstChild), e.insertBefore(l.firstChild, i); return a } function s(t, e) { return o.apply(null, arguments).firstChild } function a(t, e) { return o.apply(null, arguments).firstElementChild } var l = /%\{(\d+)\}/g, u = /\$\{(.*?)\}/g; n.encodersRegex = l, n.replacersRegex = u, n.format = n, n.replace = o, n.append = r, n.firstChild = s, n.firstElement = a, e.exports = n }, {}], 6: [function (t, e, i) { "use strict"; function n(t, e, i) { if ("string" == typeof i) { if (i = document.querySelector(i), !i) throw "Cannot find reference element for CSS injection." } else if (i && !(i instanceof Element)) throw "Given value not a reference element."; var o = i && i.parentNode || document.head || document.getElementsByTagName("head")[0]; if (!e || (e = n.idPrefix + e, !o.querySelector("#" + e))) { var r = document.createElement("style"); return r.type = "text/css", e && (r.id = e), t instanceof Array && (t = t.join("\n")), t = "\n" + t + "\n", r.styleSheet ? r.styleSheet.cssText = t : r.appendChild(document.createTextNode(t)), void 0 === i && (i = o.firstChild), o.insertBefore(r, i), r } } n.idPrefix = "injected-stylesheet-", e.exports = n }, {}], 7: [function (t, e, i) { "use strict"; function n(t, e) { function i() { e.preInitialize && e.preInitialize.apply(this, arguments), r.apply(this, arguments), e.postInitialize && e.postInitialize.apply(this, arguments) } switch (arguments.length) { case 0: e = {}; break; case 1: switch (typeof t) { case "object": e = t, t = void 0; break; case "string": e = {}; break; default: throw "Single-parameter overload must be either string or object." } break; case 2: if ("string" != typeof t || "object" != typeof e) throw "Two-parameter overload must be string, object."; break; default: throw "Too many parameters" } i.extend = n; var o = i.prototype = Object.create(this.prototype); return o.constructor = i, t && (o.$$CLASS_NAME = t), s(o, e), i } function o() { } function r() { function t(n) { var o = Object.getPrototypeOf(n); o.constructor !== Object && (t(o), o.hasOwnProperty("initialize") && o.initialize.apply(e, i)) } var e = this, i = arguments; t(e) } var s = t("overrider"); o.prototype = { constructor: o.prototype.constructor, get super() { return Object.getPrototypeOf(Object.getPrototypeOf(this)) } }, o.extend = n, n.Base = o, e.exports = n }, { overrider: 43 }], 8: [function (t, e, i) { "use strict"; function n() { } function o(t) { this.message = t } n.extend = t("extend-me"), n.prototype = { constructor: n.prototype.constructor, replaceIndent: "_", isNullObject: !0, DataSourceError: o, initialize: function (t) { this.dataSource = t }, get schema() { if (this.dataSource) return this.dataSource.schema }, set schema(t) { this.dataSource && (this.dataSource.schema = t) }, setSchema: function () { if (this.dataSource) return this.dataSource.setSchema.apply(this.dataSource, arguments) }, setData: function () { if (this.dataSource) return this.dataSource.setData.apply(this.dataSource, arguments) }, setValue: function () { if (this.dataSource) return this.dataSource.setValue.apply(this.dataSource, arguments) }, getSchema: function () { if (this.dataSource) return this.dataSource.getSchema() }, getRowCount: function () { if (this.dataSource) return this.dataSource.getRowCount() }, getColumnCount: function () { if (this.dataSource) return this.dataSource.getColumnCount() }, getGrandTotals: function () { if (this.dataSource) return this.dataSource.getGrandTotals() }, getProperty: function r(t) { return t in this ? this[t] : this.dataSource ? r.call(this.dataSource, t) : void 0 }, getDataIndex: function () { if (this.dataSource) return this.dataSource.getDataIndex.apply(this.dataSource, arguments) }, getRow: function () { if (this.dataSource) return this.dataSource.getRow.apply(this.dataSource, arguments) }, findRow: function () { if (this.dataSource) return this.dataSource.findRow.apply(this.dataSource, arguments) }, revealRow: function () { if (this.dataSource) return this.dataSource.revealRow.apply(this.dataSource, arguments) }, getValue: function () { if (this.dataSource) return this.dataSource.getValue.apply(this.dataSource, arguments) }, click: function () { if (this.dataSource) return this.dataSource.click.apply(this.dataSource, arguments) }, isDrillDown: function () { if (this.dataSource) return this.dataSource.isDrillDown() }, viewMakesSense: function () { if (this.dataSource) return this.dataSource.viewMakesSense() }, apply: function () { throw new o("Nothing to apply.") }, getColumnInfo: function (t, e) { var i, n; if (void 0 === t && (t = e), "number" == typeof t ? i = this.getFields()[n = t] : n = this.getFields().indexOf(i = t), i && n >= 0) return { name: i, index: n } }, fixIndentForTableDisplay: function (t) { var e = t.search(/\S/), i = t.substring(e), n = Array(e + 1).join(this.replaceIndent) + i; return n }, dump: function (t) { t = Math.min(this.getRowCount(), t || Math.max(100, this.getRowCount())); for (var e = [], i = this.schema ? this.schema.map(function (t) { return t.name }) : this.getHeaders(), n = this.getColumnCount(), o = this.viewMakesSense, r = 0; r < t; r++) { for (var s = {}, a = 0; a < n; a++) { var l = this.getValue(a, r); 0 === a && o && (l = this.fixIndentForTableDisplay(l)), s[i[a]] = l } e[r] = s } console.table(e) } }, o.prototype = Object.create(Error.prototype), o.prototype.name = "DataSourceError", e.exports = n }, { "extend-me": 7 }], 9: [function (t, e, i) {
        "use strict"; function n(t) { var e = this._bound = {}; for (s in u) e[s] = u[s].bind(this); var i = this.thumb = document.createElement("div"); i.classList.add("thumb"), i.onclick = e.shortStop, i.onmouseover = e.onmouseover, i.onmouseout = this._bound.onmouseout; var o = this.bar = document.createElement("div"); o.classList.add("finbar-vertical"), o.onmousedown = this._bound.onmousedown, this.paging && (o.onclick = e.onclick), o.appendChild(i), t = t || {}, this.orientation = "vertical", this._min = this._index = 0, this._max = 100; for (var s in t) if (t.hasOwnProperty(s)) { var c = t[s]; switch (s) { case "index": this._index = c; break; case "range": r(c), this._min = c.min, this._max = c.max, this.contentSize = c.max - c.min + 1; break; default: "_" !== s.charAt(0) && "function" != typeof n.prototype[s] && (this[s] = c) } } a(l, "finbar-base", t.cssStylesheetReferenceElement) } function o(t) { for (var e = 1; e < arguments.length; ++e) { var i = arguments[e]; if (i) for (var n in i) t[n] = i[n] } return t } function r(t) { var e = Object.keys(t), i = 2 === e.length && "number" == typeof t.min && "number" == typeof t.max && t.min <= t.max; i || s("Invalid .range object.") } function s(t) { throw "finbars: " + t } var a = t("css-injector"); n.prototype = {
            set orientation(t) { t !== this._orientation && (this._orientation = t, this.oh = c[this._orientation], this.oh || s("Invalid value for `options._orientation."), this.deltaProp = this.oh.delta, this.bar.className = this.bar.className.replace(/(vertical|horizontal)/g, t), (this.bar.style.cssText || this.thumb.style.cssText) && (this.bar.removeAttribute("style"), this.thumb.removeAttribute("style"), this.resize())) }, get orientation() { return this._orientation }, onchange: null, set classPrefix(t) { this._classPrefix && this.bar.classList.remove(this._classPrefix + this.orientation), this._classPrefix = t, t && this.bar.classList.add(t + "-" + this.orientation) }, get classPrefix() { return this._classPrefix }, increment: 1, barStyles: null, set style(t) { var e = Object.keys(t = o({}, t, this._auxStyles)); if (e.length) { var i = this.bar, n = i.getBoundingClientRect(), r = this.container || i.parentElement, s = r.getBoundingClientRect(), a = this.oh; i.removeAttribute("style"), e.forEach(function (e) { var o = t[e]; if (e in a && (e = a[e]), isNaN(Number(o))) { if (/%$/.test(o)) { var r = h[e], l = n[r.marginLeading] + n[r.marginTrailing]; l && (o = parseInt(o, 10) / 100 * s[r.size] - l + "px") } } else o = (o || 0) + "px"; i.style[e] = o }) } }, paging: !0, set range(t) { r(t), this._min = t.min, this._max = t.max, this.contentSize = t.max - t.min + 1, this.index = this.index }, get range() { return { min: this._min, max: this._max } }, set index(t) { t = Math.min(this._max, Math.max(this._min, t)), this._setScroll(t) }, get index() { return this._index }, _setScroll: function (t, e) { this._index = t, this.testPanelItem && this.testPanelItem.index instanceof Element && (this.testPanelItem.index.innerHTML = Math.round(t)), this.onchange && this.onchange.call(this, Math.round(t)), void 0 === e && (e = (t - this._min) / (this._max - this._min) * this._thumbMax), this.thumb.style[this.oh.leading] = e + "px" }, scrollRealContent: function (t) { var e = this.content.parentElement.getBoundingClientRect(), i = this.oh.size, n = Math.max(0, this.content[i] - e[i]), o = (t - this._min) / (this._max - this._min) * n; this.content.style[this.oh.leading] = -o + "px" }, resize: function (t, e) {
                var i = this.bar; if (i.parentNode) {
                    var n = this.container || i.parentElement, o = n.getBoundingClientRect(); "object" == typeof t && (e = t, t = void 0), this.style = this.barStyles = e || this.barStyles, this.content && (this.onchange || (this.onchange = this.scrollRealContent, this.contentSize = this.content[this.oh.size], this._min = 0, this._max = this.contentSize - 1)), this.onchange === this.scrollRealContent ? (this.containerSize = o[this.oh.size], this.increment = this.containerSize / (this.contentSize - this.containerSize) * (this._max - this._min)) : (this.containerSize = 1,
                    this.increment = t || this.increment); var r = this.index; return this.testPanelItem = this.testPanelItem || this._addTestPanelItem(), this._setThumbSize(), this.index = r, null !== this.deltaProp && n.addEventListener("wheel", this._bound.onwheel), this
                }
            }, shortenBy: function (t) { return this.shortenEndBy("trailing", t) }, foreshortenBy: function (t) { return this.shortenEndBy("leading", t) }, shortenEndBy: function (t, e) { if (e) { if (e instanceof n && e.orientation !== this.orientation) { var i = window.getComputedStyle(e.bar), o = c[e.orientation]; this._auxStyles = {}, this._auxStyles[t] = i[o.thickness] } } else delete this._auxStyles; return this }, _setThumbSize: function () { var t = this.oh, e = window.getComputedStyle(this.thumb), i = parseInt(e[t.marginLeading]), n = parseInt(e[t.marginTrailing]), o = i + n, r = this.bar.getBoundingClientRect()[t.size], s = Math.max(20, r * this.containerSize / this.contentSize); this.containerSize < this.contentSize ? (this.bar.style.visibility = "visible", this.thumb.style[t.size] = s + "px") : this.bar.style.visibility = "hidden", this._thumbMax = r - s - o, this._thumbMarginLeading = i }, remove: function () { this.bar.onmousedown = null, this._removeEvt("mousemove"), this._removeEvt("mouseup"), (this.container || this.bar.parentElement)._removeEvt("wheel", this._bound.onwheel), this.bar.onclick = this.thumb.onclick = this.thumb.onmouseover = this.thumb.transitionend = this.thumb.onmouseout = null, this.bar.remove() }, _addTestPanelItem: function () { var t, e = document.querySelector("." + this._classPrefix + ".test-panel") || document.querySelector(".test-panel"); if (e) { var i = ["mousedown", "mousemove", "mouseup", "index"], n = document.createElement("li"); i.forEach(function (t) { n.innerHTML += '<span class="' + t + '">' + t.replace("mouse", "") + "</span>" }), e.appendChild(n), t = {}, i.forEach(function (e) { t[e] = n.getElementsByClassName(e)[0] }) } return t }, _addEvt: function (t) { var e = this.testPanelItem && this.testPanelItem[t]; e && e.classList.add("listening"), window.addEventListener(t, this._bound["on" + t]) }, _removeEvt: function (t) { var e = this.testPanelItem && this.testPanelItem[t]; e && e.classList.remove("listening"), window.removeEventListener(t, this._bound["on" + t]) }
        }; var l, u = { shortStop: function (t) { t.stopPropagation() }, onwheel: function (t) { this.index += t[this.deltaProp], t.stopPropagation(), t.preventDefault() }, onclick: function (t) { var e = this.thumb.getBoundingClientRect(), i = t[this.oh.coordinate] < e[this.oh.leading]; "object" == typeof this.paging ? this.index = this.paging[i ? "up" : "down"](Math.round(this.index)) : this.index += i ? -this.increment : this.increment, this.thumb.classList.add("hover"); var n = this; this.thumb.addEventListener("transitionend", function o() { this.removeEventListener("transitionend", o), n._bound.onmouseup(t) }), t.stopPropagation() }, onmouseover: function () { this.thumb.classList.add("hover") }, onmouseout: function () { this.thumb.classList.remove("hover") }, onmousedown: function (t) { var e = this.thumb.getBoundingClientRect(); this.pinOffset = t[this.oh.axis] - e[this.oh.leading] + this.bar.getBoundingClientRect()[this.oh.leading] + this._thumbMarginLeading, document.documentElement.style.cursor = "default", this._addEvt("mousemove"), this._addEvt("mouseup"), t.stopPropagation(), t.preventDefault() }, onmousemove: function (t) { var e = Math.min(this._thumbMax, Math.max(0, t[this.oh.axis] - this.pinOffset)), i = e / this._thumbMax * (this._max - this._min) + this._min; this._setScroll(i, e), t.stopPropagation(), t.preventDefault() }, onmouseup: function (t) { this._removeEvt("mousemove"), this._removeEvt("mouseup"), document.documentElement.style.cursor = "auto"; var e = this.thumb.getBoundingClientRect(); e.left <= t.clientX && t.clientX <= e.right && e.top <= t.clientY && t.clientY <= e.bottom ? this._bound.onmouseover(t) : this._bound.onmouseout(t), t.stopPropagation(), t.preventDefault() } }, c = { vertical: { coordinate: "clientY", axis: "pageY", size: "height", outside: "right", inside: "left", leading: "top", trailing: "bottom", marginLeading: "marginTop", marginTrailing: "marginBottom", thickness: "width", delta: "deltaY" }, horizontal: { coordinate: "clientX", axis: "pageX", size: "width", outside: "bottom", inside: "top", leading: "left", trailing: "right", marginLeading: "marginLeft", marginTrailing: "marginRight", thickness: "height", delta: "deltaX" } }, h = { top: "vertical", bottom: "vertical", height: "vertical", left: "horizontal", right: "horizontal", width: "horizontal" }; l = "div.finbar-horizontal,div.finbar-vertical{position:absolute;margin:3px}div.finbar-horizontal>.thumb,div.finbar-vertical>.thumb{position:absolute;background-color:#d3d3d3;-webkit-box-shadow:0 0 1px #000;-moz-box-shadow:0 0 1px #000;box-shadow:0 0 1px #000;border-radius:4px;margin:2px;opacity:.4;transition:opacity .5s}div.finbar-horizontal>.thumb.hover,div.finbar-vertical>.thumb.hover{opacity:1;transition:opacity .5s}div.finbar-vertical{top:0;bottom:0;right:0;width:11px}div.finbar-vertical>.thumb{top:0;right:0;width:7px}div.finbar-horizontal{left:0;right:0;bottom:0;height:11px}div.finbar-horizontal>.thumb{left:0;bottom:0;height:7px}", e.exports = n
    }, { "css-injector": 6 }], 10: [function (t, e, i) { "use strict"; function n(t, e, i) { var n = this; this.div = t, this.component = e, i = i || {}, this.doubleClickDelay = i.doubleClickDelay || 325, this.dragEndtime = Date.now(), this.canvas = document.createElement("canvas"), this.div.appendChild(this.canvas), this.canvas.style.outline = "none", this.canvasCTX = this.canvas.getContext("2d"), this.gc = new l(this.canvasCTX), this.buffer = document.createElement("canvas"), this.bufferCTX = this.buffer.getContext("2d"), this.bufferGC = new l(this.bufferCTX), this.mouseLocation = new a.Point((-1), (-1)), this.dragstart = new a.Point((-1), (-1)), this.bounds = new a.Rectangle(0, 0, 0, 0), this.hasMouse = !1, document.addEventListener("mousemove", function (t) { (n.hasMouse || n.isDragging()) && n.finmousemove(t) }), document.addEventListener("mouseup", function (t) { n.finmouseup(t) }), document.addEventListener("wheel", function (t) { n.finwheelmoved(t) }), document.addEventListener("keydown", function (t) { n.finkeydown(t) }), document.addEventListener("keyup", function (t) { n.finkeyup(t) }), this.canvas.onmouseover = function () { n.hasMouse = !0 }, this.canvas.addEventListener("focus", function (t) { n.finfocusgained(t) }), this.canvas.addEventListener("blur", function (t) { n.finfocuslost(t) }), this.canvas.addEventListener("mousedown", function (t) { n.finmousedown(t) }), this.canvas.addEventListener("mouseout", function (t) { n.hasMouse = !1, n.finmouseout(t) }), this.canvas.addEventListener("click", function (t) { n.finclick(t) }), this.canvas.addEventListener("contextmenu", function (t) { return n.fincontextmenu(t), t.preventDefault(), !1 }), this.canvas.setAttribute("tabindex", 0), this.canvas.contentEditable = !0, this.resize(), this.beginResizing(), this.beginPainting() } function o(t) { if (d) { for (var e = 0; e < c.length; e++) try { c[e].tickPainter(t) } catch (i) { console.error(i) } requestAnimationFrame(o) } } function r(t) { if (g) for (var e = 0; e < h.length; e++) try { h[e].tickResizer(t) } catch (i) { console.error(i) } } function s() { for (var t = [], e = ["", ""], i = 0; i < 256; i++) t[i] = e; return t[27] = ["ESC", "ESCSHIFT"], t[192] = ["`", "~"], t[49] = ["1", "!"], t[50] = ["2", "@"], t[51] = ["3", "#"], t[52] = ["4", "$"], t[53] = ["5", "%"], t[54] = ["6", "^"], t[55] = ["7", "&"], t[56] = ["8", "*"], t[57] = ["9", "("], t[48] = ["0", ")"], t[189] = ["-", "_"], t[187] = ["=", "+"], t[8] = ["BACKSPACE", "BACKSPACESHIFT"], t[46] = ["DELETE", "DELETESHIFT"], t[9] = ["TAB", "TABSHIFT"], t[81] = ["q", "Q"], t[87] = ["w", "W"], t[69] = ["e", "E"], t[82] = ["r", "R"], t[84] = ["t", "T"], t[89] = ["y", "Y"], t[85] = ["u", "U"], t[73] = ["i", "I"], t[79] = ["o", "O"], t[80] = ["p", "P"], t[219] = ["[", "{"], t[221] = ["]", "}"], t[220] = ["\\", "|"], t[220] = ["CAPSLOCK", "CAPSLOCKSHIFT"], t[65] = ["a", "A"], t[83] = ["s", "S"], t[68] = ["d", "D"], t[70] = ["f", "F"], t[71] = ["g", "G"], t[72] = ["h", "H"], t[74] = ["j", "J"], t[75] = ["k", "K"], t[76] = ["l", "L"], t[186] = [";", ":"], t[222] = ["'", "|"], t[13] = ["RETURN", "RETURNSHIFT"], t[16] = ["SHIFT", "SHIFT"], t[90] = ["z", "Z"], t[88] = ["x", "X"], t[67] = ["c", "C"], t[86] = ["v", "V"], t[66] = ["b", "B"], t[78] = ["n", "N"], t[77] = ["m", "M"], t[188] = [",", "<"], t[190] = [".", ">"], t[191] = ["/", "?"], t[16] = ["SHIFT", "SHIFT"], t[17] = ["CTRL", "CTRLSHIFT"], t[18] = ["ALT", "ALTSHIFT"], t[91] = ["COMMANDLEFT", "COMMANDLEFTSHIFT"], t[32] = ["SPACE", "SPACESHIFT"], t[93] = ["COMMANDRIGHT", "COMMANDRIGHTSHIFT"], t[18] = ["ALT", "ALTSHIFT"], t[38] = ["UP", "UPSHIFT"], t[37] = ["LEFT", "LEFTSHIFT"], t[40] = ["DOWN", "DOWNSHIFT"], t[39] = ["RIGHT", "RIGHTSHIFT"], t[33] = ["PAGEUP", "PAGEUPSHIFT"], t[34] = ["PAGEDOWN", "PAGEDOWNSHIFT"], t[35] = ["PAGERIGHT", "PAGERIGHTSHIFT"], t[36] = ["PAGELEFT", "PAGELEFTSHIFT"], t[112] = ["F1", "F1SHIFT"], t[113] = ["F2", "F2SHIFT"], t[114] = ["F3", "F3SHIFT"], t[115] = ["F4", "F4SHIFT"], t[116] = ["F5", "F5SHIFT"], t[117] = ["F6", "F6SHIFT"], t[118] = ["F7", "F7SHIFT"], t[119] = ["F8", "F8SHIFT"], t[120] = ["F9", "F9SHIFT"], t[121] = ["F10", "F10SHIFT"], t[122] = ["F11", "F1S1HIFT"], t[123] = ["F12", "F121HIFT"], t } "function" != typeof window.CustomEvent && (window.CustomEvent = function (t, e) { e = e || { bubbles: !1, cancelable: !1, detail: void 0 }; var i = document.createEvent("CustomEvent"); return i.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), i }, window.CustomEvent.prototype = window.Event.prototype); var a = t("rectangular"), l = t("./js/GraphicsContext.js"), u = 200, c = [], h = [], d = !0, g = !0, f = s(); n.prototype = { constructor: n.prototype.constructor, div: null, component: null, canvas: null, canvasCTX: null, focuser: null, buffer: null, ctx: null, mouseLocation: null, dragstart: null, origin: null, bounds: null, dirty: !1, size: null, mousedown: !1, dragging: !1, repeatKeyCount: 0, repeatKey: null, repeatKeyStartTime: 0, currentKeys: [], hasMouse: !1, lastDoubleClickTime: 0, dragEndTime: 0, lastRepaintTime: 0, currentPaintCount: 0, currentFPS: 0, lastFPSComputeTime: 0, addEventListener: function (t, e) { this.canvas.addEventListener(t, e) }, stopPaintLoop: function () { d = !1 }, restartPaintLoop: function () { d || (d = !0, requestAnimationFrame(o)) }, stopResizeLoop: function () { g = !1 }, restartResizeLoop: function () { g || (g = !0, setInterval(r, 200)) }, detached: function () { this.stopPainting(), this.stopResizing() }, useHiDPI: function () { return this.component.resolveProperty("useHiDPI") }, useBitBlit: function () { return this.component.resolveProperty("useBitBlit") }, getFPS: function () { var t = this.component.resolveProperty("repaintIntervalRate"); return t ? parseInt(t) : 0 }, getEnableContinuousRepaint: function () { return this.component.resolveProperty("enableContinuousRepaint") }, getCurrentFPS: function () { return this.currentFPS }, tickPaint: function (t) { var e = this.getFPS(), i = this.getEnableContinuousRepaint(); if (0 !== e) { var n = 1e3 / e, o = t - this.lastRepaintTime; o > n && (i || this.dirty) && (this.paintNow(), this.lastRepaintTime = t, i && (this.currentPaintCount++, t - this.lastFPSComputeTime >= 1e3 && (this.currentFPS = 1e3 * this.currentPaintCount / (t - this.lastFPSComputeTime), this.currentPaintCount = 0, this.lastFPSComputeTime = t))) } }, beginPainting: function () { var t = this; this.dirty = !0, this.tickPainter = function (e) { t.tickPaint(e) }, c.push(this) }, stopPainting: function () { c.splice(c.indexOf(this), 1) }, beginResizing: function () { var t = this; this.tickResizer = function () { t.checksize() }, h.push(this) }, stopResizing: function () { h.splice(h.indexOf(this), 1) }, start: function () { this.beginPainting(), this.beginResizing() }, stop: function () { this.stopPainting(), this.stopResizing() }, checksize: function () { var t = this.div.getBoundingClientRect(); t.width === this.size.width && t.height === this.size.height || this.sizeChangedNotification() }, sizeChangedNotification: function () { this.resize() }, resize: function () { var t = this.size = this.div.getBoundingClientRect(); this.width = t.width, this.height = t.height; var e = 1, i = this.useBitBlit(), n = window.devicePixelRatio && this.useHiDPI(); if (n) { var o = window.devicePixelRatio || 1, r = this.canvasCTX.webkitBackingStorePixelRatio || this.canvasCTX.mozBackingStorePixelRatio || this.canvasCTX.msBackingStorePixelRatio || this.canvasCTX.oBackingStorePixelRatio || this.canvasCTX.backingStorePixelRatio || 1; e = o / r } this.buffer.width = this.canvas.width = this.width * e, this.buffer.height = this.canvas.height = this.height * e, this.canvas.style.width = this.buffer.style.width = this.width + "px", this.canvas.style.height = this.buffer.style.height = this.height + "px", this.bufferCTX.scale(e, e), n && !i && this.canvasCTX.scale(e, e), this.bounds = new a.Rectangle(0, 0, this.width, this.height); var s = this.component; s && s.setBounds(this.bounds), this.resizeNotification(), this.paintNow() }, resizeNotification: function () { }, getBounds: function () { return this.bounds }, paintNow: function () { var t = this; this.safePaintImmediately(function (e) { e.clearRect(0, 0, t.width, t.height); var i = t.component; i && i.paint(e), t.dirty = !1 }) }, safePaintImmediately: function (t) { var e = this.useBitBlit(), i = e ? this.bufferGC : this.gc; try { i.save(), t(i) } catch (n) { console.error(n) } finally { i.restore() } e && this.flushBuffer() }, flushBuffer: function () { this.buffer.width > 0 && this.buffer.height > 0 && this.canvasCTX.drawImage(this.buffer, 0, 0) }, dispatchNewEvent: function (t, e, i) { return i = { detail: i || {} }, i.detail.primitiveEvent = t, this.canvas.dispatchEvent(new CustomEvent(e, i)) }, dispatchNewMouseKeysEvent: function (t, e, i) { return i = i || {}, i.mouse = this.mouseLocation, i.keys = this.currentKeys, this.dispatchNewEvent(t, e, i) }, finmousemove: function (t) { !this.isDragging() && this.mousedown && (this.beDragging(), this.dispatchNewMouseKeysEvent(t, "fin-canvas-dragstart", { isRightClick: this.isRightClick(t) }), this.dragstart = new a.Point(this.mouseLocation.x, this.mouseLocation.y)), this.mouseLocation = this.getLocal(t), this.isDragging() && this.dispatchNewMouseKeysEvent(t, "fin-canvas-drag", { dragstart: this.dragstart, isRightClick: this.isRightClick(t) }), this.bounds.contains(this.mouseLocation) && this.dispatchNewMouseKeysEvent(t, "fin-canvas-mousemove") }, finmousedown: function (t) { this.mouseLocation = this.mouseDownLocation = this.getLocal(t), this.mousedown = !0, this.dispatchNewMouseKeysEvent(t, "fin-canvas-mousedown", { isRightClick: this.isRightClick(t) }), this.takeFocus() }, finmouseup: function (t) { this.isDragging() && (this.dispatchNewMouseKeysEvent(t, "fin-canvas-dragend", { dragstart: this.dragstart, isRightClick: this.isRightClick(t) }), this.beNotDragging(), this.dragEndtime = Date.now()), this.mousedown = !1, this.dispatchNewMouseKeysEvent(t, "fin-canvas-mouseup", { isRightClick: this.isRightClick(t) }) }, finmouseout: function (t) { this.mousedown || (this.mouseLocation = new a.Point((-1), (-1))), this.dispatchNewMouseKeysEvent(t, "fin-canvas-mouseout") }, finwheelmoved: function (t) { !this.isDragging() && this.hasFocus() && (t.preventDefault(), this.dispatchNewMouseKeysEvent(t, "fin-canvas-wheelmoved", { isRightClick: this.isRightClick(t) })) }, finclick: function (t) { this.doubleClickTimer && Date.now() - this.lastClickTime < this.doubleClickDelay ? (clearTimeout(this.doubleClickTimer), this.doubleClickTimer = void 0, this.findblclick(t)) : (this.lastClickTime = Date.now(), this.doubleClickTimer = setTimeout(function () { this.doubleClickTimer = void 0, this.mouseLocation = this.getLocal(t), this.dispatchNewMouseKeysEvent(t, "fin-canvas-click", { isRightClick: this.isRightClick(t) }) }.bind(this), this.doubleClickDelay)) }, findblclick: function (t) { this.mouseLocation = this.getLocal(t), this.lastDoubleClickTime = Date.now(), this.dispatchNewMouseKeysEvent(t, "fin-canvas-dblclick", { isRightClick: this.isRightClick(t) }) }, getCharMap: function () { return f }, finkeydown: function (t) { if (this.hasFocus()) { var e = t.shiftKey ? f[t.keyCode][1] : f[t.keyCode][0]; t.repeat ? this.repeatKey === e ? this.repeatKeyCount++ : (this.repeatKey = e, this.repeatKeyStartTime = Date.now()) : (this.repeatKey = null, this.repeatKeyCount = 0, this.repeatKeyStartTime = 0), this.currentKeys.indexOf(e) === -1 && this.currentKeys.push(e), this.dispatchNewEvent(t, "fin-canvas-keydown", { alt: t.altKey, ctrl: t.ctrlKey, "char": e, code: t.charCode, key: t.keyCode, meta: t.metaKey, repeatCount: this.repeatKeyCount, repeatStartTime: this.repeatKeyStartTime, shift: t.shiftKey, identifier: t.key, currentKeys: this.currentKeys.slice(0) }) } }, finkeyup: function (t) { var e = t.shiftKey ? f[t.keyCode][1] : f[t.keyCode][0]; this.currentKeys.splice(this.currentKeys.indexOf(e), 1), this.hasFocus() && (this.repeatKeyCount = 0, this.repeatKey = null, this.repeatKeyStartTime = 0, this.dispatchNewEvent(t, "fin-canvas-keyup", { alt: t.altKey, ctrl: t.ctrlKey, "char": e, code: t.charCode, key: t.keyCode, meta: t.metaKey, repeat: t.repeat, shift: t.shiftKey, identifier: t.key, currentKeys: this.currentKeys.slice(0) })) }, finfocusgained: function (t) { this.dispatchNewEvent(t, "fin-canvas-focus-gained") }, finfocuslost: function (t) { this.dispatchNewEvent(t, "fin-canvas-focus-lost") }, fincontextmenu: function (t) { t.ctrlKey && this.currentKeys.indexOf("CTRL") === -1 && this.currentKeys.push("CTRL"), this.doubleRightClickTimer && Date.now() - this.lastClickTime < this.doubleClickDelay ? (clearTimeout(this.doubleRightClickTimer), this.doubleRightClickTimer = void 0, this.findblclick(t)) : (this.lastClickTime = Date.now(), this.doubleRightClickTimer = setTimeout(function () { this.doubleRightClickTimer = void 0, this.dispatchNewMouseKeysEvent(t, "fin-canvas-context-menu", { isRightClick: this.isRightClick(t) }) }.bind(this), this.doubleClickDelay)) }, repaint: function () { var t = this.getFPS(); this.dirty = !0, d && 0 !== t || this.paintNow() }, getMouseLocation: function () { return this.mouseLocation }, getOrigin: function () { var t = this.canvas.getBoundingClientRect(), e = new a.Point(t.left, t.top); return e }, getLocal: function (t) { var e = this.canvas.getBoundingClientRect(), i = new a.Point(t.clientX - e.left, t.clientY - e.top); return i }, hasFocus: function () { return document.activeElement === this.canvas }, takeFocus: function () { var t = this; this.hasFocus() || setTimeout(function () { t.canvas.focus() }, 10) }, beDragging: function () { this.dragging = !0, this.disableDocumentElementSelection() }, beNotDragging: function () { this.dragging = !1, this.enableDocumentElementSelection() }, isDragging: function () { return this.dragging }, disableDocumentElementSelection: function () { var t = document.body.style; t.cssText = t.cssText + "-webkit-user-select: none" }, enableDocumentElementSelection: function () { var t = document.body.style; t.cssText = t.cssText.replace("-webkit-user-select: none", "") }, setFocusable: function (t) { this.focuser.style.display = t ? "" : "none" }, isRightClick: function (t) { var e; return t = t || window.event, "which" in t ? e = 3 === t.which : "button" in t && (e = 2 === t.button), e }, dispatchEvent: function (t) { return this.canvas.dispatchEvent(t) } }, requestAnimationFrame(o), setInterval(r, u), e.exports = n }, { "./js/GraphicsContext.js": 11, rectangular: 45 }], 11: [function (t, e, i) { "use strict"; function n(t, e) { function i(i) { i in n.prototype || s.test(i) || ("function" == typeof t[i] ? r[i] = e ? function () { return e(i, arguments, t[i].apply(t, arguments)) } : t[i].bind(t) : Object.defineProperty(r, i, { get: function () { var n = t[i]; return e ? e(i, "getter", n) : n }, set: function (n) { t[i] = e ? e(i, "setter", n) : n } })) } this.gc = t; var r = this, s = /^webkit/; switch (typeof e) { case "string": e = o.bind(void 0, e + "."); break; case "boolean": e === !0 && (e = o.bind(void 0, "gc.")); break; case "function": if (3 !== e.length) throw "GraphicsContext: User-supplied API logger function does not accept three parameters."; break; default: e = !1 } Object.keys(Object.getPrototypeOf(t)).forEach(i), Object.keys(t).forEach(i) } var o = t("./gc-console-logger"); e.exports = n }, { "./gc-console-logger": 12 }], 12: [function (t, e, i) { "use strict"; function n(t, e, i, n) { var r = n; switch ("string" == typeof n && (r = '"' + r + '"'), e = t + e, i) { case "getter": console.log(e, "=", r); break; case "setter": console.log(e, o, r); break; default: e += "(" + Array.prototype.slice.call(i).join(", ") + ")", void 0 === r ? console.log(e) : console.log(e, o, r) } return n } var o = "⟹"; e.exports = n }, {}], 13: [function (t, e, i) { "use strict"; e.exports = { JSDataSource: t("./js/DataSource"), DataSourceSorter: t("./js/DataSourceSorter"), DataSourceSorterComposite: t("./js/DataSourceSorterComposite"), DataSourceGlobalFilter: t("./js/DataSourceGlobalFilter"), DataSourceGroupView: t("./js/DataSourceGroupView"), DataSourceAggregator: t("./js/DataSourceAggregator"), DataSourceTreeview: t("./js/DataSourceTreeview"), DataSourceTreeviewFilter: t("./js/DataSourceTreeviewFilter"), DataSourceTreeviewSorter: t("./js/DataSourceTreeviewSorter"), DataNodeGroupSorter: t("./js/DataNodeGroupSorter"), util: { aggregations: t("./js/util/aggregations"), Mappy: t("./js/util/Mappy"), stableSort: t("./js/util/stableSort"), headerify: t("./js/util/headerify") } } }, { "./js/DataNodeGroupSorter": 21, "./js/DataSource": 24, "./js/DataSourceAggregator": 25, "./js/DataSourceGlobalFilter": 27, "./js/DataSourceGroupView": 28, "./js/DataSourceSorter": 30, "./js/DataSourceSorterComposite": 31, "./js/DataSourceTreeview": 32, "./js/DataSourceTreeviewFilter": 33, "./js/DataSourceTreeviewSorter": 34, "./js/util/Mappy": 35, "./js/util/aggregations": 36, "./js/util/headerify": 37, "./js/util/stableSort": 38 }], 14: [function (t, e, i) { "use strict"; var n = { getRowData: function (t) { var e = this.getIndex(); if (e.length) { var i = Number(t.hasGroups()), n = this.data; n.length = i + t.aggregates.length; var o = t.sorterInstance; o.index = e, t.aggregates.forEach(function (t, e) { n[i + e] = t(o) }) } } }; e.exports = n }, {}], 15: [function (t, e, i) { "use strict"; var n = t("./AggregatorNodeBaseMixin"), o = t("./DataNodeGroup"), r = o.extend("AggregatorNodeGroup", { getRowData: function (t) { n.getRowData.apply(this, arguments), this.expanded && this.children.forEach(function (e) { e.getRowData(t) }) } }); e.exports = r }, { "./AggregatorNodeBaseMixin": 14, "./DataNodeGroup": 20 }], 16: [function (t, e, i) { "use strict"; var n = t("./AggregatorNodeBaseMixin"), o = t("./DataNodeLeaf"), r = o.extend("AggregatorNodeLeaf", n); e.exports = r }, { "./AggregatorNodeBaseMixin": 14, "./DataNodeLeaf": 22 }], 17: [function (t, e, i) { "use strict"; var n = t("./AggregatorNodeBaseMixin"), o = t("./DataNodeTree"), r = o.extend("AggregatorNodeTree", { getRowData: function (t) { n.getRowData.apply(this, arguments), this.expanded && this.children.forEach(function (e) { e.getRowData(t) }) } }); e.exports = r }, { "./AggregatorNodeBaseMixin": 14, "./DataNodeTree": 23 }], 18: [function (t, e, i) { "use strict"; var n = t("fin-hypergrid-data-source-base"); n.prototype.getFields = function () { if (this.dataSource) return this.dataSource.getFields() }, n.prototype.getHeaders = function () { if (this.dataSource) return this.dataSource.getHeaders() }, n.prototype.getCalculators = function () { if (this.dataSource) return this.dataSource.revealRow() }, n.prototype.setFields = function (t) { if (this.dataSource) return this.dataSource.setFields.call(this.dataSource, t) }, n.prototype.setHeaders = function (t) { if (this.dataSource) return this.dataSource.setHeaders.call(this.dataSource, t) }, e.exports = n }, { "fin-hypergrid-data-source-base": 8 }], 19: [function (t, e, i) { "use strict"; var n = t("./Base"), o = n.extend("DataNodeBase", { isNullObject: !1, INDENT: "   ", initialize: function (t) { this.label = t, this.data = [""], this.index = [], this.hasChildren = !0, this.depth = 0, this.height = 1, this.expanded = !1 }, getValue: function (t) { return this.data[t] }, toArray: function (t) { this.depth = t, this.data[0] = this.computeDepthString() }, computeDepthString: function () { return Array(this.depth + 1).join(this.INDENT) + "  " + this.label }, computeHeight: function () { return 1 }, getIndex: function () { return this.index }, getRowData: function (t) { var e = this.getIndex(); e.length && (this.data.length = t.getColumnCount()) }, buildView: function (t) { t.addView(this) }, toggleExpansionState: function () { }, sortGroups: function (t) { } }); e.exports = o }, { "./Base": 18 }], 20: [function (t, e, i) { "use strict"; function n(t) { return this.splice.bind(this, this.length, 0).apply(this, t), this } var o = t("./util/Mappy"), r = t("./DataNodeBase"), s = { "true": "▼", "false": "▶" }, a = r.extend("DataNodeGroup", { extendable: !0, initialize: function (t) { this.children = new o }, toArray: function (t) { this.depth = t, this.children = this.children.values, this.children.forEach(function (e) { e.toArray(t + 1) }), this.data[0] = this.computeDepthString() }, computeDepthString: function () { var t = Array(this.depth + 1).join(this.INDENT) + s[this.expanded] + " " + this.label; return t }, getIndex: function () { return 0 === this.index.length && (this.index = this.computeIndex()), this.index }, computeIndex: function () { var t = []; return t.append = n, this.children.forEach(function (e) { t.append(e.getIndex()) }), t }, toggleExpansionState: function (t, e) { void 0 === e && (e = !this.expanded); var i = this.expanded ^ e; return this.expanded = e, this.data[0] = this.computeDepthString(), this.expanded && this.getRowData(t), !!i }, getRowData: function (t) { r.prototype.getRowData.call(this, t), this.expanded && this.children.forEach(function (e) { e.getRowData(t) }) }, buildView: function (t) { t.view.push(this), this.expanded && this.children.forEach(function (e) { e.buildView(t) }) }, computeHeight: function () { var t = 1; return this.expanded && this.children.forEach(function (e) { t += e.computeHeight() }), this.height = t }, sortWith: function (t) { this.expanded && (t.sortGroup(this), this.children.forEach(function (e) { e.sortWith(t) })) }, clearGroupSorts: function () { if (this.originalOrder) for (var t = 0; t < this.originalOrder.length; t++) this.children[t] = this.originalOrder[t]; this.children.forEach(function (t) { t.clearGroupSorts() }) } }); e.exports = a }, { "./DataNodeBase": 19, "./util/Mappy": 35 }], 21: [function (t, e, i) { "use strict"; var n = t("./Base"), o = t("./util/stableSort").sort, r = n.extend("DataNodeGroupSorter", { initialize: function (t) { this.dataSource = t, this.sorts = [] }, sortOn: function (t, e) { this.sorts.push({ columnIndex: t, direction: e }) }, set: function (t) { t ? this.sorter = t : delete this.sorter }, get: function () { return this.sorter }, apply: function () { this.dataSource.sortGroups(this) }, clearSorts: function () { this.sorts.length = 0, this.dataSource.buildView() }, sortGroup: function (t) { t.originalOrder || (t.originalOrder = t.children.slice(0)), this.sorts = this.sorter && this.sorter.prop("sorts") || this.sorts; for (var e = this.sorts.length - 1; e >= 0; e--) this.sortGroupOnEach(t, this.sorts[this.sorts.length - e - 1]) }, sortGroupOnEach: function (t, e) { for (var i = t.children.slice(0), n = [], r = 0; r < i.length; r++) n[r] = r; for (o(n, function (t) { var n = i[t]; return 0 === e.columnIndex ? n.label : n.data[e.columnIndex] }, e.direction), r = 0; r < i.length; r++) t.children[r] = i[n[r]] } }); r.prototype.applySorts = function () { (console.warn || console.log).call(console, "applySorts deprecated; use apply"), this.apply() }, Object.defineProperty(r.prototype, "type", { value: "sorter" }), e.exports = r }, { "./Base": 18, "./util/stableSort": 38 }], 22: [function (t, e, i) { "use strict"; var n = t("./DataNodeBase"), o = n.extend("DataNodeLeaf", { initialize: function (t) { this.hasChildren = !1 }, toArray: function (t) { this.depth = t, this.data[0] = this.computeDepthString() }, getIndex: function () { return this.index }, buildView: function (t) { t.addView(this) }, getRowData: function (t) { var e = this.getIndex(); if (e.length) { var i = Number(t.hasGroups()), n = this.data, o = t.getColumnCount() + i, r = 0, s = t.sorterInstance; for (s.index = e, r; r < o; r++) n[i + r] = s.getValue(r, 0) } }, computeHeight: function () { return 1 }, sortWith: function (t) { }, clearGroupSorts: function () { } }); e.exports = o }, { "./DataNodeBase": 19 }], 23: [function (t, e, i) { "use strict"; var n = t("./DataNodeGroup"), o = n.extend("DataNodeTree", { initialize: function (t) { this.height = 0, this.expanded = !0 }, toArray: function () { this.children = this.children.values, this.children.forEach(function (t) { t.toArray(0) }) }, buildView: function (t) { this.children.forEach(function (e) { e.buildView(t) }) }, computeHeight: function () { var t = 1; return this.children.forEach(function (e) { t += e.computeHeight() }), this.height = t } }); e.exports = o }, { "./DataNodeGroup": 20 }], 24: [function (t, e, i) { "use strict"; function n(t, e) { throw new Error("DataSource." + t + ": " + e) } function o(t) { return t ? Object.getOwnPropertyNames(t || []).filter(function (t) { return "__" !== t.substr(0, 2) }) : [] } var r = t("./Base"), s = t("./util/headerify"), a = r.extend("DataSource", { initialize: function (t, e, i) { this.data = t, this.fields = e || o(t[0]), this.calculators = i || Array(this.fields.length) }, isNullObject: !1, getDataIndex: function (t) { return t }, getRow: function (t) { return this.data[t] }, findRow: function (t, e, i) { var n, o, r, s, a; if ("object" == typeof t) { if (s = t, e instanceof Array) { if (a = 2, r = e, r.reduce(function (t, e) { return e in s && t++, t }, 0) !== r.length) throw "Expected all keys given in 2nd arg to be found in hash given in 1st arg." } else a = 1, r = Object.keys(s), i = e; 1 === r.length ? (t = r[0], e = s[t], s = void 0) : r.length && (n = this.data.find(function (e, i) { if (e) { o = i; for (var n in r) if (t = r[n], e[t] !== s[t]) return; return !0 } })) } else { if (arguments.length < 2) throw "Expected at least 2 arguments when first argument not object but found " + arguments.length + "."; a = 2 } if (s || (n = this.data.find(function (i, n) { if (i) return o = n, i[t] === e })), n) if (this.foundRowIndex = o, null === i) this.data.splice(o, 1); else if ("object" == typeof i) this.data[o] = i; else { if (void 0 !== i) throw "Expected null, undefined, or object but found " + typeof i + "."; arguments.length > a && delete this.data[o] } else this.foundRowIndex = void 0; return n }, getValue: function (t, e) { var i = this.getRow(e); return i ? i[this.fields[t]] : null }, setValue: function (t, e, i) { this.getRow(e)[this.fields[t]] = i }, getRowCount: function () { return this.data.length }, getColumnCount: function () { return this.getFields().length }, getFields: function () { return this.fields }, getHeaders: function () { return this.headers = this.headers || this.getDefaultHeaders().map(function (t) { return s.transform(t) }) }, getDefaultHeaders: function () { return this.getFields() }, setFields: function (t) { this.fields = t }, setHeaders: function (t) { t instanceof Array || n("setHeaders", "param #1 `headers` not array"), this.headers = t }, getGrandTotals: function () { }, setData: function (t) { this.data = t } }); e.exports = a }, { "./Base": 18, "./util/headerify": 37 }], 25: [function (t, e, i) { "use strict"; function n(t) { return new u(t) } function o(t) { return new l(t) } var r = t("./Base"), s = t("./DataSourceSorter"), a = t("./AggregatorNodeTree"), l = t("./AggregatorNodeGroup"), u = t("./AggregatorNodeLeaf"), c = t("./util/headerify"), h = r.extend("DataSourceAggregator", { initialize: function (t) { this.dataSource = t, this.treeColumnIndex = 0, this.tree = new a("Totals"), this.index = [], this.aggregates = [], this.groupBys = [], this.view = [], this.sorterInstance = {}, this.presortGroups = !0, this.lastAggregate = {}, this.setAggregates({}) }, isNullObject: !1, setAggregateGroups: function (t, e) { this.setGroupBys(e), this.setAggregates(t) }, setAggregates: function (t) { this.lastAggregate = t, this.clearAggregations(); for (var e in t) this.addAggregate(e, t[e]) }, getFields: function () { if (!this.viewMakesSense()) return this.dataSource.getFields(); var t = this.getHeaders().map(function (t) { return t.toLowerCase().split(" ").join("_") }); return t }, getHeaders: function () { if (!this.viewMakesSense()) return this.dataSource.getHeaders(); var t = this.aggregates.map(function (t) { return t.header }); return this.hasGroups() && t.unshift("Tree"), t }, addAggregate: function (t, e) { e.header = c.transform(t), this.aggregates.push(e) }, setGroupBys: function (t) { var e = this.groupBys; e.length = 0, t.forEach(function (t) { e.push(t) }), this.setAggregates(this.lastAggregate) }, addGroupBy: function (t) { this.groupBys.push(t) }, hasGroups: function () { return !!this.groupBys.length }, hasAggregates: function () { return !!this.aggregates.length }, apply: function (t) { t = t || {}, t.rowClick || t.columnSort || this.buildGroupTree() }, clearGroups: function () { this.groupBys.length = 0 }, clearAggregations: function () { this.aggregates.length = 0 }, buildGroupTree: function () { var t = this.groupBys.slice(0).reverse(), e = this.groupBys.length - 1, i = this.dataSource, r = i.getRowCount(), l = this.tree = new a("Totals"); this.presortGroups && t.forEach(function (t) { i = new s(i), i.sortOn(t) }); for (var u = 0; u < r; u++) { var c = l; this.groupBys.forEach(function (t, r) { var s = i.getValue(t, u), a = r === e ? n : o; c = c.children.getIfUndefined(s, a) }), c.index.push(u) } this.sorterInstance = new s(i), l.toArray(), l.getRowData(this), this.buildView() }, addView: function (t) { this.view.push(t) }, buildView: function () { this.view.length = 0, this.tree.computeHeight(), this.tree.buildView(this) }, viewMakesSense: function () { return this.hasAggregates() && this.hasGroups() }, isDrillDown: function (t) { var e = this.viewMakesSense(); return e && t && (e = t === this.treeColumnIndex), e }, getDataIndex: function (t) { return this.viewMakesSense() ? t : this.dataSource.getDataIndex(t) }, getValue: function (t, e) { if (!this.viewMakesSense()) return this.dataSource.getValue(t, e); var i = this.view[e]; return i ? i.getValue(t) : null }, setValue: function (t, e, i) { if (!this.viewMakesSense()) return this.dataSource.setValue(t, e, i) }, getColumnCount: function () { return this.viewMakesSense() ? this.getHeaders().length : this.dataSource.getColumnCount() }, getRowCount: function () { return this.viewMakesSense() ? this.view.length : this.dataSource.getRowCount() }, click: function (t, e, i) { if (!this.viewMakesSense()) return this.dataSource.click.apply(this.dataSource, arguments); var n, o, r = this.view[t]; return r && (void 0 === i || i > 0 && r.depth < i || i <= 0 && r.depth >= -i) && (o = r.toggleExpansionState(this, e), (n = r.children) && this.buildView()), n ? o : void 0 }, getGrandTotals: function () { var t = this.tree; return [t.data] }, getRow: function (t) { if (!this.viewMakesSense()) return this.dataSource.getRow(t); var e = this.view[t]; return e ? e : this.tree }, setData: function (t) { this.dataSource.setData(t), this.apply() }, sortGroups: function (t) { this.tree.clearGroupSorts(), this.tree.sortWith(t), this.buildView() } }); Object.defineProperty(h.prototype, "type", { value: "aggregator" }), e.exports = h }, {
        "./AggregatorNodeGroup": 15, "./AggregatorNodeLeaf": 16, "./AggregatorNodeTree": 17, "./Base": 18, "./DataSourceSorter": 30, "./util/headerify": 37
    }], 26: [function (t, e, i) { "use strict"; function n(t) { var e, i = this.dataSource.getRow(t); if (i.__DEPTH < this.depth) return this.edge; for (t = this.getDataIndex(t) ; (void 0 === i.__EXPANDED || i.__DEPTH > this.depth) && (e = i[this.parentIdColumnName], null != e) ;) i = this.findRow(this.idColumnName, e), t = this.getProperty("foundRowIndex"); return t } function o(t) { var e, i = this.dataSource.getRow(t); if (i.__DEPTH < this.depth) return this.edge; for (; (void 0 === i.__EXPANDED || i.__DEPTH > this.depth) && (e = i[this.parentIdColumnName], null != e) ;) i = this.findRow(this.idColumnName, e); return r.valOrFunc.call(i, this.columnName, this.calculator) } var r = t("./DataSourceIndexed"), s = t("./util/stableSort"), a = r.extend("DataSourceDepthSorter", { initialize: function (t, e) { this.idColumnName = e.idColumn.name, this.parentIdColumnName = e.parentIdColumn.name }, sortOn: function (t, e, i) { switch (e) { case 0: this.clearIndex(); break; case void 0: case 1: case -1: if (this.dataSource.getRowCount()) { var r; this.buildIndex(), this.depth = 0, this.edge = e === -1 ? +(1 / 0) : -(1 / 0), void 0 === i ? r = n.bind(this) : (r = o.bind(this), this.columnName = this.dataSource.getFields()[i], this.calculator = this.dataSource.getProperty("calculators")[i], "string" == typeof r(0) && (this.edge = e === -1 ? "￿" : "")), this.depth = t, s.sort(this.index, r, e) } } } }); e.exports = a }, { "./DataSourceIndexed": 29, "./util/stableSort": 38 }], 27: [function (t, e, i) { "use strict"; var n = t("./DataSourceIndexed"), o = n.extend("DataSourceGlobalFilter", { set: function (t) { t ? this.filter = t : delete this.filter }, get: function (t) { return this.filter }, sortGroups: function (t) { this.dataSource.sortGroups(t) }, apply: function () { this.filter && this.filter.test ? this.buildIndex(this.filterTest) : this.clearIndex() }, filterTest: function (t, e) { return this.filter.test(e) }, getRowCount: function () { return this.filter && this.filter.test ? this.index.length : this.dataSource.getRowCount() } }); Object.defineProperty(o.prototype, "type", { value: "filter" }), e.exports = o }, { "./DataSourceIndexed": 29 }], 28: [function (t, e, i) { "use strict"; function n(t) { return new u(t) } function o(t) { return new l(t) } var r = t("./Base"), s = t("./DataSourceSorter"), a = t("./DataNodeTree"), l = t("./DataNodeGroup"), u = t("./DataNodeLeaf"), c = r.extend("DataSourceGroupView", { initialize: function (t) { this.dataSource = t, this.tree = new a("Group"), this.index = [], this.groupBys = [], this.view = [], this.treeColumnIndex = 0, this.sorterInstance = {}, this.presortGroups = !0 }, isNullObject: !1, getFields: function () { if (!this.viewMakesSense()) return this.dataSource.getFields(); var t = this.getHeaders().map(function (t) { return t.toLowerCase().split(" ").join("_") }); return t }, getHeaders: function () { if (!this.viewMakesSense()) return this.dataSource.getHeaders(); var t = this.dataSource.getHeaders().slice(0); return this.hasGroups() && t.unshift("Tree"), t }, setGroupBys: function (t) { var e = this.groupBys; e.length = 0, t.forEach(function (t) { e.push(t) }) }, addGroupBy: function (t) { this.groupBys.push(t) }, hasGroups: function () { return !!this.groupBys.length }, apply: function (t) { t = t || {}, t.rowClick || t.columnSort || this.buildGroupTree() }, clearGroups: function () { this.groupBys.length = 0 }, buildGroupTree: function () { var t = this.groupBys.slice(0).reverse(), e = this.groupBys.length - 1, i = this.dataSource, r = i.getRowCount(), l = this.tree = new a("Group"); this.presortGroups && t.forEach(function (t) { i = new s(i), i.sortOn(t) }); for (var u = 0; u < r; u++) { var c = l; this.groupBys.forEach(function (t, r) { var s = i.getValue(t, u), a = r === e ? n : o; c = c.children.getIfUndefined(s, a) }), c.index.push(u) } this.sorterInstance = new s(i), l.toArray(), l.getRowData(this), this.buildView() }, addView: function (t) { this.view.push(t) }, buildView: function () { this.view.length = 0, this.tree.computeHeight(), this.tree.buildView(this) }, viewMakesSense: function () { return this.hasGroups() }, isDrillDown: function (t) { var e = this.viewMakesSense(); return e && t && (e = t === this.treeColumnIndex), e }, getDataIndex: function (t) { return this.viewMakesSense() ? t : this.dataSource.getDataIndex(t) }, getValue: function (t, e) { if (!this.viewMakesSense()) return this.dataSource.getValue(t, e); var i = this.view[e]; return i ? i.getValue(t) : null }, setValue: function (t, e, i) { if (!this.viewMakesSense()) return this.dataSource.setValue(t, e, i) }, getColumnCount: function () { return this.viewMakesSense() ? this.getHeaders().length : this.dataSource.getColumnCount() }, getRowCount: function () { return this.viewMakesSense() ? this.view.length : this.dataSource.getRowCount() }, click: function (t, e, i) { if (!this.viewMakesSense()) return this.dataSource.click.apply(this.dataSource, arguments); var n, o, r = this.view[t]; return r && (void 0 === i || i > 0 && r.depth < i || i <= 0 && r.depth >= -i) && (o = r.toggleExpansionState(this, e), (n = r.children) && this.buildView()), n ? o : void 0 }, setHeaders: function (t) { this.dataSource.setHeaders(t) }, setFields: function (t) { return this.dataSource.setFields(t) }, getRow: function (t) { if (!this.viewMakesSense()) return this.dataSource.getRow(t); var e = this.view[t]; return e ? e : this.tree }, setData: function (t) { this.dataSource.setData(t), this.apply() }, getGrandTotals: function () { }, sortGroups: function (t) { this.tree.clearGroupSorts(), this.tree.sortWith(t), this.buildView() } }); Object.defineProperty(c.prototype, "type", { value: "groupviewer" }), e.exports = c }, { "./Base": 18, "./DataNodeGroup": 20, "./DataNodeLeaf": 22, "./DataNodeTree": 23, "./DataSourceSorter": 30 }], 29: [function (t, e, i) { "use strict"; var n = t("./Base"), o = n.extend("DataSourceIndexed", { isNullObject: !1, initialize: function (t) { this.dataSource = t, this.index = [] }, transposeY: function (t) { return this.index.length ? this.index[t] : t }, getDataIndex: function (t) { return this.dataSource.getDataIndex(this.transposeY(t)) }, getRow: function (t) { return this.dataSource.getRow(this.transposeY(t)) }, getValue: function (t, e) { return this.dataSource.getValue(t, this.transposeY(e)) }, setValue: function (t, e, i) { this.dataSource.setValue(t, this.transposeY(e), i) }, getRowCount: function () { return this.index.length || this.dataSource.getRowCount() }, clearIndex: function () { this.index.length = 0 }, buildIndex: function (t) { var e = this.dataSource.getRowCount(), i = this.index; this.clearIndex(); for (var n = 0; n < e; n++) t && !t.call(this, n, this.dataSource.getRow(n)) || i.push(n); return i } }); o.valOrFunc = function (t, e) { var i; return this && (i = this[t], e = "f" === (typeof i)[0] && i || e, e && (i = e.call(this, t))), i }, e.exports = o }, { "./Base": 18 }], 30: [function (t, e, i) { "use strict"; var n = t("./DataSourceIndexed"), o = t("./util/stableSort"), r = n.extend("DataSourceSorter", { sortOn: function (t, e) { function i(t) { var e = r.getRow(t); return n.valOrFunc.call(e, a, l) } var r = this.dataSource, s = r.schema.find(function (e, i) { return i === t }), a = s && s.name, l = r.schema[t].calculator; switch (e) { case 0: this.clearIndex(); break; case void 0: case 1: case -1: o.sort(this.buildIndex(), i, e, r.schema[t].type) } } }); e.exports = r }, { "./DataSourceIndexed": 29, "./util/stableSort": 38 }], 31: [function (t, e, i) { "use strict"; var n = t("./DataSourceIndexed"), o = t("./DataSourceSorter"), r = n.extend("DataSourceSorterComposite", { initialize: function () { this.sorts = [], this.last = this.dataSource }, getRow: function (t) { return this.last.getRow(t) }, sortOn: function (t, e) { this.sorts.push({ columnIndex: t, direction: e }) }, set: function (t) { t ? this.sorter = t : delete this.sorter }, get: function () { return this.sorter }, apply: function () { var t = this.dataSource; this.sorts = this.sorter && this.sorter.prop("sorts") || this.sorts, this.sorts && (this.sorts.forEach(function (e) { t = new o(t), t.sortOn(e.columnIndex, e.direction, e.type) }), this.last = t) }, clearSorts: function () { this.sorts.length = 0, this.last = this.dataSource }, getDataIndex: function (t) { return this.last.getDataIndex(t) }, getValue: function (t, e) { return this.last.getValue(t, e) }, setValue: function (t, e, i) { this.last.setValue(t, e, i) } }); r.prototype.applySorts = function () { (console.warn || console.log).call(console, "applySorts deprecated; use apply"), this.apply() }, Object.defineProperty(r.prototype, "type", { value: "sorter" }), e.exports = r }, { "./DataSourceIndexed": 29, "./DataSourceSorter": 30 }], 32: [function (t, e, i) { "use strict"; function n(t, e) { for (var i; null != (i = e[this._parentIdColumn.name]) ;) if (e = this.findRow(this._idColumn.name, i), e.__EXPANDED === !1) return !1; return !0 } var o = t("./DataSourceIndexed"), r = { "true": "▼", "false": "▶", undefined: "" }, s = o.extend("DataSourceTreeview", { initialize: function (t) { for (; t;) /treeview/i.test(t.$$CLASS_NAME) && (t.treeview = this), t = t.dataSource }, set idColumn(t) { this._idColumn = this.getColumnInfo(t || "ID") }, get idColumn() { return this._idColumn }, set parentIdColumn(t) { this._parentIdColumn = this.getColumnInfo(t || "parentID") }, get parentIdColumn() { return this._parentIdColumn }, set treeColumn(t) { this._treeColumn = this.getColumnInfo(t || "name") }, get treeColumn() { return this._treeColumn }, set groupColumn(t) { this._groupColumn = this.getColumnInfo(t || this._treeColumn.name) }, get groupColumn() { return this._groupColumn }, getColumnInfo: function (t) { var e, i, n; return "number" == typeof t ? (i = t, e = this.schema[i].name) : (e = t, i = this.schema.findIndex(function (t) { return t.name === e })), e && i >= 0 && (n = { name: e, index: i }), n }, setRelation: function (t) { var e, i, n, o, r, s; if (t && (this.idColumn = t.idColumn, this.parentIdColumn = t.parentIdColumn, this.treeColumn = t.treeColumn, this.groupColumn = t.groupColumn, this.joined = !!(this.idColumn && this.parentIdColumn && this.treeColumn && this.groupColumn)), this.buildIndex(), e = this.getRowCount(), this.joined) { var a = this.idColumn.name, l = this.parentIdColumn.name; for (this.maxDepth = 0; e--;) { for (n = 0, o = this.getRow(e), r = o, s = r[a]; null != (i = r[l]) ;) r = this.findRow(a, i), ++n; this.maxDepth < n && (this.maxDepth = n), o.__DEPTH = n, this.findRow(l, s) ? void 0 === o.__EXPANDED && (o.__EXPANDED = !1) : delete o.__EXPANDED } } else for (; e--;) this.getRow(e).__DEPTH = 0; return this.joined }, apply: function () { this.viewMakesSense() ? this.buildIndex(this.joined && n) : this.clearIndex() }, getValue: function (t, e) { var i = o.prototype.getValue.call(this, t, e); if (this.viewMakesSense() && t === this._treeColumn.index) { var n = this.getRow(e); "" === i && void 0 === n.__EXPANDED || (i = Array(n.__DEPTH + 1).join("   ") + r[n.__EXPANDED] + i) } return i }, viewMakesSense: function () { return this.joined }, isDrillDown: function (t) { var e = this.viewMakesSense(); return e && t && (e = t === this.treeColumnIndex), e }, click: function (t, e, i) { if (!this.viewMakesSense()) return this.dataSource.click.apply(this.dataSource, arguments); var n, o = this.getRow(t); return o && void 0 !== o.__EXPANDED && (void 0 !== i && (i > 0 && o.__DEPTH >= i || i <= 0 && o.__DEPTH < -i) ? n = !1 : (void 0 === e && (e = !o.__EXPANDED), n = o.__EXPANDED && !e || !o.__EXPANDED && e, o.__EXPANDED = e)), n }, revealRow: function (t) { if (!this.viewMakesSense()) return this.dataSource.revealRow.apply(this.dataSource, arguments); for (var e, i, n = !1; e = this.findRow(this._idColumn.name, t) ;) i && e.__EXPANDED === !1 && (e.__EXPANDED = n = !0), i = !0, t = e[this._parentIdColumn.name]; return n } }); Object.defineProperty(s.prototype, "type", { value: "treeviewer" }), e.exports = s }, { "./DataSourceIndexed": 29 }], 33: [function (t, e, i) { "use strict"; var n = t("./DataSourceGlobalFilter"), o = n.extend("DataSourceTreeviewFilter", { filterTest: function (t, e) { return this.treeview.viewMakesSense() && void 0 !== e.__EXPANDED || this.filter.test(e) } }); e.exports = o }, { "./DataSourceGlobalFilter": 27 }], 34: [function (t, e, i) { "use strict"; var n = t("./DataSourceSorterComposite"), o = t("./DataSourceDepthSorter"), r = t("./DataSourceSorter"), s = n.extend("DataSourceTreeviewSorter", { apply: function () { var t, e, i, n, s = this.treeview.viewMakesSense(), a = this.dataSource; if (this.sorts = this.sorter && this.sorter.prop("sorts") || this.sorts, this.sorts.length && (s && (t = this.sorts[this.sorts.length - 1], e = t.columnIndex === this.treeview.groupColumn.index), this.sorts.forEach(function (i) { e && i === t || (a = new r(a), a.sortOn(i.columnIndex, i.direction)) })), s) { e || 1 === this.sorts.length ? (i = t.columnIndex, n = t.direction) : (i = void 0, n = 1); for (var l = this.treeview.maxDepth; l >= 0; --l) a = new o(a, this.treeview), a.sortOn(l, n, i) } this.last = a } }); e.exports = s }, { "./DataSourceDepthSorter": 26, "./DataSourceSorter": 30, "./DataSourceSorterComposite": 31 }], 35: [function (t, e, i) { "use strict"; function n() { this.keys = [], this.data = {}, this.values = [] } function o(t) { var e = typeof t; switch (e) { case "number": case "string": case "boolean": case "symbol": return a + e + "_" + t; case "undefined": return "UNDEFINED"; case "object": if (null === t) return "NULL"; case "function": return t.___finhash = t.___finhash || a + l++ } } function r(t) { return t } function s(t, e) { if (e != e || 0 === e) for (var i = t.length; i-- && !u(t[i], e) ;); else i = [].indexOf.call(t, e); return i } n.prototype = { constructor: n.prototype.constructor, set: function (t, e) { var i = o(t); i in this.data || (this.keys.push(t), this.values.push(e)), this.data[i] = e }, get: function (t) { var e = o(t); return this.data[e] }, getIfUndefined: function (t, e) { var i = this.get(t); return void 0 === i && (i = e(t), this.set(t, i)), i }, size: function () { return this.keys.length }, clear: function () { this.keys.length = 0, this.values.length = 0, this.data = {} }, "delete": function (t) { var e = o(t); if (void 0 !== this.data[e]) { var i = s(this.keys, t); this.keys.splice(i, 1), this.values.splice(i, 1), delete this.data[e] } }, forEach: function (t) { if ("function" == typeof t) { var e = this.keys, i = this; e.forEach(function (e) { var n = i.get(e); t(n, e, i) }) } }, map: function (t) { var e = this.keys, i = new n, o = this; return "function" != typeof t && (t = r), e.forEach(function (e) { var n = o.get(e), r = t(n, e, o); i.set(e, r) }), i }, copy: function () { var t = this.keys, e = new n, i = this; return t.forEach(function (t) { var n = i.get(t); e.set(t, n) }), e } }; var a = ".~.#%_", l = 0, u = Object.is || function (t, e) { return t === e ? 0 !== t || 1 / t == 1 / e : t != t && e != e }; e.exports = n }, {}], 36: [function (t, e, i) { "use strict"; function n(t) { return t.getRowCount() } function o(t, e) { for (var i = e.getRowCount(), n = 0; i--;) n += e.getValue(t, i); return n } function r(t, e, i, n) { for (var o = n.getRowCount() ; o--;) i = e(i, n.getValue(t, o)); return i } function s(t, e) { return o(t, e) / e.getRowCount() } function a(t, e) { return e.getValue(t, 0) } function l(t, e) { return e.getValue(t, e.getRowCount() - 1) } function u(t, e) { for (var i, n = e.getRowCount(), o = s(t, e), r = n, a = 0; r--; a += i * i) i = e.getValue(t, r) - o; return Math.sqrt(a / n) } e.exports = { count: function (t) { return n }, sum: function (t) { return o.bind(this, t) }, min: function (t) { return r.bind(this, t, Math.min, 1 / 0) }, max: function (t) { return r.bind(this, t, Math.max, -(1 / 0)) }, avg: function (t) { return s.bind(this, t) }, first: function (t) { return a.bind(this, t) }, last: function (t) { return l.bind(this, t) }, stddev: function (t) { return u.bind(this, t) } } }, {}], 37: [function (t, e, i) { "use strict"; function n(t) { return (/[a-z]/.test(t) ? t : t.toLowerCase()).replace(/[\s\-_]*([^\s\-_])([^\s\-_]+)/g, o).replace(/[A-Z]/g, " $&").trim() } function o(t, e, i) { return e.toUpperCase() + i } function r(t) { n.transform = n[t] } function s(t) { return t } n.transform = s, n.set = r, n.passthrough = s, n.capitalize = n, e.exports = n }, {}], 38: [function (t, e, i) { "use strict"; function n(t, e, i, n) { var o = i[0], r = n[0]; if (o === r) o = e ? n[1] : i[1], r = e ? i[1] : n[1]; else { if (null === r) return -1; if (null === o) return 1 } return t(o, r) } function o(t, e) { return t - e } function r(t, e) { return e - t } function s(t, e) { return t < e ? -1 : 1 } function a(t, e) { return e < t ? -1 : 1 } function l(t) { return n.bind(this, "number" === t ? o : s, !1) } function u(t) { return n.bind(this, "number" === t ? r : a, !0) } function c(t, e, i, n) { var o, r; if (void 0 === i && (i = 1), t.length) { switch (i) { case 0: return; case void 0: i = 1; case 1: o = l(n || typeof e(0)); break; case -1: o = u(n || typeof e(0)) } var s = new Array(t.length); for (r = 0; r < t.length; r++) s[r] = [e(r), r]; for (s.sort(o), r = 0; r < t.length; r++) t[r] = s[r][1] } } i.sort = c }, {}], 39: [function (t, e, i) { "use strict"; function n(t, e) { if (!(this instanceof n)) throw d('Not called with "new" keyword.'); var i, o, s = this; e = e || {}, "string" == typeof t ? (o = r(document.querySelectorAll(t)), i = c(o)) : t[0] instanceof Element ? (o = r(t), i = c(o)) : (o = [], i = u(t, e), i.forEach(function (t) { o = o.concat(r(t.element.querySelectorAll("li"))) })), i.forEach(function (t) { t.element.addEventListener("wheel", h) }), o.forEach(function (t, e) { var i = t !== t.parentElement.lastElementChild ? s.addEvt(t, "mousedown", t, !0) : { element: t }; o[e] = i }), g = "transform" in o[0].element.style ? "transform" : "-webkit-transform", this.modelLists = i, this.items = o, this.bindings = {}, this.callback = {}, v(m, "list-dragon-base", e.cssStylesheetReferenceElement) } function o(t, e, i) { if (t) { var n = p < 0 && t >= 0 || 0 === p && 0 !== t || p > 0 && t <= 0; p = t > 0 ? Math.min(50, t) : Math.max(-50, t), n && (clearInterval(f), f = setInterval(function (t) { var e = i.scrollTop + p; p < 0 && e < t || p > 0 && e > t ? (i.scrollTop = t, clearInterval(f)) : i.scrollTop = e }, 125)) } else clearInterval(f), p = 0 } function r(t) { return Array.prototype.slice.call(t) } function s(t, e) { return e.top <= t.y && t.y <= e.bottom && e.left <= t.x && t.x <= e.right } function a(t, e) { return "translate(" + Math.floor(t + window.scrollX) + "px," + Math.floor(e + window.scrollY) + "px)" } function l(t) { var e = document.createTextNode(t); return document.createElement("a").appendChild(e).parentNode.innerHTML } function u(t, e) { var i = e.label || "{label}"; return t.forEach(function (n, o) { var r = n.label || i, s = void 0 !== n.htmlEncode && n.htmlEncode || e.htmlEncode, a = document.createElement("div"), u = document.createElement("ul"); if (n.models) Object.keys(n).forEach(function (t) { "models" !== t && (n.models[t] = n[t]) }), t[o] = n = n.models; else { if (!(n instanceof Array)) throw d("List [{1}] not an array of models (with or without additional properties) OR an object (with a `models` property containing an array of models).", o); n.models = n } n.forEach(function (t) { var i = t.label || r, o = void 0 !== t.htmlEncode && t.htmlEncode || s, a = "object" == typeof t ? t : { label: t }, c = b.call([a, n, e], i), h = document.createElement("li"); h.innerHTML = o ? l(c) : c, u.appendChild(h) }); var c = document.createElement("li"); if (c.innerHTML = "&nbsp;", u.appendChild(c), n.title) { var h = document.createElement("div"); h.innerHTML = s ? l(n.title) : n.title, a.appendChild(h) } a.appendChild(u), a.className = n.cssClassNames || e.cssClassNames || "dragon-list", n.element = u, n.container = a }), t } function c(t) { var e = []; return t.forEach(function (t) { var i = t.parentElement, n = i.parentElement, o = []; e.find(function (t) { return t.element === i }) || (r(i.querySelectorAll("li")).forEach(function (t) { t !== i.lastElementChild && o.push(t.innerHTML) }), o.element = i, o.container = n, e.push(o)) }), e } function h(t) { t.stopPropagation() } function d() { return "list-dragon: " + b.apply(this, Array.prototype.slice.call(arguments)) } var g, f, p, m, v = t("css-injector"), b = t("templex"), C = null; m = "div.dragon-list{position:relative;background-color:#fff}div.dragon-list>div,div.dragon-list>ul{position:absolute;left:0;right:0}div.dragon-list>div{text-align:center;background-color:#00796b;color:#fff;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);overflow:hidden;white-space:nowrap}div.dragon-list>ul{overflow-y:auto;bottom:0;margin:0;padding:0;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}div.dragon-list>ul>li,li.dragon-pop{white-space:nowrap;list-style-type:none;border:0 solid #f4f4f4;border-bottom:1px solid #e0e0e0;cursor:move;transition:border-top-width .2s}div.dragon-list>ul>li:last-child{height:0;border-bottom:none}li.dragon-pop{position:fixed;background-color:#fff;border:1px solid #e0e0e0;left:0;top:0;overflow-x:hidden;box-shadow:rgba(0,0,0,.188235) 0 10px 20px,rgba(0,0,0,.227451) 0 6px 6px}", n.prototype = { addEvt: function (t, e, i, n) { var o = { handler: w[e].bind(t, this), element: i || window }; return n || (this.bindings[e] = o), o.element.addEventListener(e, o.handler), o }, removeEvt: function (t) { var e = this.bindings[t]; delete this.bindings[t], e.element.removeEventListener(t, e.handler) }, removeAllEventListeners: function () { for (var t in this.bindings) { var e = this.bindings[t]; e.element.removeEventListener(t, e.handler) } this.items.forEach(function (t) { t.handler && t.element.removeEventListener("mousedown", t.handler) }), this.modelLists.forEach(function (t) { t.element.removeEventListener("wheel", h) }) }, pointInListRects: function (t) { return this.modelLists.find(function (e) { var i = e.element.getBoundingClientRect(); return i = { left: window.scrollX + i.left, top: window.scrollY + i.top, right: window.scrollX + i.right, bottom: window.scrollY + i.bottom, width: i.width, height: i.height }, e.rect = i, !!s(t, i) && (e.rect = i, !0) }) }, pointInItemRects: function (t, e, i) { return this.items.find(function (n) { var o = n.element; return o !== e && o !== i && s(t, n.rect) }) }, getAllItemBoundingRects: function () { var t, e = this.modelLists; this.items.forEach(function (i) { var n = i.element, o = n.parentElement, r = e.find(function (t) { return t.element === o }); if (void 0 === r.isDropTarget || "function" == typeof r.isDropTarget && r.isDropTarget() || r.isDropTarget) { var s = n.getBoundingClientRect(), a = s.bottom; n === o.lastElementChild ? (a = o.getBoundingClientRect().bottom, a < s.top && (a = s.top + (t || 50))) : t = s.height, s = { left: window.scrollX + s.left, right: window.scrollX + s.right, top: window.scrollY + s.top + o.scrollTop, bottom: window.scrollY + a + o.scrollTop }, i.rect = s } }) }, reinsert: function (t) { var e = t.style; e.width = e[g] = e.transition = C, t.classList.remove("dragon-pop"), this.drop.style.transitionDuration = "0s", this.drop.style.borderTopWidth = C, this.drop.parentElement.insertBefore(t, this.drop), delete this.drop }, itemCoordinates: function (t) { for (var e = t.parentElement, i = { item: 0 }; t = t.previousElementSibling;)++i.item; return this.modelLists.find(function (t, n) { return i.list = n, t.element === e }), i } }; var w = { mousedown: function (t, e) { if (e.stopPropagation(), e.preventDefault(), !t.drop) { var i = this.getBoundingClientRect(); if (t.rect = i = { left: Math.round(i.left - 1), top: Math.round(i.top - 1), right: Math.round(i.right), bottom: Math.round(i.bottom), width: Math.round(i.width), height: Math.round(i.height) }, t.pin = { x: window.scrollX + e.clientX, y: window.scrollY + e.clientY }, t.origin = t.itemCoordinates(this), t.callback.grabbed && t.callback.grabbed.call(this, t), t.getAllItemBoundingRects(), t.drop = this.nextElementSibling, t.drop.style.transitionDuration = "0s", t.drop.style.borderTopWidth = i.height + "px", this.style.width = i.width + "px", this.style.transitionDuration = "0s", this.style[g] = a(i.left - window.scrollX, i.top - window.scrollY), this.classList.add("dragon-pop"), this.style.zIndex = window.getComputedStyle(t.modelLists[0].container.parentElement).zIndex, !t.container) { for (var n = this; n.parentNode && (n = n.parentNode, !("undefined" != typeof ShadowRoot && n instanceof ShadowRoot || "BODY" === n.tagName)) ;); t.container = n } t.container.appendChild(this), i.left += window.scrollX, i.top += window.scrollY, i.right += window.scrollX, i.bottom += window.scrollY, t.addEvt(this, "mousemove"), t.addEvt(this, "mouseup") } }, mousemove: function (t, e) { t.drop.style.transition = C; var i = t.pointInListRects({ x: e.clientX, y: e.clientY }) || t.mostRecentHoverList; if (i) { var n = e.clientX - t.pin.x, r = e.clientY - t.pin.y; t.mostRecentHoverList = i; var s, l = i.element.scrollHeight - i.rect.height, u = e.clientY + window.scrollY; l > 0 && (i.element.scrollTop > 0 && (s = u - (i.rect.top + 5)) < 0 ? o(s, 0, i.element) : i.element.scrollTop < l && (s = u - (i.rect.bottom - 1 - 5)) > 0 ? o(s, l, i.element) : o()); var c = t.pointInItemRects({ x: e.clientX, y: t.rect.bottom + window.scrollY + r + i.element.scrollTop }, this, t.drop); if (this.style[g] = a(t.rect.left - window.scrollX + n, t.rect.top - window.scrollY + r), c) { var h = c.element; h.style.transition = C, h.style.borderTopWidth = t.drop.style.borderTopWidth, t.drop.style.borderTopWidth = null, t.drop = h } } }, mouseup: function (t, e) { o(), t.removeEvt("mousemove"), t.removeEvt("mouseup"), e.stopPropagation(); var i = this.getBoundingClientRect(); if (window.scrollX + i.left === t.rect.left && window.scrollY + i.top === t.rect.top) t.reinsert(this); else { var n = t.drop.getBoundingClientRect(); t.addEvt(this, "transitionend", this), this.style.transitionDuration = C, this.style.transitionProperty = g, this.style[g] = a(n.left - window.scrollX, n.top - window.scrollY) } }, transitionend: function (t, e) { if (e.propertyName === g) { t.removeEvt("transitionend"), t.reinsert(this), this.style.transitionProperty = C; var i = t.modelLists[t.origin.list], n = i.splice(t.origin.item, 1)[0], o = t.itemCoordinates(this), r = t.modelLists[o.list], s = i !== r, a = s || t.origin.item !== o.item; r.splice(o.item, 0, n), a && (i.element.dispatchEvent(new CustomEvent("listchanged")), s && r.element.dispatchEvent(new CustomEvent("listchanged"))), t.callback.dropped && t.callback.dropped.call(this, t) } } }; e.exports = n }, { "css-injector": 6, templex: 48 }], 40: [function (t, e, i) { !function () { function t(t, e) { return Object.prototype.hasOwnProperty.call(t, e) } function i() { return 1 } function n(t) { return this instanceof n ? ("number" == typeof t && (t = { max: t }), t || (t = {}), this._max = t.max, (!this._max || "number" != typeof this._max || this._max <= 0) && (this._max = 1 / 0), this._lengthCalculator = t.length || i, "function" != typeof this._lengthCalculator && (this._lengthCalculator = i), this._allowStale = t.stale || !1, this._maxAge = t.maxAge || null, this._dispose = t.dispose, void this.reset()) : new n(t) } function o(t, e, i) { var n = t._cache[e]; return n && (r(t, n) ? (u(t, n), t._allowStale || (n = void 0)) : i && s(t, n), n && (n = n.value)), n } function r(t, e) { if (!e || !e.maxAge && !t._maxAge) return !1; var i = !1, n = Date.now() - e.now; return i = e.maxAge ? n > e.maxAge : t._maxAge && n > t._maxAge } function s(t, e) { l(t, e), e.lu = t._mru++, t._lruList[e.lu] = e } function a(t) { for (; t._lru < t._mru && t._length > t._max;) u(t, t._lruList[t._lru]) } function l(t, e) { for (delete t._lruList[e.lu]; t._lru < t._mru && !t._lruList[t._lru];) t._lru++ } function u(t, e) { e && (t._dispose && t._dispose(e.key, e.value), t._length -= e.length, t._itemCount--, delete t._cache[e.key], l(t, e)) } function c(t, e, i, n, o, r) { this.key = t, this.value = e, this.lu = i, this.length = n, this.now = o, r && (this.maxAge = r) } "object" == typeof e && e.exports ? e.exports = n : this.LRUCache = n, Object.defineProperty(n.prototype, "max", { set: function (t) { (!t || "number" != typeof t || t <= 0) && (t = 1 / 0), this._max = t, this._length > this._max && a(this) }, get: function () { return this._max }, enumerable: !0 }), Object.defineProperty(n.prototype, "lengthCalculator", { set: function (t) { if ("function" != typeof t) { this._lengthCalculator = i, this._length = this._itemCount; for (var e in this._cache) this._cache[e].length = 1 } else { this._lengthCalculator = t, this._length = 0; for (var e in this._cache) this._cache[e].length = this._lengthCalculator(this._cache[e].value), this._length += this._cache[e].length } this._length > this._max && a(this) }, get: function () { return this._lengthCalculator }, enumerable: !0 }), Object.defineProperty(n.prototype, "length", { get: function () { return this._length }, enumerable: !0 }), Object.defineProperty(n.prototype, "itemCount", { get: function () { return this._itemCount }, enumerable: !0 }), n.prototype.forEach = function (t, e) { e = e || this; for (var i = 0, n = this._itemCount, o = this._mru - 1; o >= 0 && i < n; o--) if (this._lruList[o]) { i++; var s = this._lruList[o]; r(this, s) && (u(this, s), this._allowStale || (s = void 0)), s && t.call(e, s.value, s.key, this) } }, n.prototype.keys = function () { for (var t = new Array(this._itemCount), e = 0, i = this._mru - 1; i >= 0 && e < this._itemCount; i--) if (this._lruList[i]) { var n = this._lruList[i]; t[e++] = n.key } return t }, n.prototype.values = function () { for (var t = new Array(this._itemCount), e = 0, i = this._mru - 1; i >= 0 && e < this._itemCount; i--) if (this._lruList[i]) { var n = this._lruList[i]; t[e++] = n.value } return t }, n.prototype.reset = function () { if (this._dispose && this._cache) for (var t in this._cache) this._dispose(t, this._cache[t].value); this._cache = Object.create(null), this._lruList = Object.create(null), this._mru = 0, this._lru = 0, this._length = 0, this._itemCount = 0 }, n.prototype.dump = function () { for (var t = [], e = 0, i = this._mru - 1; i >= 0 && e < this._itemCount; i--) if (this._lruList[i]) { var n = this._lruList[i]; r(this, n) || (++e, t.push({ k: n.key, v: n.value, e: n.now + (n.maxAge || 0) })) } return t }, n.prototype.dumpLru = function () { return this._lruList }, n.prototype.set = function (e, i, n) { n = n || this._maxAge; var o = n ? Date.now() : 0, r = this._lengthCalculator(i); if (t(this._cache, e)) return r > this._max ? (u(this, this._cache[e]), !1) : (this._dispose && this._dispose(e, this._cache[e].value), this._cache[e].now = o, this._cache[e].maxAge = n, this._cache[e].value = i, this._length += r - this._cache[e].length, this._cache[e].length = r, this.get(e), this._length > this._max && a(this), !0); var s = new c(e, i, (this._mru++), r, o, n); return s.length > this._max ? (this._dispose && this._dispose(e, i), !1) : (this._length += s.length, this._lruList[s.lu] = this._cache[e] = s, this._itemCount++, this._length > this._max && a(this), !0) }, n.prototype.has = function (e) { if (!t(this._cache, e)) return !1; var i = this._cache[e]; return !r(this, i) }, n.prototype.get = function (t) { return o(this, t, !0) }, n.prototype.peek = function (t) { return o(this, t, !1) }, n.prototype.pop = function () { var t = this._lruList[this._lru]; return u(this, t), t || null }, n.prototype.del = function (t) { u(this, this._cache[t]) }, n.prototype.load = function (t) { this.reset(); for (var e = Date.now(), i = t.length - 1; i >= 0; i--) { var n = t[i], o = n.e || 0; if (0 === o) this.set(n.k, n.v); else { var r = o - e; r > 0 && this.set(n.k, n.v, r) } } } }() }, {}], 41: [function (t, e, i) {
        !function (t, e) { "object" == typeof i && i && "string" != typeof i.nodeName ? e(i) : "function" == typeof define && define.amd ? define(["exports"], e) : (t.Mustache = {}, e(Mustache)) }(this, function (t) {
            function e(t) { return "function" == typeof t } function i(t) { return p(t) ? "array" : typeof t } function n(t) { return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&") } function o(t, e) { return null != t && "object" == typeof t && e in t } function r(t, e) { return m.call(t, e) } function s(t) { return !r(v, t) } function a(t) { return String(t).replace(/[&<>"'\/]/g, function (t) { return b[t] }) } function l(e, i) { function o() { if (v && !b) for (; m.length;) delete f[m.pop()]; else m = []; v = !1, b = !1 } function r(t) { if ("string" == typeof t && (t = t.split(w, 2)), !p(t) || 2 !== t.length) throw new Error("Invalid tags: " + t); a = new RegExp(n(t[0]) + "\\s*"), l = new RegExp("\\s*" + n(t[1])), d = new RegExp("\\s*" + n("}" + t[1])) } if (!e) return []; var a, l, d, g = [], f = [], m = [], v = !1, b = !1; r(i || t.tags); for (var E, A, R, D, M, k, P = new h(e) ; !P.eos() ;) { if (E = P.pos, R = P.scanUntil(a)) for (var T = 0, F = R.length; T < F; ++T) D = R.charAt(T), s(D) ? m.push(f.length) : b = !0, f.push(["text", D, E, E + 1]), E += 1, "\n" === D && o(); if (!P.scan(a)) break; if (v = !0, A = P.scan(S) || "name", P.scan(C), "=" === A ? (R = P.scanUntil(y), P.scan(y), P.scanUntil(l)) : "{" === A ? (R = P.scanUntil(d), P.scan(x), P.scanUntil(l), A = "&") : R = P.scanUntil(l), !P.scan(l)) throw new Error("Unclosed tag at " + P.pos); if (M = [A, R, E, P.pos], f.push(M), "#" === A || "^" === A) g.push(M); else if ("/" === A) { if (k = g.pop(), !k) throw new Error('Unopened section "' + R + '" at ' + E); if (k[1] !== R) throw new Error('Unclosed section "' + k[1] + '" at ' + E) } else "name" === A || "{" === A || "&" === A ? b = !0 : "=" === A && r(R) } if (k = g.pop()) throw new Error('Unclosed section "' + k[1] + '" at ' + P.pos); return c(u(f)) } function u(t) { for (var e, i, n = [], o = 0, r = t.length; o < r; ++o) e = t[o], e && ("text" === e[0] && i && "text" === i[0] ? (i[1] += e[1], i[3] = e[3]) : (n.push(e), i = e)); return n } function c(t) { for (var e, i, n = [], o = n, r = [], s = 0, a = t.length; s < a; ++s) switch (e = t[s], e[0]) { case "#": case "^": o.push(e), r.push(e), o = e[4] = []; break; case "/": i = r.pop(), i[5] = e[2], o = r.length > 0 ? r[r.length - 1][4] : n; break; default: o.push(e) } return n } function h(t) { this.string = t, this.tail = t, this.pos = 0 } function d(t, e) { this.view = t, this.cache = { ".": this.view }, this.parent = e } function g() { this.cache = {} } var f = Object.prototype.toString, p = Array.isArray || function (t) { return "[object Array]" === f.call(t) }, m = RegExp.prototype.test, v = /\S/, b = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;" }, C = /\s*/, w = /\s+/, y = /\s*=/, x = /\s*\}/, S = /#|\^|\/|>|\{|&|=|!/; h.prototype.eos = function () { return "" === this.tail }, h.prototype.scan = function (t) { var e = this.tail.match(t); if (!e || 0 !== e.index) return ""; var i = e[0]; return this.tail = this.tail.substring(i.length), this.pos += i.length, i }, h.prototype.scanUntil = function (t) { var e, i = this.tail.search(t); switch (i) { case -1: e = this.tail, this.tail = ""; break; case 0: e = ""; break; default: e = this.tail.substring(0, i), this.tail = this.tail.substring(i) } return this.pos += e.length, e }, d.prototype.push = function (t) { return new d(t, this) }, d.prototype.lookup = function (t) { var i, n = this.cache; if (n.hasOwnProperty(t)) i = n[t]; else { for (var r, s, a = this, l = !1; a;) { if (t.indexOf(".") > 0) for (i = a.view, r = t.split("."), s = 0; null != i && s < r.length;) s === r.length - 1 && (l = o(i, r[s])), i = i[r[s++]]; else i = a.view[t], l = o(a.view, t); if (l) break; a = a.parent } n[t] = i } return e(i) && (i = i.call(this.view)), i }, g.prototype.clearCache = function () { this.cache = {} }, g.prototype.parse = function (t, e) { var i = this.cache, n = i[t]; return null == n && (n = i[t] = l(t, e)), n }, g.prototype.render = function (t, e, i) { var n = this.parse(t), o = e instanceof d ? e : new d(e); return this.renderTokens(n, o, i, t) }, g.prototype.renderTokens = function (t, e, i, n) { for (var o, r, s, a = "", l = 0, u = t.length; l < u; ++l) s = void 0, o = t[l], r = o[0], "#" === r ? s = this.renderSection(o, e, i, n) : "^" === r ? s = this.renderInverted(o, e, i, n) : ">" === r ? s = this.renderPartial(o, e, i, n) : "&" === r ? s = this.unescapedValue(o, e) : "name" === r ? s = this.escapedValue(o, e) : "text" === r && (s = this.rawValue(o)), void 0 !== s && (a += s); return a }, g.prototype.renderSection = function (t, i, n, o) {
                function r(t) { return s.render(t, i, n) } var s = this, a = "", l = i.lookup(t[1]); if (l) {
                    if (p(l)) for (var u = 0, c = l.length; u < c; ++u) a += this.renderTokens(t[4], i.push(l[u]), n, o); else if ("object" == typeof l || "string" == typeof l || "number" == typeof l) a += this.renderTokens(t[4], i.push(l), n, o); else if (e(l)) { if ("string" != typeof o) throw new Error("Cannot use higher-order sections without the original template"); l = l.call(i.view, o.slice(t[3], t[5]), r), null != l && (a += l) } else a += this.renderTokens(t[4], i, n, o); return a;
                }
            }, g.prototype.renderInverted = function (t, e, i, n) { var o = e.lookup(t[1]); if (!o || p(o) && 0 === o.length) return this.renderTokens(t[4], e, i, n) }, g.prototype.renderPartial = function (t, i, n) { if (n) { var o = e(n) ? n(t[1]) : n[t[1]]; return null != o ? this.renderTokens(this.parse(o), i, n, o) : void 0 } }, g.prototype.unescapedValue = function (t, e) { var i = e.lookup(t[1]); if (null != i) return i }, g.prototype.escapedValue = function (e, i) { var n = i.lookup(e[1]); if (null != n) return t.escape(n) }, g.prototype.rawValue = function (t) { return t[1] }, t.name = "mustache.js", t.version = "2.2.0", t.tags = ["{{", "}}"]; var E = new g; t.clearCache = function () { return E.clearCache() }, t.parse = function (t, e) { return E.parse(t, e) }, t.render = function (t, e, n) { if ("string" != typeof t) throw new TypeError('Invalid template! Template should be a "string" but "' + i(t) + '" was given as the first argument for mustache#render(template, view, partials)'); return E.render(t, e, n) }, t.to_html = function (i, n, o, r) { var s = t.render(i, n, o); return e(r) ? void r(s) : s }, t.escape = a, t.Scanner = h, t.Context = d, t.Writer = g
        })
    }, {}], 42: [function (t, e, i) { "use strict"; function n(t) { return t instanceof n ? t : this instanceof n ? (this.originalValue = t, void (this.o = t || {})) : new n(t) } n.chain = function (t) { var e = n(t); return e.chaining = !0, e }, n.prototype = { value: function () { return this.originalValue }, each: function (t, e) { var i = this.o; return Object.keys(i).forEach(function (e) { t.call(this, i[e], e, i) }, e || i), this }, find: function (t, e) { var i, n = this.o; return n && (i = Object.keys(n).find(function (e) { return t.call(this, n[e], e, n) }, e || n), void 0 !== i && (i = n[i])), i }, filter: function (t, e) { var i = this.o, n = []; return i && Object.keys(i).forEach(function (e) { t.call(this, i[e], e, i) && n.push(i[e]) }, e || i), n }, map: function (t, e) { var i = this.o, n = []; return i && Object.keys(i).forEach(function (e) { n.push(t.call(this, i[e], e, i)) }, e || i), n }, reduce: function (t, e, i) { var n = this.o; return n && Object.keys(n).forEach(function (i, o) { e = o || void 0 !== e ? t(e, n[i], i, n) : n[i] }, i || n), e }, extend: function (t) { var e = this.o; return Array.prototype.slice.call(arguments).forEach(function (t) { if (t) for (var i in t) e[i] = t[i] }), this.chaining ? this : e }, extendOwn: function (t) { var e = this.o; return Array.prototype.slice.call(arguments).forEach(function (t) { n(t).each(function (t, i) { e[i] = t }) }), this.chaining ? this : e } }, Array.prototype.find || (Array.prototype.find = function (t) { if (null === this) throw new TypeError("Array.prototype.find called on null or undefined"); if ("function" != typeof t) throw new TypeError("predicate must be a function"); for (var e, i = Object(this), n = i.length >>> 0, o = arguments[1], r = 0; r < n; r++) if (e = i[r], t.call(o, e, r, i)) return e }), e.exports = n }, {}], 43: [function (t, e, i) { "use strict"; function n(t, e) { for (var i = 1; i < arguments.length; ++i) r.call(t, arguments[i]); return t } function o(t) { var e; for (var i in this) (e = Object.getOwnPropertyDescriptor(this, i)) && Object.defineProperty(t, i, e); return t } function r(t) { var e; for (var i in t) (e = Object.getOwnPropertyDescriptor(t, i)) && Object.defineProperty(this, i, e); return this } n.mixInTo = o, n.mixIn = r, e.exports = n }, {}], 44: [function (t, e, i) { "use strict"; function n(t, e, i) { i = i || {}; var r, s = i.prompt, a = i.blacklist, l = i.sort, u = i.breadcrumbs || [], d = u.length ? u.join(".") + "." : "", g = h.subtree, f = 0; if (t instanceof Element ? (r = t.tagName, i.append || (t.innerHTML = "")) : (r = t, t = document.createElement(r)), e) { var p, m; "SELECT" === r ? (p = t.add, s ? (m = new Option(s, ""), m.innerHTML += "&hellip;", t.add(m)) : null !== s && t.add(new Option)) : (p = t.appendChild, t.label = s), l && (e = e.slice().sort(o)), e.forEach(function (e) { if (i && "string" == typeof e) { var o = e.match(c); if (o) { var r = o[1], s = o[2], h = i[r]; if ("function" != typeof h) throw "build: Expected options." + r + " to be a function."; e = h(s) } } var m = e[g] || e; if (m instanceof Array) { var v = { breadcrumbs: u.concat(++f), prompt: e.label || "Group " + d + f, options: l, blacklist: a }, b = n("OPTGROUP", m, v); b.childElementCount && t.appendChild(b) } else if ("object" != typeof e) a && a.indexOf(e) >= 0 || p.call(t, new Option(e)); else if (!e.hidden) { var C = e.name || e.alias; a && a.indexOf(C) >= 0 || p.call(t, new Option(e.alias || e.name, C)) } }) } else t.type = "text"; return t } function o(t, e) { return t = t.alias || t.name || t.label || t, e = e.alias || e.name || e.label || e, t < e ? -1 : t > e ? 1 : 0 } function r(t, e) { 1 === arguments.length && (e = t, t = void 0); var i, n, o, a, l = t && t.keys || [h.defaultKey], u = t && t.caseSensitive; return e = s(e, u), i = this.find(function (i) { var o = i[h.subtree] || i; if (o instanceof Array) return n = r.call(o, t, e); if ("object" != typeof i) return s(i, u) === e; for (var c = 0; c < l.length; ++c) if (a = i[l[c]], a && s(a, u) === e) return !0 }), o = n || i, o && (o.name ? o : { name: o }) } function s(t, e) { var i = ""; return t && (i += t, e || (i = i.toUpperCase())), i } function a(t) { var e, i, n, o, r = this, s = 0, l = h.subtree; for (e = r.length - 1; e >= 0; --e) i = r[e], n = i[l] || i, n instanceof Array || (n = void 0), n || (o = t(i.name ? i : { name: i }, s), s += 1, void 0 !== o && (null === o ? (r.splice(e, 1), s -= 1) : (r[e] = i = o, n = i[l] || i, n instanceof Array || (n = void 0)))), n && (s += a.call(n, t), 0 === n.length && (r.splice(e, 1), s -= 1)); return s } function l(t) { var e = t.name || t; return t.alias && (e = '"' + t.alias + '" (' + e + ")"), e } function u(t) { return c.test(t) } var c = /^(\w+)\((\w+)\)$/, h = { build: n, walk: a, lookup: r, formatItem: l, isGroupProxy: u, subtree: "submenu", defaultKey: "name" }; e.exports = h }, {}], 45: [function (t, e, i) { "use strict"; function n(t, e) { Object.defineProperty(this, t, { value: e, writable: !1, enumerable: !0, configurable: !1 }) } function o(t, e) { n.call(this, "x", Number(t) || 0), n.call(this, "y", Number(e) || 0) } function r(t, e, i, r) { t = Number(t) || 0, e = Number(e) || 0, i = Number(i) || 0, r = Number(r) || 0, i < 0 && (t += i, i = -i), r < 0 && (e += r, r = -r), n.call(this, "origin", new o(t, e)), n.call(this, "extent", new o(i, r)), n.call(this, "corner", new o(t + i, e + r)), n.call(this, "center", new o(t + i / 2, e + r / 2)) } o.prototype = { plus: function (t) { return new o(this.x + t.x, this.y + t.y) }, plusXY: function (t, e) { return new o(this.x + (t || 0), this.y + (e || 0)) }, minus: function (t) { return new o(this.x - t.x, this.y - t.y) }, min: function (t) { return new o(Math.min(this.x, t.x), Math.min(this.y, t.y)) }, max: function (t) { return new o(Math.max(this.x, t.x), Math.max(this.y, t.y)) }, distance: function (t) { var e = t.x - this.x, i = t.y - this.y; return Math.sqrt(e * e + i * i) }, equals: function (t) { var e = !1; return t && (e = this.x === t.x && this.y === t.y), e }, greaterThan: function (t) { return this.x > t.x && this.y > t.y }, lessThan: function (t) { return this.x < t.x && this.y < t.y }, greaterThanOrEqualTo: function (t) { return this.x >= t.x && this.y >= t.y }, lessThanOrEqualTo: function (t) { return this.x <= t.x && this.y <= t.y }, within: function (t) { var e = t.origin.x, i = e + t.extent.x, n = t.origin.y, o = n + t.extent.y; return t.extent.x < 0 && (e = i, i = t.origin.x), t.extent.y < 0 && (n = o, o = t.origin.y), e <= this.x && this.x < i && n <= this.y && this.y < o } }, o.prototype.EQ = o.prototype.equals, o.prototype.GT = o.prototype.greaterThan, o.prototype.LT = o.prototype.lessThan, o.prototype.GE = o.prototype.greaterThanOrEqualTo, o.prototype.LE = o.prototype.lessThanOrEqualTo, r.prototype = { get top() { return this.origin.y }, get left() { return this.origin.x }, get bottom() { return this.corner.y }, get right() { return this.corner.x }, get width() { return this.extent.x }, get height() { return this.extent.y }, get area() { return this.width * this.height }, flattenXAt: function (t) { return new r(t, this.origin.y, 0, this.extent.y) }, flattenYAt: function (t) { return new r(this.origin.x, t, this.extent.x, 0) }, contains: function (t) { return t.within(this) }, within: function (t) { return t.origin.lessThanOrEqualTo(this.origin) && t.corner.greaterThanOrEqualTo(this.corner) }, growBy: function (t) { return new r(this.origin.x + t, this.origin.y + t, this.extent.x - t - t, this.extent.y - t - t) }, shrinkBy: function (t) { return this.growBy(-t) }, union: function (t) { var e = this.origin.min(t.origin), i = this.corner.max(t.corner), n = i.minus(e); return new r(e.x, e.y, n.x, n.y) }, forEach: function (t, e) { e = e || this; for (var i = this.origin.x, n = this.corner.x; i < n; i++) for (var o = this.origin.y, r = this.corner.y; o < r; o++) t.call(e, i, o) }, intersect: function (t, e, i) { var n = null, o = this.origin.max(t.origin), s = this.corner.min(t.corner), a = s.minus(o); return a.x > 0 && a.y > 0 ? n = new r(o.x, o.y, a.x, a.y) : "function" == typeof e && (n = e.call(i || this, t)), n }, intersects: function (t) { return t.corner.x > this.origin.x && t.corner.y > this.origin.y && t.origin.x < this.corner.x && t.origin.y < this.corner.y } }, i.Point = o, i.Rectangle = r }, {}], 46: [function (t, e, i) { "use strict"; (function (t) { function e() { this.selection = [], this.states = [], this.storeState = function () { for (var t, e = this.selection, i = [], n = 0; n < e.length; n++) t = [].concat(e[n]), i.push(t); this.states.push(i) } } function i(t, e) { return t instanceof Array ? i.apply(this, t) : void 0 === e ? [t, t] : t <= e ? [t, e] : [e, t] } function n(t, e) { return t[0] <= e[0] && e[0] <= t[1] || t[0] <= e[1] && e[1] <= t[1] || e[0] < t[0] && t[1] < e[1] } function o(t, e) { return t[1] === e[0] - 1 || e[1] === t[0] - 1 } function r(t, e) { var i = t[0], n = t[1], o = e[0], r = e[1], s = []; return o <= i && r < n ? s.push([r + 1, n]) : o > i && r >= n ? s.push([i, o - 1]) : i < o && r < n ? (s.push([i, o - 1]), s.push([r + 1, n])) : (r < i || o > n) && s.push(t), s } function s(t, e) { var i = Math.min(Math.min.apply(Math, t), Math.min.apply(Math, e)), n = Math.max(Math.max.apply(Math, t), Math.max.apply(Math, e)); return [i, n] } e.prototype = { select: function (t, e) { this.storeState(); var r = i(t, e), a = [0, 1]; return this.selection.forEach(function (t) { n(t, r) || o(t, r) ? r = s(t, r) : a.push(t) }), a.push(r), a[1] = this.selection.length, this.selection.splice.apply(this.selection, a), this }, deselect: function (t, e) { var o = i(t, e), s = [0, 0]; return this.selection.forEach(function (t) { if (n(t, o)) { var e = r(t, o); s = s.concat(e) } else s.push(t) }), s[1] = this.selection.length, this.selection.splice.apply(this.selection, s), this }, clear: function () { return this.states.length = 0, this.selection.length = 0, this }, clearMostRecentSelection: function () { 0 !== this.states.length && (this.selection = this.states.pop()) }, isSelected: function (t) { return this.selection.some(function (e) { return e[0] <= t && t <= e[1] }) }, isEmpty: function () { return 0 === this.selection.length }, getSelections: function () { var t = []; return this.selection.forEach(function (e) { for (var i = e[0]; i <= e[1]; i++) t.push(i) }), t.sort(function (t, e) { return t - e }), t } }, t.exports = e })("object" == typeof e && e || (window.RangeSelectionModel = {}), "object" == typeof e && e.exports || (window.RangeSelectionModel.exports = {})) || "object" == typeof e || (window.RangeSelectionModel = window.RangeSelectionModel.exports) }, {}], 47: [function (t, e, i) { "use strict"; function n(t) { var e, i; t = t || {}; var n = t.root || document, r = t.unhook, s = t.referenceElement, a = t.defaultTabSelector || ".default-tab"; if (!r) { var h; if (h = ".tabz{position:relative;visibility:hidden;height:100%}.tabz>header{position:relative;display:inline-block;background-color:#fff;margin-left:1em;padding:5px .6em;border:1px solid #666;border-bottom-color:transparent;border-radius:6px 6px 0 0;cursor:default;user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.tabz>header+section{position:absolute;display:none;background-color:#fff;margin-top:-1px;padding:8px;border:1px solid #666;border-radius:6px;left:0;right:0;bottom:0;top:0;z-index:0}.tabz>header+section.tabz-enable{z-index:1}.tabz>header.tabz-enable{z-index:2}.tabz-bg0{background-color:#eee!important}.tabz-bg1{background-color:#eef!important}.tabz-bg2{background-color:#efe!important}.tabz-bg3{background-color:#eff!important}.tabz-bg4{background-color:#fee!important}.tabz-bg5{background-color:#fef!important}.tabz-bg6{background-color:#ffe!important}", !s) { var d = document.querySelector("head").children; for (e = 0; !s && e < d.length; ++e) i = d[e], ("STYLE" === i.tagName || "LINK" === i.tagName && "stylesheet" === i.rel) && (s = i) } c(h, "tabz-css-base", s); for (var g in t) this[g] === l && (this[g] = t[g]); this.root = n, u(".tabz>header:first-of-type,.tabz>section:first-of-type", function (t) { t.classList.add("tabz-enable") }, n), this.tabTo(n.querySelector(".tabz > header" + a)), setTimeout(function () { u(".tabz > section", function (t) { t.style.display = "block", t.style.top = t.previousElementSibling.getBoundingClientRect().bottom - t.parentElement.getBoundingClientRect().top + "px" }, n) }, 0) } var f = r ? "removeEventListener" : "addEventListener", p = o.bind(this); u(".tabz", function (t) { t.style.visibility = "visible", t[f]("click", p) }, n) } function o(t) { s.call(this, t.currentTarget, t.target) } function r(t) { if (t instanceof Element) for (; t && "HEADER" !== t.tagName && "SECTION" !== t.tagName;) t = t.parentElement; else t = this.root.querySelector(t); return t } function s(t, e) { var i, n; return u(":scope>header:not(.tabz-enable)", function (t) { t.contains(e) && (i = t) }, t), i && (n = this.enabledTab(t), a.call(this, n, !1), a.call(this, i, !0)), i } function a(t, e) { if (t) { var i = this.folder(t), n = e ? "onEnable" : "onDisable"; this[n].call(this, t, i), t.classList.toggle("tabz-enable", e), i.classList.toggle("tabz-enable", e), n += "d", this[n].call(this, t, i) } } function l() { } function u(t, e, i) { return Array.prototype.forEach.call((i || document).querySelectorAll(t), e) } var c = t("css-injector"); n.prototype.tabTo = function (t) { for (; t = this.tab(t) ;) s.call(this, t.parentElement, t), t = t.parentElement.parentElement }, n.prototype.enabledTab = function (t) { return t = this.panel(t), t && t.querySelector(":scope>header.tabz-enable") }, n.prototype.tab = function (t) { return t = r.call(this, t), t instanceof HTMLElement ? "HEADER" === t.tagName ? t : "SECTION" === t.tagName ? t.previousElementSibling : null : null }, n.prototype.folder = function (t) { return t = r.call(this, t), t instanceof HTMLElement ? "SECTION" === t.tagName ? t : "HEADER" === t.tagName ? t.nextElementSibling : null : null }, n.prototype.panel = function (t) { for (; t && !t.classList.contains("tabz") ;) t = t.parentElement; return t instanceof HTMLElement && t.classList.contains("tabz") ? t : null }, n.prototype.onEnable = l, n.prototype.onDisable = l, n.prototype.onEnabled = l, n.prototype.onDisabled = l, e.exports = n }, { "css-injector": 6 }], 48: [function (require, module, exports) { function templex(t) { var e = this instanceof Array ? this : [this]; return arguments.length > 1 && e.unshift(arguments), t.replace(templex.regexp, templex.merger.bind(e)) } templex.regexp = /\{(.*?)\}/g, templex["with"] = function (t, e) { return "with(this[" + t + "]){" + e + "}" }, templex.cache = [], templex.deref = function (key) { if (!(this.length in templex.cache)) { for (var code = "return eval(expr)", i = 0; i < this.length; ++i) code = templex["with"](i, code); templex.cache[this.length] = eval("(function(expr){" + code + "})") } return templex.cache[this.length].call(this, key) }, templex.merger = function (t, e) { var i; try { i = isNaN(e) ? templex.deref.call(this, e) : this[0][e] } catch (n) { i = "{" + e + "}" } return i }, module.exports = templex }, {}], 49: [function (t, e, i) { "use strict"; var n = t("extend-me").Base; n.prototype.deprecated = t("./lib/deprecated"), n.prototype.HypergridError = t("./lib/error"), n.prototype.unwrap = function (t) { return "function" == typeof t && (t = t()), t }, n.prototype.mixIn = t("overrider").mixIn, e.exports = n }, { "./lib/deprecated": 117, "./lib/error": 118, "extend-me": 7, overrider: 43 }], 50: [function (t, e, i) {
        "use strict"; function n(t) { var e = document.getElementById("hypergrid"), i = e && !e.firstElementChild; return i || (e = document.createElement("div"), t && ["width", "height", "position", "top", "bottom", "left", "right"].forEach(function (i) { t[i] && (e.style[i] = t[i]) }), document.body.appendChild(e)), e } function o(t, e) { return g(e).each(function (e, i) { "object" == typeof t[i] && "object" == typeof e ? o(t[i], e) : void 0 === e ? delete t[i] : t[i] = e }), t } function r(t) { var e = t.origin, i = t.corner, n = Math.min(e.x, i.x), o = Math.min(e.y, i.y), r = Math.max(e.x, i.x), s = Math.max(e.y, i.y); return new d(n, o, r - n, s - o) } function s(t) { a(t); var e = document.createElement("paper-button"); e.style.display = "none", e.setAttribute("disabled", !0), document.body.appendChild(e); var i = window.getComputedStyle(e), n = document.createElement("section"); n.style.display = "none", n.setAttribute("hero", !0), document.body.appendChild(n); var o = window.getComputedStyle(document.querySelector("html")), r = window.getComputedStyle(document.querySelector("html, body")), s = window.getComputedStyle(n); return t.columnHeaderBackgroundColor = i.color, t.rowHeaderBackgroundColor = i.color, t.topLeftBackgroundColor = i.color, t.lineColor = i.backgroundColor, t.backgroundColor2 = r.backgroundColor, t.color = o.color, t.fontFamily = o.fontFamily, t.backgroundColor = s.backgroundColor, e.setAttribute("disabled", !1), e.setAttribute("secondary", !0), e.setAttribute("raised", !0), i = window.getComputedStyle(e), t.columnHeaderColor = i.color, t.rowHeaderColor = i.color, t.topLeftColor = i.color, t.backgroundSelectionColor = i.backgroundColor, t.foregroundSelectionColor = i.color, e.setAttribute("secondary", !1), e.setAttribute("warning", !0), t.columnHeaderForegroundSelectionColor = i.color, t.columnHeaderBackgroundSelectionColor = i.backgroundColor, t.rowHeaderForegroundSelectionColor = i.color, t.fixedColumnBackgroundSelectionColor = i.backgroundColor, "rgba(0, 0, 0, 0)" !== t.columnHeaderBackgroundSelectionColor && "transparent" !== t.lineColor || a(t), document.body.removeChild(e), document.body.removeChild(n), t } function a(t) { for (var e in t) t.hasOwnProperty(e) && delete t[e] } function l(t) { var e, i; return this && (e = this[t.name], i = "f" === (typeof e)[0] && e || t.calculator, i && (e = i.call(this, t.name))), e || 0 === e || e === !1 ? e : "" } t("./lib/polyfills"); var u = t("finbars"), c = t("fincanvas"), h = t("rectangular").Point, d = t("rectangular").Rectangle, g = t("object-iterators"), f = t("./Base"), p = t("./defaults"), m = t("./lib/Renderer"), v = t("./lib/SelectionModel"), b = t("./lib/stylesheet"), C = t("./lib/Localization"), w = t("./cellRenderers"), y = t("./cellEditors"), x = t("./behaviors/JSON"), S = !1, E = Object.create(p), A = Object.create(E), R = {}, D = f.extend("Hypergrid", {
            initialize: function (t, e) { S || (S = !0, E = s(E)), "string" == typeof t || t instanceof HTMLElement || (e = t, t = null), this.options = e = e || {}, Object.getPrototypeOf(this).installPlugins(e.plugins), this.lastEdgeSelection = [0, 0], this.lnfProperties = Object.create(A), this.isWebkit = navigator.userAgent.toLowerCase().indexOf("webkit") > -1, this.selectionModel = new v(this), this.renderOverridesCache = {}, this.allowEventHandlers = !0, this.dragExtent = new h(0, 0), this.numRows = 0, this.numColumns = 0, this.clearMouseDown(), this.setFormatter(e.localization), this.cellRenderers = new w, this.cellEditors = new y(this), t = t || e.container, t = t || n(e.boundingRect), this.setContainer(t), this.options.Behavior ? this.setBehavior(this.options) : this.options.data && this.setData(this.options.data, this.options), this.plugins = {}, this.installPlugins(e.plugins), document.addEventListener("mousedown", this.mouseCatcher = function () { this.abortEditing() }.bind(this)) }, terminate: function () { document.removeEventListener("mousedown", this.mouseCatcher) }, registerCellEditor: function (t, e) { return this.deprecated("registerCellEditor(Constructor, name)", "cellEditors.add(name, Constructor)", "1.0.6", arguments) }, createCellEditor: function (t) { return this.deprecated("createCellEditor(name)", "cellEditors.create(name)", "1.0.6", arguments) }, getCellProvider: function (t) { return this.deprecated("getCellProvider()", "cellRenderers", "1.0.6", arguments) }, registerLocalizer: function (t, e, i, n) { return this.deprecated("registerLocalizer(name, localizer, baseClassName, newClassName)", "localization.add(name, localizer)", "1.0.6", arguments, "STRUCTURAL CHANGE: No longer supports deriving and registering a new cell editor class. Use .cellEditors.get(baseClassName).extend(newClassName || name, {...}) for that.") }, getRenderer: function () { return this.deprecated("getRenderer()", "renderer", "1.1.0") }, behavior: null, isWebkit: !0, mouseDown: [], dragExtent: null, vScrollValue: 0, hScrollValue: 0, selectionModel: null, cellEditor: null, sbHScroller: null, sbVScroller: null, sbPrevVScrollValue: null, sbPrevHScrollValue: null, renderOverridesCache: {}, hoverCell: null, scrollingNow: !1, lastEdgeSelection: null, setAttribute: function (t, e) { this.div.setAttribute(t, e) }, reset: function () { this.lastEdgeSelection = [0, 0], this.lnfProperties = Object.create(A), this.selectionModel = new v(this), this.renderOverridesCache = {}, this.clearMouseDown(), this.dragExtent = new h(0, 0), this.numRows = 0, this.numColumns = 0, this.vScrollValue = 0, this.hScrollValue = 0, this.cancelEditing(), this.sbPrevVScrollValue = null, this.sbPrevHScrollValue = null, this.hoverCell = null, this.scrollingNow = !1, this.lastEdgeSelection = [0, 0], this.behavior.reset(), this.renderer.reset(), this.getCanvas().resize(), this.behaviorChanged(), this.refreshProperties() }, installPlugins: function (t) { var e = this === D.prototype; t && (Array.isArray(t) || (t = [t]), t.forEach(function (t) { var i, n, o; if (t && (n = [this], Array.isArray(t) && (t.length ? "string" != typeof t[0] ? (n = n.concat(t.slice(1)), t = t[0]) : t.length >= 2 ? (n = n.concat(t.slice(2)), i = t[0], t = t[1]) : t = void 0 : t = void 0), t)) { if (i = i || t.name || t.$$CLASS_NAME, i && (i = i.substr(0, 1).toLowerCase() + i.substr(1)), e) o = this.constructor.plugins, t.preinstall && !o[i] && t.preinstall.apply(t, n); else if (o = this.plugins, "function" == typeof t) n.unshift(null), t = new (Function.prototype.bind.apply(t, n)); else if (t.install) t.install.apply(t, n); else if (!t.preinstall) throw new f.prototype.HypergridError("Expected plugin (a constructor; or an API with a `preinstall` method and/or an `install` method)."); i && (o[i] = t) } }, this)) }, uninstallPlugins: function (t) { t ? Array.isArray(t) || (t = [t]) : t = [], g(this.plugins).each(function (e, i, n) { n.hasOwnProperty(i) && t.indexOf(i) >= 0 && e.uninstall && e.uninstall(this, i, n) }, this) }, getProperties: function () { return this.deprecated("getProperties()", "properties", "1.2.0") }, _getProperties: function () { return this.lnfProperties }, computeCellsBounds: function () { this.renderer.computeCellsBounds() }, setFormatter: function (t) { t = t || {}, this.localization = new C(t.locale || D.localization.locale, t.numberOptions || D.localization.numberOptions, t.dateOptions || D.localization.dateOptions) }, getFormatter: function (t) { return this.localization.get(t).format }, formatValue: function (t, e) { var i = this.getFormatter(t); return i(e) }, isRowResizeable: function () { return this.properties.rowResize }, isCheckboxOnlyRowSelections: function () { return this.properties.checkboxOnlyRowSelections }, getHoverCell: function () { return this.deprecated("getHoverCell()", "hoverCell", "v1.2.0") }, setHoverCell: function (t) { var e = this.hoverCell, i = new h(t.x, t.y); e && e.equals(i) || (this.hoverCell = i, e && this.fireSyntheticOnCellExitEvent(e), this.fireSyntheticOnCellEnterEvent(i), this.repaint()) }, addGlobalProperties: function (t) { if (A) this._addGlobalProperties(t); else { var e = this; setTimeout(function () { e.addGlobalProperties(t) }, 10) } }, _addGlobalProperties: function (t) { g(t).each(function (t, e) { A[e] = t }) }, refreshProperties: function () { var t = this.properties; this.selectionModel.multipleSelections = t.multipleSelections, this.computeCellsBounds(), this.checkScrollbarVisibility(), this.behavior.defaultRowHeight = null, this.isColumnAutosizing() && this.behavior.autosizeAllColumns() }, addProperties: function (t) { var e = this.properties; o(e, t), this.refreshProperties() }, getPrivateState: function () { return this.deprecate("getPrivateState()", "properties", "1.2.0") }, setState: function (t) { var e = this; this.behavior.setState(t), this.refreshProperties(), setTimeout(function () { e.behaviorChanged(), e.synchronizeScrollingBoundaries() }, 100) }, getState: function () { return this.behavior.getState() }, getMouseDown: function () { var t = this.mouseDown.length - 1; return t < 0 ? null : this.mouseDown[t] }, popMouseDown: function () { 0 !== this.mouseDown.length && (this.mouseDown.length = this.mouseDown.length - 1) }, clearMouseDown: function () { this.mouseDown = [new h((-1), (-1))], this.dragExtent = null }, setMouseDown: function (t) { this.mouseDown.push(t) }, getDragExtent: function () { return this.dragExtent }, setDragExtent: function (t) { this.dragExtent = t }, gridRenderedNotification: function () { this.cellEditor && this.cellEditor.gridRenderedNotification(), this.checkColumnAutosizing(), this.fireSyntheticGridRenderedEvent() }, checkColumnAutosizing: function () { var t = this.behavior; t.autoSizeRowNumberColumn(), this.isColumnAutosizing() && t.checkColumnAutosizing(!1) && setTimeout(function () { t.grid.synchronizeScrollingBoundaries() }) }, checkClipboardCopy: function (t) { if (this.hasFocus()) { t.preventDefault(); var e = this.getSelectionAsTSV(); t.clipboardData.setData("text/plain", e) } }, hasSelections: function () { if (this.getSelectionModel) return this.selectionModel.hasSelections() }, getSelectionAsTSV: function () { var t = this.selectionModel; if (t.hasSelections()) { var e = this.getSelectionMatrix(); return e = e[e.length - 1], this.getMatrixSelectionAsTSV(e) } return t.hasRowSelections() ? this.getMatrixSelectionAsTSV(this.getRowSelectionMatrix()) : t.hasColumnSelections() ? this.getMatrixSelectionAsTSV(this.getColumnSelectionMatrix()) : void 0 }, getMatrixSelectionAsTSV: function (t) { var e = ""; if (t.length) { var i = t.length, n = t[0].length, o = i * n, r = i - 1, s = n > 1 ? "\n" : ""; if (o > 2e4) return alert("selection size is too big to copy to the paste buffer"), ""; for (var a = 0; a < n; a++) for (var l = 0; l < i; l++) e += t[l][a] + (l < r ? "\t" : s) } return e }, hasFocus: function () { return this.getCanvas().hasFocus() }, clearSelections: function () { var t = this.isCheckboxOnlyRowSelections(); this.selectionModel.clear(t), this.clearMouseDown() }, clearMostRecentSelection: function () { var t = this.isCheckboxOnlyRowSelections(); this.selectionModel.clearMostRecentSelection(t) }, clearMostRecentColumnSelection: function () { this.selectionModel.clearMostRecentColumnSelection() }, clearMostRecentRowSelection: function () { }, clearRowSelection: function () { this.selectionModel.clearRowSelection(), this.behavior.dataModel.clearSelectedData() }, select: function (t, e, i, n) { t < 0 || e < 0 || this.selectionModel.select(t, e, i, n) }, isSelected: function (t, e) { return this.selectionModel.isSelected(t, e) }, isCellSelectedInRow: function (t) { return this.selectionModel.isCellSelectedInRow(t) }, isCellSelectedInColumn: function (t) { return this.selectionModel.isCellSelectedInColumn(t) }, setBehavior: function (t) { var e = t.Behavior || x; this.behavior = new e(this, t), this.initCanvas(), this.initScrollbars(), this.refreshProperties(), this.behavior.reindex() }, setData: function (t, e) { this.behavior || this.setBehavior({ pipeline: this.options.pipeline }), this.behavior.setData(t, e), this.behavior.changed() }, updateData: function (t, e) { this.behavior ? (this.behavior.updateData(t, e), this.behavior.changed()) : this.setData(t, e) }, setPipeline: function (t, e) { this.behavior.setPipeline(t, e) }, behaviorChanged: function () { this.divCanvas && (this.numColumns !== this.getColumnCount() || this.numRows !== this.getRowCount() ? (this.numColumns = this.getColumnCount(), this.numRows = this.getRowCount(), this.behaviorShapeChanged()) : this.behaviorStateChanged()) }, behaviorShapeChanged: function () { this.divCanvas && this.synchronizeScrollingBoundaries() }, behaviorStateChanged: function () { this.divCanvas && (this.computeCellsBounds(), this.repaint()) }, getBounds: function () { return this.renderer.getBounds() }, resolveProperty: function (t) { return R.resolveProperty || (R.resolveProperty = !0, console.warn("resolveProperty(key) deprecated as of v1.2.0 in favor of grid.properties[key] and will be removed in a future version.")), this.properties[t] }, repaint: function () { var t = this.properties.repaintImmediately, e = this.getCanvas(); e && (t === !0 ? e.paintNow() : e.repaint()) }, paintNow: function () { this.getCanvas().paintNow() }, useHiDPI: function () { return this.properties.useHiDPI !== !1 }, setContainer: function (t) { this.initContainer(t), this.initRenderer() }, initContainer: function (t) { "string" == typeof t && (t = document.querySelector(t)), t.style.position || (t.style.position = null), t.clientHeight < 1 && (t.style.height = null), b.inject("grid"), t.oncontextmenu = function (t) { return t.stopPropagation(), t.preventDefault(), !1 }, t.removeAttribute("tabindex"), t.classList.add("hypergrid-container"), t.id = t.id || "hypergrid" + (document.querySelectorAll(".hypergrid-container").length - 1 || ""), this.div = t }, initCanvas: function () { function t(t) { return Object.defineProperty(e.getGridCellFromMousePoint(t.detail.mouse), "primitiveEvent", { value: t, enumerable: !1, configurable: !0, writable: !0 }) } if (!this.divCanvas) { var e = this, i = this.options.margin || {}, n = this.divCanvas = document.createElement("div"), o = n.style; o.position = "absolute", o.top = i.top || 0, o.right = i.right || 0, o.bottom = i.bottom || 0, o.left = i.left || 0, this.div.appendChild(n), this.canvas = new c(n, this.renderer), this.canvas.canvas.classList.add("hypergrid"), this.canvas.canvas.style.backgroundColor = this.properties.lineColor, this.canvas.resize(), this.canvas.resizeNotification = function () { e.resized() }, this.addEventListener("fin-canvas-mousemove", function (i) { e.properties.readOnly || e.delegateMouseMove(t(i)) }), this.addEventListener("fin-canvas-mousedown", function (i) { if (!e.properties.readOnly) { if (!e.abortEditing()) return void event.stopPropagation(); var n = t(i); n.keys = i.detail.keys, e.mouseDownState = n, e.delegateMouseDown(n), e.fireSyntheticMouseDownEvent(n), e.repaint() } }), this.addEventListener("fin-canvas-click", function (i) { if (!e.properties.readOnly) { var n = t(i); n.keys = i.detail.keys, e.fireSyntheticClickEvent(n), e.delegateClick(n) } }), this.addEventListener("fin-canvas-mouseup", function (i) { if (!e.properties.readOnly) { e.dragging = !1, e.isScrollingNow() && e.setScrollingNow(!1), e.columnDragAutoScrolling && (e.columnDragAutoScrolling = !1); var n = t(i); e.delegateMouseUp(n), e.mouseDownState && e.fireSyntheticButtonPressedEvent(e.mouseDownState), e.mouseDownState = null, e.fireSyntheticMouseUpEvent(n) } }), this.addEventListener("fin-canvas-dblclick", function (i) { if (!e.properties.readOnly) { var n = t(i); e.fireSyntheticDoubleClickEvent(n, i), e.delegateDoubleClick(n) } }), this.addEventListener("fin-canvas-drag", function (i) { e.properties.readOnly || (e.dragging = !0, e.delegateMouseDrag(t(i))) }), this.addEventListener("fin-canvas-keydown", function (t) { e.properties.readOnly || (e.fireSyntheticKeydownEvent(t), e.delegateKeyDown(t)) }), this.addEventListener("fin-canvas-keyup", function (t) { e.properties.readOnly || (e.fireSyntheticKeyupEvent(t), e.delegateKeyUp(t)) }), this.addEventListener("fin-canvas-wheelmoved", function (i) { e.delegateWheelMoved(t(i)) }), this.addEventListener("fin-canvas-mouseout", function (i) { e.properties.readOnly || e.delegateMouseExit(t(i)) }), this.addEventListener("fin-canvas-context-menu", function (i) { e.delegateContextMenu(t(i)) }), document.body.addEventListener("copy", function (t) { e.checkClipboardCopy(t) }) } }, convertViewPointToDataPoint: function (t) { return this.behavior.convertViewPointToDataPoint(t) }, convertDataPointToViewPoint: function (t) { return this.behavior.convertDataPointToViewPoint(t) }, addEventListener: function (t, e) { var i = this, n = function (t) { i.allowEventHandlers && e(t) }; this.canvas.addEventListener(t, n) }, allowEvents: function (t) { (this.allowEventHandlers = !!t) ? this.behavior.featureChain.attachChain() : this.behavior.featureChain.detachChain(), this.behavior.changed() }, setScrollingNow: function (t) { this.scrollingNow = t }, isScrollingNow: function () { return this.scrollingNow }, overColumnDivider: function (t) { return this.renderer.overColumnDivider(t.primitiveEvent.detail.mouse.x) }, overRowDivider: function (t) { return this.renderer.overRowDivider(t.primitiveEvent.detail.mouse.y) }, beCursor: function (t) { t || (t = "default"), this.div.style.cursor = t }, delegateWheelMoved: function (t) { this.behavior.onWheelMoved(this, t) }, delegateMouseExit: function (t) { this.behavior.handleMouseExit(this, t) }, delegateContextMenu: function (t) { this.behavior.onContextMenu(this, t) }, delegateMouseMove: function (t) { this.behavior.onMouseMove(this, t) }, delegateMouseDown: function (t) { this.behavior.handleMouseDown(this, t) }, delegateMouseUp: function (t) { this.behavior.onMouseUp(this, t) }, delegateClick: function (t) { this.behavior.onClick(this, t) }, delegateMouseDrag: function (t) { this.behavior.onMouseDrag(this, t) }, delegateDoubleClick: function (t) { this.behavior.onDoubleClick(this, t) }, delegateKeyDown: function (t) { this.behavior.onKeyDown(this, t) }, delegateKeyUp: function (t) { this.behavior.onKeyUp(this, t) }, stopEditing: function () { return !this.cellEditor || this.cellEditor.stopEditing() }, cancelEditing: function () { return !this.cellEditor || this.cellEditor.cancelEditing() }, abortEditing: function () { return !this.cellEditor || (this.cellEditor.abortEditing ? this.cellEditor.abortEditing() : this.cellEditor.stopEditing()) }, getDataBounds: function () { var t = this.canvas.bounds; return new d(0, 0, t.origin.x + t.extent.x, t.origin.y + t.extent.y) }, getCanvas: function () { return this.canvas }, editAt: function (t) { var e; return 2 === arguments.length ? this.deprecated("editAt(cellEditor, event)", "editAt(event)", "1.0.6", arguments) : (this.abortEditing(), t.isGridColumn && t.getCellProperty(t.isGridRow ? "editable" : "filterable") && (this.setMouseDown(t.gridCell), this.setDragExtent(new h(0, 0)), e = this.getCellEditorAt(t), e && e.beginEditing()), e) }, isColumnVisible: function (t) { return this.renderer.isColumnVisible(t) }, isDataRowVisible: function (t) { return this.renderer.isRowVisible(t) }, isDataVisible: function (t, e) { return this.isDataRowVisible(e) && this.isColumnVisible(t) }, insureModelColIsVisible: function (t, e) { var i = this.getColumnCount() - 1, n = t + (e > 0), o = !this.isColumnVisible(n) || t === i; return o && this.scrollBy(e, 0), o }, insureModelRowIsVisible: function (t, e) { var i = this.getRowCount() - 1, n = t + (e > 0), o = !this.isDataRowVisible(n) || t === i; return o && this.scrollBy(0, e), o }, scrollBy: function (t, e) { this.scrollHBy(t), this.scrollVBy(e) }, scrollVBy: function (t) {
                var e = this.sbVScroller.range.max, i = this.getVScrollValue(), n = Math.min(e, Math.max(0, i + t));
                n !== i && this.setVScrollValue(n)
            }, scrollHBy: function (t) { var e = this.sbHScroller.range.max, i = this.getHScrollValue(), n = Math.min(e, Math.max(0, i + t)); n !== i && this.setHScrollValue(n) }, scrollToMakeVisible: function (t, e) { var i, n = this.renderer.dataWindow, o = this.properties.fixedColumnCount, r = this.properties.fixedRowCount; t >= o && ((i = t - n.origin.x) < 0 || (i = t - n.corner.x + 1) > 0) && (this.sbHScroller.index += i), e >= r && ((i = e - n.origin.y) < 0 || (i = e - n.corner.y) > 0) && (this.sbVScroller.index += i) }, selectCellAndScrollToMakeVisible: function (t, e) { this.selectCell(t, e, !0), this.scrollToMakeVisible(t, e) }, getGridCellFromMousePoint: function (t) { return this.renderer.getGridCellFromMousePoint(t) }, getBoundsOfCell: function (t) { var e = this.renderer.getBoundsOfCell(t.x, t.y); return new d(e.x, e.y, e.width, e.height) }, resized: function () { this.synchronizeScrollingBoundaries() }, cellClicked: function (t) { var e = !1; return t.gridCell.x <= this.getColumnCount() && t.gridCell.y <= this.getRowCount() && (e = this.behavior.cellClicked(t), void 0 !== e && this.behavior.changed()), e }, fireSyntheticColumnSortEvent: function (t, e) { var i = new CustomEvent("fin-column-sort", { detail: { column: t, keys: e } }); this.canvas.dispatchEvent(i) }, fireSyntheticEditorKeyUpEvent: function (t, e) { var i = new CustomEvent("fin-editor-keyup", { detail: { input: t, keyEvent: e, "char": this.canvas.getCharMap()[e.keyCode][e.shiftKey ? 1 : 0] } }); this.canvas.dispatchEvent(i) }, fireSyntheticEditorKeyDownEvent: function (t, e) { var i = new CustomEvent("fin-editor-keydown", { detail: { input: t, keyEvent: e, "char": this.canvas.getCharMap()[e.keyCode][e.shiftKey ? 1 : 0] } }); this.canvas.dispatchEvent(i) }, fireSyntheticEditorKeyPressEvent: function (t, e) { var i = new CustomEvent("fin-editor-keypress", { detail: { input: t, keyEvent: e, "char": this.canvas.getCharMap()[e.keyCode][e.shiftKey ? 1 : 0] } }); this.canvas.dispatchEvent(i) }, fireSyntheticEditorDataChangeEvent: function (t, e, i) { var n = new CustomEvent("fin-editor-data-change", { detail: { input: t, oldValue: e, newValue: i }, cancelable: !0 }); return this.canvas.dispatchEvent(n) }, fireSyntheticRowSelectionChangedEvent: function () { var t = new CustomEvent("fin-row-selection-changed", { detail: { rows: this.getSelectedRows(), columns: this.getSelectedColumns(), selections: this.selectionModel.getSelections() } }); this.canvas.dispatchEvent(t) }, fireSyntheticColumnSelectionChangedEvent: function () { var t = new CustomEvent("fin-column-selection-changed", { detail: { rows: this.getSelectedRows(), columns: this.getSelectedColumns(), selections: this.selectionModel.getSelections() } }); this.canvas.dispatchEvent(t) }, selectionChanged: function () { var t = this.getSelectedRows(), e = new CustomEvent("fin-selection-changed", { detail: { rows: t, columns: this.getSelectedColumns(), selections: this.selectionModel.getSelections() } }); this.canvas.dispatchEvent(e) }, getRowSelection: function (t) { function e(t, e) { var o = r.getRow(t); n[e] = l.call(o, i) } var i, n, o, r = this, s = this.selectionModel.getSelectedRows(), a = this.getColumnCount(), u = {}; t ? (a += this.getHiddenColumns().length, o = this.behavior.getColumn) : o = this.behavior.getActiveColumn, o = o.bind(this.behavior); for (var c = 0; c < a; c++) i = o(c), n = u[i.name] = new Array(s.length), s.forEach(e); return u }, getHiddenColumns: function () { return this.behavior.getHiddenColumns() }, getRowSelectionMatrix: function () { function t(t, i) { var n = e.getRow(t); o[r][i] = l.call(n, s) } for (var e = this, i = this.selectionModel.getSelectedRows(), n = this.getColumnCount(), o = new Array(n), r = 0; r < n; r++) { var s = this.behavior.getActiveColumn(r); o[r] = new Array(i.length), i.forEach(t) } return o }, getColumnSelectionMatrix: function () { var t, e = this, i = this.getHeaderRowCount(), n = this.getSelectedColumns(), o = this.getRowCount(), r = new Array(n.length); return n.forEach(function (n, s) { for (var a = e.behavior.getActiveColumn(n), u = r[s] = new Array(o), c = i; c < o; c++) t = e.getRow(c), u[c] = l.call(t, a) }), r }, getColumnSelection: function () { var t, e = this, i = this.getHeaderRowCount(), n = this.getSelectedColumns(), o = {}, r = this.getRowCount(); return n.forEach(function (n) { for (var s = e.behavior.getActiveColumn(n), a = o[s.name] = new Array(r), u = i; u < r; u++) t = e.getRow(u), a[u] = l.call(t, s) }), o }, getSelection: function () { function t(t, n) { for (var s = r(t), a = s.extent.x + 1, u = s.extent.y + 1, c = {}, h = 0, d = s.origin.x; h < a; h++, d++) for (var g = i.behavior.getActiveColumn(d), f = c[g.name] = new Array(u), p = 0, m = s.origin.y; p < u; p++, m++) e = i.getRow(m), f[p] = l.call(e, g); o[n] = c } var e, i = this, n = this.getSelections(), o = new Array(n.length); return n.forEach(t), o }, getSelectionMatrix: function () { function t(t, n) { for (var s = r(t), a = s.extent.x + 1, u = s.extent.y + 1, c = [], h = 0, d = s.origin.x; h < a; h++, d++) for (var g = c[h] = new Array(u), f = i.behavior.getActiveColumn(d), p = 0, m = s.origin.y; p < u; p++, m++) e = i.getRow(m), g[p] = l.call(e, f); o[n] = c } var e, i = this, n = this.getSelections(), o = new Array(n.length); return n.forEach(t), o }, fireSyntheticContextMenuEvent: function (t) { t.rows = this.getSelectedRows(), t.columns = this.getSelectedColumns(), t.selections = this.selectionModel.getSelections(), this.canvas.dispatchEvent(new CustomEvent("fin-context-menu", { detail: t })) }, fireSyntheticMouseUpEvent: function (t) { t.rows = this.getSelectedRows(), t.columns = this.getSelectedColumns(), t.selections = this.selectionModel.getSelections(), this.canvas.dispatchEvent(new CustomEvent("fin-mouseup", { detail: t })) }, fireSyntheticMouseDownEvent: function (t) { t.rows = this.getSelectedRows(), t.columns = this.getSelectedColumns(), t.selections = this.selectionModel.getSelections(), this.canvas.dispatchEvent(new CustomEvent("fin-mousedown", { detail: t })) }, isViewableButton: function (t, e) { return this.renderer.isViewableButton(t, e) }, fireSyntheticButtonPressedEvent: function (t) { this.isViewableButton(t.dataCell.x, t.gridCell.y) && this.canvas.dispatchEvent(new CustomEvent("fin-button-pressed", { detail: t })) }, fireSyntheticOnColumnsChangedEvent: function () { var t = { time: Date.now(), grid: this }, e = new CustomEvent("fin-column-changed-event", { detail: t }); this.canvas.dispatchEvent(e) }, fireSyntheticKeydownEvent: function (t) { var e = new CustomEvent("fin-keydown", { detail: t.detail }); this.canvas.dispatchEvent(e) }, fireSyntheticKeyupEvent: function (t) { var e = new CustomEvent("fin-keyup", { detail: t.detail }); this.canvas.dispatchEvent(e) }, fireSyntheticFilterAppliedEvent: function () { var t = new CustomEvent("fin-filter-applied"); this.canvas.dispatchEvent(t) }, fireSyntheticOnCellEnterEvent: function (t) { var e = { gridCell: t, time: Date.now(), grid: this }, i = new CustomEvent("fin-cell-enter", { detail: e }); this.canvas.dispatchEvent(i) }, fireSyntheticOnCellExitEvent: function (t) { var e = { gridCell: t, time: Date.now(), grid: this }, i = new CustomEvent("fin-cell-exit", { detail: e }); this.canvas.dispatchEvent(i) }, fireSyntheticClickEvent: function (t) { var e = t.gridCell, i = { gridCell: e, mousePoint: t.mousePoint, keys: t.keys, primitiveEvent: t, time: Date.now(), grid: this }; this.behavior.enhanceDoubleClickEvent(i); var n = new CustomEvent("fin-click", { detail: i }); this.canvas.dispatchEvent(n) }, fireSyntheticDoubleClickEvent: function (t) { if (this.abortEditing()) { var e = t.gridCell, i = { gridCell: e, mousePoint: t.mousePoint, time: Date.now(), grid: this }; this.behavior.enhanceDoubleClickEvent(t); var n = new CustomEvent("fin-double-click", { detail: i }); this.behavior.cellDoubleClicked(e, t), this.canvas.dispatchEvent(n) } }, fireSyntheticGridRenderedEvent: function () { var t = new CustomEvent("fin-grid-rendered", { detail: { source: this, time: Date.now() } }); this.canvas && this.canvas.dispatchEvent(t) }, fireScrollEvent: function (t, e, i) { var n = new CustomEvent(t, { detail: { oldValue: e, value: i, time: Date.now() } }); this.canvas.dispatchEvent(n) }, setVScrollValue: function (t) { var e = this; if (t = Math.min(this.sbVScroller.range.max, Math.max(0, Math.round(t))), t !== this.vScrollValue) { this.behavior._setScrollPositionY(t); var i = this.vScrollValue; this.vScrollValue = t, this.scrollValueChangedNotification(), setTimeout(function () { e.fireScrollEvent("fin-scroll-y", i, t) }) } }, getVScrollValue: function () { return this.vScrollValue }, setHScrollValue: function (t) { var e = this; if (t = Math.min(this.sbHScroller.range.max, Math.max(0, Math.round(t))), t !== this.hScrollValue) { this.behavior._setScrollPositionX(t); var i = this.hScrollValue; this.hScrollValue = t, this.scrollValueChangedNotification(), setTimeout(function () { e.fireScrollEvent("fin-scroll-x", i, t) }) } }, getHScrollValue: function () { return this.hScrollValue }, takeFocus: function () { var t = this.cellEditor; this.stopEditing(), t || this.getCanvas().takeFocus() }, editorTakeFocus: function () { if (this.cellEditor) return this.cellEditor.takeFocus() }, initScrollbars: function () { if (!this.sbHScroller || !this.sbVScroller) { var t = this, e = new u({ orientation: "horizontal", onchange: t.setHScrollValue.bind(t), cssStylesheetReferenceElement: this.div }), i = new u({ orientation: "vertical", onchange: t.setVScrollValue.bind(t), paging: { up: t.pageUp.bind(t), down: t.pageDown.bind(t) } }); this.sbHScroller = e, this.sbVScroller = i; var n = this.properties.hScrollbarClassPrefix, o = this.properties.vScrollbarClassPrefix; n && "" !== n && (this.sbHScroller.classPrefix = n), o && "" !== o && (this.sbVScroller.classPrefix = o), this.div.appendChild(e.bar), this.div.appendChild(i.bar), this.resizeScrollbars() } }, resizeScrollbars: function () { this.sbHScroller.shortenBy(this.sbVScroller).resize(), this.sbVScroller.resize() }, setVScrollbarValues: function (t) { this.sbVScroller.range = { min: 0, max: t } }, setHScrollbarValues: function (t) { this.sbHScroller.range = { min: 0, max: t } }, scrollValueChangedNotification: function () { this.hScrollValue === this.sbPrevHScrollValue && this.vScrollValue === this.sbPrevVScrollValue || (this.sbPrevHScrollValue = this.hScrollValue, this.sbPrevVScrollValue = this.vScrollValue, this.cellEditor && this.cellEditor.scrollValueChangedNotification(), this.computeCellsBounds()) }, getValue: function (t, e) { return this.behavior.getValue.apply(this.behavior, arguments) }, setValue: function (t, e, i) { this.behavior.setValue.apply(this.beahvior, arguments) }, synchronizeScrollingBoundaries: function () { var t = this.getFixedColumnCount(), e = this.getFixedRowCount(), i = this.getColumnCount(), n = this.getRowCount(), o = this.getBounds(); if (o) { for (var r = o.height - this.behavior.getFixedRowsMaxHeight() - 15, s = o.width - this.behavior.getFixedColumnsMaxWidth() - 15, a = 0, l = 0; l < i && a <= s; l++) a += this.getColumnWidth(i - l - 1); for (var u = 0, c = 0; c < n && u <= r; c++) u += this.getRowHeight(n - c - 1); if (this.sbHScroller) { var h = 1 + Math.max(0, i - t - l); this.setHScrollbarValues(h), this.setHScrollValue(Math.min(this.getHScrollValue(), h)) } if (this.sbVScroller) { var d = Math.max(0, n - e - c); this.setVScrollbarValues(d), this.setVScrollValue(Math.min(this.getVScrollValue(), d)) } this.behaviorStateChanged(), this.resizeScrollbars() } }, synchronizeScrollingBoundries: function () { this.deprecated("synchronizeScrollingBoundries", "synchronizeScrollingBoundaries", "1.2.0") }, getVisibleRows: function () { return this.renderer.getVisibleRows() }, getVisibleColumns: function () { return this.renderer.getVisibleColumns() }, initRenderer: function () { this.renderer = this.renderer || new m(this) }, getColumnWidth: function (t) { return this.behavior.getColumnWidth(t) }, setColumnWidth: function (t, e) { this.abortEditing() && this.behavior.setColumnWidth(t, e) }, getColumnEdge: function (t) { return this.behavior.getColumnEdge(t, this.getRenderer()) }, getFixedColumnsWidth: function () { return this.behavior.getFixedColumnsWidth() }, getRowHeight: function (t, e) { return this.behavior.getRowHeight(t, e) }, setRowHeight: function (t, e, i) { this.abortEditing() && this.behavior.setRowHeight(t, e, i) }, getFixedRowsHeight: function () { return this.behavior.getFixedRowsHeight() }, getColumnCount: function () { return this.behavior.getActiveColumnCount() }, getRowCount: function () { return this.behavior.getRowCount() }, getUnfilteredRowCount: function () { return this.deprecated("getUnfilteredRowCount()", null, "1.2.0", arguments, "No longer supported") }, getFixedColumnCount: function () { return this.behavior.getFixedColumnCount() }, getFixedRowCount: function () { return this.behavior.getFixedRowCount() }, topLeftClicked: function (t) { this.behavior.topLeftClicked(this, t) }, rowHeaderClicked: function (t) { this.behavior.rowHeaderClicked(this, t) }, columnHeaderClicked: function (t) { this.behavior.columnHeaderClicked(this, t) }, onEditorActivate: function (t) { return this.editAt(t) }, getCellEditorAt: function (t) { return this.behavior.getCellEditorAt(t) }, toggleHiDPI: function () { this.useHiDPI() ? this.removeAttribute("hidpi") : this.setAttribute("hidpi", null), this.canvas.resize() }, getHiDPI: function (t) { if (window.devicePixelRatio && this.useHiDPI()) { var e = window.devicePixelRatio || 1, i = t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1, n = e / i; return n } return 1 }, getRenderedWidth: function (t) { return this.renderer.getRenderedWidth(t) }, getRenderedHeight: function (t) { return this.renderer.getRenderedHeight(t) }, updateCursor: function () { var t = this.behavior.getCursorAt(-1, -1), e = this.hoverCell; if (e && e.x > -1 && e.y > -1) { var i = e.x + this.getHScrollValue(); t = this.behavior.getCursorAt(i, e.y + this.getVScrollValue()) } this.beCursor(t) }, repaintCell: function (t, e) { this.renderer.repaintCell(t, e) }, isDraggingColumn: function () { return !!this.renderOverridesCache.dragger }, pageUp: function () { var t = this.renderer.getPageUpRow(); return this.setVScrollValue(t), t }, pageDown: function () { var t = this.renderer.getPageDownRow(); return this.setVScrollValue(t), t }, pageLeft: function () { throw "page left not yet implemented" }, pageRight: function () { throw "page right not yet implemented" }, getRenderedData: function () { var t, e = this.behavior, i = this.getColumnCount().length, n = this.renderer.visibleRows.length, o = new Array(i), r = new Array(n); return o.forEach(function (t, i) { o[i] = e.getActiveColumn(i).header }), r.forEach(function (i, n) { t = r[n] = { hierarchy: e.getFixedColumnValue(0, n) }, o.forEach(function (i, o) { t[i] = e.getValue(o, n) }) }), r }, getSelectedRow: function () { var t = this.selectionModel.getSelections(); if (t.length) { for (var e = this.behavior, i = this.getColumnCount(), n = t[0].origin.y, o = {}, r = 0; r < i; r++) o[e.getActiveColumn(r).header] = e.getValue(r, n); return o } }, fireRequestCellEdit: function (t, e) { var i = new CustomEvent("fin-request-cell-edit", { cancelable: !0, detail: { value: e, gridCell: t, time: Date.now() } }); return this.canvas.dispatchEvent(i) }, fireBeforeCellEdit: function (t, e, i, n) { var o = new CustomEvent("fin-before-cell-edit", { cancelable: !0, detail: { oldValue: e, newValue: i, gridCell: t, time: Date.now(), input: n, row: this.getRow(t.y) } }); return this.canvas.dispatchEvent(o) }, fireAfterCellEdit: function (t, e, i, n) { var o = new CustomEvent("fin-after-cell-edit", { detail: { newValue: i, oldValue: e, gridCell: t, time: Date.now(), input: n, row: this.getRow(t.y) } }); this.canvas.dispatchEvent(o) }, autosizeColumn: function (t) { var e = this.behavior.getActiveColumn(t); e.checkColumnAutosizing(!0), this.computeCellsBounds() }, setFocusable: function (t) { this.getCanvas().setFocusable(t) }, getVisibleColumnsCount: function () { return this.renderer.getVisibleColumnsCount() }, getVisibleRowsCount: function () { return this.renderer.getVisibleRowsCount() }, updateSize: function () { this.canvas.checksize() }, stopPaintThread: function () { this.canvas.stopPaintThread() }, stopResizeThread: function () { this.canvas.stopResizeThread() }, restartResizeThread: function () { this.canvas.restartResizeThread() }, restartPaintThread: function () { this.canvas.restartPaintThread() }, swapColumns: function (t, e) { this.behavior.swapColumns(t, e) }, endDragColumnNotification: function () { this.behavior.endDragColumnNotification() }, getFixedColumnsMaxWidth: function () { return this.behavior.getFixedColumnsMaxWidth() }, isMouseDownInHeaderArea: function () { var t = this.getHeaderRowCount(), e = this.getMouseDown(); return e.x < 0 || e.y < t }, isHeaderWrapping: function () { return this.properties.headerTextWrapping }, _getBoundsOfCell: function (t, e) { return this.deprecated("_getBoundsOfCell()", "getBoundsOfCell()", "1.2.0", arguments) }, getColumnProperties: function (t) { return this.behavior.getColumnProperties(t) }, setColumnProperties: function (t, e) { this.behavior.setColumnProperties(t, e) }, moveSingleSelect: function (t, e) { this.behavior.moveSingleSelect(this, t, e) }, selectCell: function (t, e, i) { var n = this.isCheckboxOnlyRowSelections(); this.selectionModel.clear(n), this.selectionModel.select(t, e, 0, 0, i) }, toggleSelectColumn: function (t, e) { e = e || []; var i = this.selectionModel, n = i.isColumnSelected(t), o = e.indexOf("CTRL") > -1, r = e.indexOf("SHIFT") > -1; o || r ? (o && (n ? i.deselectColumn(t) : i.selectColumn(t)), r && (i.clear(), i.selectColumn(this.lastEdgeSelection[0], t))) : (i.clear(), n || i.selectColumn(t)), n || r || (this.lastEdgeSelection[0] = t), this.repaint(), this.fireSyntheticColumnSelectionChangedEvent() }, toggleSelectRow: function (t, e) { e = e || []; var i = this.selectionModel, n = i.isRowSelected(t), o = e.indexOf("SHIFT") >= 0; n ? i.deselectRow(t) : (this.singleSelect(), i.selectRow(t)), o && (i.clear(), i.selectRow(this.lastEdgeSelection[1], t)), n || o || (this.lastEdgeSelection[1] = t), this.repaint() }, singleSelect: function () { var t, e = this.isCheckboxOnlyRowSelections(), i = this.isSingleRowSelectionMode(), n = !1; return this.mouseDownState && (n = this.mouseDownState.primitiveEvent.detail.primitiveEvent.ctrlKey), t = e && i || !e && (!n || i), t && this.selectionModel.clearRowSelection(), t }, selectViewportCell: function (t, e) { var i = this.getHeaderRowCount(), n = this.renderer.visibleColumns[t].ColumnIndex, o = this.renderer.visibleRows[e].rowIndex; this.clearSelections(), this.select(n, o + i, 0, 0), this.setMouseDown(this.newPoint(n, o + i)), this.setDragExtent(this.newPoint(0, 0)), this.repaint() }, selectToViewportCell: function (t, e) { var i = this.getSelections(); if (i && i.length) { var n = this.getHeaderRowCount(), o = this.renderer.visibleColumns[t].columnIndex, r = this.renderer.visibleRows[e].rowIndex + n, s = i[0], a = s.origin; this.setDragExtent(this.newPoint(o - a.x, r - a.y)), this.select(a.x, a.y, o - a.x, r - a.y), this.repaint() } }, selectFinalCellOfCurrentRow: function () { var t = this.getColumnCount() - 1, e = this.getSelectedRows()[0], i = this.getHeaderRowCount(); this.clearSelections(), this.scrollBy(this.getColumnCount(), 0), this.select(t, e + i, 0, 0), this.setMouseDown(this.newPoint(t, e + i)), this.setDragExtent(this.newPoint(0, 0)), this.repaint() }, selectToFinalCellOfCurrentRow: function () { var t = this.getSelections(); if (t && t.length) { var e = t[0], i = e.origin, n = e.extent, o = this.getColumnCount(); this.scrollBy(o, 0), this.clearSelections(), this.select(i.x, i.y, o - i.x - 1, n.y), this.repaint() } }, selectFirstCellOfCurrentRow: function () { var t = 0, e = this.getSelectedRows()[0], i = this.getHeaderRowCount(); this.clearSelections(), this.setHScrollValue(0), this.select(t, e + i, 0, 0), this.setMouseDown(this.newPoint(t, e + i)), this.setDragExtent(this.newPoint(0, 0)), this.repaint() }, selectToFirstCellOfCurrentRow: function () { var t = this.getSelections(); if (t && t.length) { var e = t[0], i = e.origin, n = e.extent; this.clearSelections(), this.select(i.x, i.y, -i.x, n.y), this.setHScrollValue(0), this.repaint() } }, selectFinalCell: function () { this.selectCell(this.getColumnCount() - 1, this.getRowCount() - 1), this.scrollBy(this.getColumnCount(), this.getRowCount()), this.repaint() }, selectToFinalCell: function () { var t = this.getSelections(); if (t && t.length) { var e = t[0], i = e.origin, n = this.getColumnCount(), o = this.getRowCount(); this.clearSelections(), this.select(i.x, i.y, n - i.x - 1, o - i.y - 1), this.scrollBy(n, o), this.repaint() } }, isShowRowNumbers: function () { return this.properties.showRowNumbers }, isEditable: function () { return this.properties.editable === !0 }, isGridRow: function (t) { return t >= 0 || t.y >= 0 }, isShowHeaderRow: function () { return this.properties.showHeaderRow }, getHeaderRowCount: function () { return this.behavior.getHeaderRowCount() }, isShowFilterRow: function () { return this.properties.showFilterRow }, hasHierarchyColumn: function () { return this.behavior.hasHierarchyColumn() }, isHierarchyColumn: function (t) { return this.hasHierarchyColumn() && 0 === t }, checkScrollbarVisibility: function () { }, isColumnOrRowSelected: function () { return this.selectionModel.isColumnOrRowSelected() }, selectColumn: function (t, e) { this.selectionModel.selectColumn(t, e) }, selectRow: function (t, e) { var i = this.selectionModel; this.singleSelect() ? t = e : e = e || t, i.selectRow(Math.min(t, e), Math.max(t, e)) }, isRowNumberAutosizing: function () { return this.properties.rowNumberAutosizing }, lookupFeature: function (t) { return this.behavior.lookupFeature(t) }, getRow: function (t) { return this.behavior.getRow(t) }, isCellSelection: function () { return this.properties.cellSelection === !0 }, isRowSelection: function () { return this.properties.rowSelection === !0 }, isColumnSelection: function () { return this.properties.columnSelection === !0 }, isColumnAutosizing: function () { return this.properties.columnAutosizing === !0 }, selectRowsFromCells: function () { if (!this.isCheckboxOnlyRowSelections()) { var t, e = this.mouseDownState.primitiveEvent.detail.primitiveEvent.ctrlKey; e && !this.isSingleRowSelectionMode() ? this.selectionModel.selectRowsFromCells(0, e) : (t = this.selectionModel.getLastSelection()) ? this.selectRow(null, t.corner.y) : this.clearRowSelection() } }, selectColumnsFromCells: function () { this.selectionModel.selectColumnsFromCells() }, getSelectedRows: function () { return this.behavior.getSelectedRows() }, getSelectedColumns: function () { return this.behavior.getSelectedColumns() }, getSelections: function () { return this.behavior.getSelections() }, getLastSelectionType: function () { return this.selectionModel.getLastSelectionType() }, isInCurrentSelectionRectangle: function (t, e) { return this.selectionModel.isInCurrentSelectionRectangle(t, e) }, selectAllRows: function () { this.selectionModel.selectAllRows() }, areAllRowsSelected: function () { return this.selectionModel.areAllRowsSelected() }, toggleSelectAllRows: function () { this.areAllRowsSelected() ? this.selectionModel.clear() : this.selectAllRows(), this.repaint() }, isSingleRowSelectionMode: function () { return this.properties.singleRowSelectionMode }, newPoint: function (t, e) { return new h(t, e) }, newRectangle: function (t, e, i, n) { return new d(t, e, i, n) }, get sorter() { return this.behavior.sorter }, set sorter(t) { this.behavior.sorter = t, this.behaviorChanged() }, get filter() { return this.behavior.filter }, set filter(t) { this.behavior.filter = t, this.behaviorChanged() }, dialogOptions: {}, setDialogOptions: function (t, e) { "object" == typeof t && (e = t, t = void 0); var i = this.dialogOptions.undefined; return e = e || t && this.dialogOptions[t], e ? (this.dialogOptions[t] = e, i && (e = g({}).extend(i, e))) : e = i || {}, e }, openDialog: function (t, e) { this.abortEditing() && (e = this.setDialogOptions(t, e), e.terminate = function () { delete this.dialog }.bind(this), this.dialog = this.behavior.openDialog(t, e)) }, toggleDialog: function (t, e) { var i = this.dialog, n = i && i.$$CLASS_NAME; i && (this.dialog.close() || n === t) || (i ? i.terminate = this.openDialog.bind(this, t, e) : this.openDialog(t, e)) }
        }); D.plugins = {}, D.localization = { locale: "en-US", numberOptions: { maximumFractionDigits: 0 } }, e.exports = D
    }, { "./Base": 49, "./behaviors/JSON": 54, "./cellEditors": 67, "./cellRenderers": 77, "./defaults": 86, "./lib/Localization": 113, "./lib/Renderer": 114, "./lib/SelectionModel": 115, "./lib/polyfills": 119, "./lib/stylesheet": 120, finbars: 9, fincanvas: 10, "object-iterators": 42, rectangular: 45 }], 51: [function (t, e, i) { "use strict"; e.exports = { analytics: t("hyper-analytics") } }, { "hyper-analytics": 13 }], 52: [function (t, e, i) {
        "use strict"; function n(t) { if (t) if (t instanceof Array && t.length) { var e = t[0], i = t.slice(1); t = new (Function.prototype.bind.apply(e, [null, this.grid].concat(i))) } else "function" == typeof t && (t = new t(this.grid)); else t = this.dataModel; return t } var o = t("object-iterators"), r = t("rectangular").Point, s = t("../Base"), a = t("./Column"), l = t("./../lib/cellEventFactory"), u = t("../dataModels/HeaderSubgrid"), c = t("../dataModels/FilterSubgrid"), h = t("../dataModels/SummarySubgrid"), d = t("../dialogs"), g = ["columnHeader", "columnHeaderColumnSelection", "filterProperties", "rowHeader", "rowHeaderRowSelection", "rowNumbersProperties", "treeColumnProperties", "treeColumnPropertiesColumnSelection"], f = {}, p = s.extend("Behavior", {
            initialize: function (t, e) { this.grid = t, this.initializeFeatureChain(t), this.grid.behavior = this, this.reset(e) }, initializeFeatureChain: function (t) { var e = this; this.featureMap = {}, this.features.forEach(function (t) { var i = new t; e.featureMap[i.$$CLASS_NAME] = i, e.featureChain ? e.featureChain.setNext(i) : e.featureChain = i }), this.featureChain && this.featureChain.initializeOn(t) }, features: [], reset: function (t) { this.clearState(), this.dataModel ? this.dataModel.reset() : this.dataModel = this.getNewDataModel(t), this.CellEvent = l(this.grid), this.dataUpdates = {}, this.scrollPositionX = this.scrollPositionY = 0, this.clearColumns(), this.clearState(), this.createColumns(), this.subgrids = t.subgrids || [u, c, [h, { name: "topTotals" }], this.dataModel, [h, { name: "bottomTotals" }]] }, get renderedColumnCount() { return this.grid.renderer.visibleColumns.length }, get renderedRowCount() { return this.grid.renderer.visibleRows.length }, clearColumns: function () { this.columns = [], this.allColumns = [], this.allColumns[-1] = this.columns[-1] = this.newColumn({ index: -1 }), this.allColumns[-2] = this.columns[-2] = this.newColumn({ index: -2 }), this.columnEnum = {} }, getActiveColumn: function (t) { return this.columns[t] }, getActiveColumnIndex: function (t) { for (var e = t instanceof a ? t.index : t, i = 0; i < this.columns.length; ++i) if (this.columns[i].index === e) return i }, getVisibleColumn: function () { return this.deprecated("getVisibleColumn(x)", "getActiveColumn(x)", "1.0.6", arguments) }, getVisibleColumnName: function () { return this.deprecated("getVisibleColumnName(x)", "getActiveColumn(x).name", "1.0.6", arguments) }, getColumnId: function () { return this.deprecated("getColumnId(x)", "getActiveColumn(x).header", "1.0.6", arguments) }, getHeader: function () { return this.deprecated("getHeader(x)", "getActiveColumn(x).header", "1.0.6", arguments) }, getColumn: function (t) { return this.allColumns[t] }, newColumn: function (t) { return new a(this, t) }, addColumn: function (t) { var e = this.newColumn(t); return this.columns.push(e), this.allColumns.push(e), e }, createColumns: function () { }, getColumnWidth: function (t) { var e = this.getActiveColumn(t); if (!e) return this.grid.properties.defaultColumnWidth; var i = e.getWidth(); return i }, setColumnWidth: function (t, e) { this.getActiveColumn(t).setWidth(e), this.stateChanged() }, getCellRenderer: function (t, e) { return e.column.getCellRenderer(t, e) }, getCellProvider: function (t) { return this.deprecated("getCellProvider()", "grid.cellRenderers", "1.0.6", arguments) }, createCellProvider: function (t) { console.error("getCellProvider() is deprecated as of v1.0.6. No replacement; do not call. Previously called by `Behavior` constructor; `new CellRenderers()` is now called by `Hypergrid` constructor instead.", arguments) }, applyAnalytics: function () { this.dataModel.reindex(), this.shapeChanged() }, clearObjectProperties: function (t, e) { for (var i in t) t.hasOwnProperty(i) && (void 0 === e || !e && g.indexOf(i) >= 0 || e && g.indexOf(i) < 0) && delete t[i] }, getPrivateState: function () { return this.deprecate("getPrivateState()", "grid.properties", "1.2.0") }, getState: function () { var t = JSON.parse(JSON.stringify(this.grid.properties)); return this.clearObjectProperties(t.columnProperties, !1), t }, clearState: function () { this.grid.properties = this.getDefaultState() }, getDefaultState: function () { var t = this.grid._getProperties(), e = Object.create(t); return o(e).extendOwn({ columnProperties: [] }), e }, setState: function (t) { if (t.rowHeights && (f.rowHeights || (f.rowHeights = !0, console.warn("rowHeights, the hash of row heights you provided to setState method, is no longer supported as of v1.2.0 and will be ignored. Instead use individual calls to setRowHeight(y, height, dataModel) for each row height you wish to set, where y is local zero-based row index within dataModel. The dataModel arg is optional and defaults to this.dataModel; specify to set row heights in other data models, such as header row, filter cell row, individual summary rows, etc."))), !t.columnIndexes) { var e = this.dataModel.schema.length; t.columnIndexes = []; for (var i = 0; i < e; i++) t.columnIndexes[i] = i } var n = t.columnProperties; delete t.columnProperties, this.clearState(); var r = this.grid.properties; this.createColumns(), this._setColumnOrder(t.columnIndexes), o(r).extendOwn(t), this.setAllColumnProperties(n), t.columnProperties = n, this.setColumnWidth(-1, 24.193359375), this.dataModel.reindex() }, setAllColumnProperties: function (t) { t = t || []; for (var e = 0; e < t.length; e++) { var i = this.grid.properties.columnProperties[e]; this.clearObjectProperties(i, !1), o(i).extendOwn(t[e]) } }, _setColumnOrder: function (t) { Array.isArray(t) && (this.columns.length = t.length, t.forEach(function (t, e) { this.columns[e] = this.allColumns[t] }, this)) }, setColumnIndexes: function (t, e) { var i = this.grid.properties; this._setColumnOrder(t), i.columnIndexes = t, this.changed(), e || this.grid.fireSyntheticOnColumnsChangedEvent() }, showColumns: function (t, e, i, n) { ("number" == typeof t || Array.isArray(t)) && (n = i, i = e, e = t, t = !1); var o = this.columns, r = t ? o : this.allColumns; "number" == typeof e && (e = [e]); var s = e.map(function (t) { return r[t] }).filter(function (t) { return t }); "number" != typeof i && (n = i, i = o.length), n || s.forEach(function (t) { var e = o.indexOf(t); e >= 0 && (o.splice(e, 1), i > e && --i) }), i >= 0 && o.splice.apply(o, [i, 0].concat(s)), this.grid.properties.columnIndexes = o.map(function (t) { return t.index }) }, hideColumns: function (t, e) { var i = Array.prototype.slice.call(arguments); i.push(-1), this.showColumns.apply(this, i) }, resolveProperty: function (t) { return this.grid.resolveProperty(t) }, cellClicked: function (t) { return 2 === arguments.length ? this.deprecated("cellClicked(cell, event)", "cellClicked(event)", "1.2.0", arguments) : this.dataModel.cellClicked(t) }, cellDoubleClicked: function (t, e) { }, lookupFeature: function (t) { return this.featureMap[t] }, getValue: function (t, e) { switch (arguments.length) { case 1: return t.value; case 2: return new this.CellEvent(t, e).value } }, getUnfilteredValue: function (t, e) { var i = this.getActiveColumn(t); return i && i.getUnfilteredValue(e) }, setValue: function (t, e, i) { switch (arguments.length) { case 3: t = new this.CellEvent(t, e); break; case 2: i = e } t.value = i }, getDataValue: function (t, e) { return this.deprecated("getDataValue(x, y, value)", "dataModel.getValue(x, y, value)", "1.1.0", arguments) }, setDataValue: function (t, e, i) { return this.deprecated("setDataValue(x, y, value)", "dataModel.setValue(x, y, value)", "1.1.0", arguments) }, getCellOwnProperties: function (t, e) { switch (arguments.length) { case 1: return t.column.getCellOwnProperties(t.dataCell.y, t.visibleRow.subgrid); case 2: return this.getColumn(t).getCellOwnProperties(e) } }, getCellProperties: function (t, e) { switch (arguments.length) { case 1: return t.column.getCellProperties(t.dataCell.y, t.visibleRow.subgrid); case 2: return this.getColumn(t).getCellProperties(e) } }, getCellProperty: function (t, e, i) { switch (arguments.length) { case 2: return t.column.getCellProperty(t.dataCell.y, e, t.visibleRow.subgrid); case 3: return this.getColumn(t).getCellProperty(e, i) } }, setCellProperties: function (t, e, i) { "object" == typeof e ? t.column.setCellProperties(t.dataCell.y, e, t.visibleRow.subgrid) : this.getColumn(t).setCellProperties(e, i) }, addCellProperties: function (t, e, i) { "object" == typeof e ? t.column.addCellProperties(t.dataCell.y, e, t.visibleRow.subgrid) : this.getColumn(t).addCellProperties(e, i) }, setCellProperty: function (t, e, i, n) { switch (arguments.length) { case 3: return t.column.setCellProperty(t.dataCell.y, e, i, t.visibleRow.subgrid); case 4: return this.getColumn(t).setCellProperty(e, i, n) } }, getRowCount: function () { return this.subgrids.reduce(function (t, e) { return t + e.getRowCount() }, 0) }, getUnfilteredRowCount: function () { return this.deprecated("getUnfilteredRowCount()", null, "1.2.0", arguments, "No longer supported") }, getFixedRowsHeight: function () { for (var t = this.getFixedRowCount(), e = 0, i = 0; i < t; i++) e += this.getRowHeight(i); return e }, getRowHeight: function (t, e) { var i = (e || this.dataModel).getRow(t); return i && i.__ROW_HEIGHT || this.grid.properties.defaultRowHeight }, getDefaultRowHeight: function () { return this.deprecated("getDefaultRowHeight", "grid.properties.defaultRowHeight", "1.2.0") }, setRowHeight: function (t, e, i) { var n = (i || this.dataModel).getRow(t); n && (n.__ROW_HEIGHT = Math.max(5, e), this.stateChanged()) }, getFixedRowsMaxHeight: function () { return this.getFixedRowsHeight() }, getFixedColumnsWidth: function () { var t = this.getFixedColumnCount(), e = 0; this.grid.isShowRowNumbers() && (e = this.getColumnWidth(-1)); for (var i = 0; i < t; i++) e += this.getColumnWidth(i); return e }, getFixedColumnsMaxWidth: function () { return this.getFixedColumnsWidth() }, _setScrollPositionY: function (t) { this.setScrollPositionY(t), this.changed() }, _setScrollPositionX: function (t) { this.setScrollPositionX(t), this.changed() }, _fixedRowClicked: function (t, e) { var i = this.translateColumnIndex(this.getScrollPositionX() + e.gridCell.x - this.getFixedColumnCount()), n = new r(i, e.gridCell.y); e.gridCell = n, this.fixedRowClicked(t, e) }, _fixedColumnClicked: function (t, e) { var i = new r(e.gridCell.x, this.getScrollPositionY() + e.gridCell.y - this.getFixedRowCount()); e.gridCell = i, this.fixedColumnClicked(t, e) }, moveSingleSelect: function (t, e, i) {
                this.featureChain && (this.featureChain.moveSingleSelect(t, e, i), this.setCursor(t));
            }, setCursor: function (t) { t.updateCursor(), this.featureChain.setCursor(t) }, onMouseMove: function (t, e) { this.featureChain && (this.featureChain.handleMouseMove(t, e), this.setCursor(t)) }, onClick: function (t, e) { this.featureChain && (this.featureChain.handleClick(t, e), this.setCursor(t)) }, onContextMenu: function (t, e) { var i = t.fireSyntheticContextMenuEvent(e); i && this.featureChain && (this.featureChain.handleContextMenu(t, e), this.setCursor(t)) }, onWheelMoved: function (t, e) { this.featureChain && (this.featureChain.handleWheelMoved(t, e), this.setCursor(t)) }, onMouseUp: function (t, e) { this.featureChain && (this.featureChain.handleMouseUp(t, e), this.setCursor(t)) }, onMouseDrag: function (t, e) { this.featureChain && (this.featureChain.handleMouseDrag(t, e), this.setCursor(t)) }, onKeyDown: function (t, e) { this.featureChain && (this.featureChain.handleKeyDown(t, e), this.setCursor(t)) }, onKeyUp: function (t, e) { this.featureChain && (this.featureChain.handleKeyUp(t, e), this.setCursor(t)) }, onDoubleClick: function (t, e) { this.featureChain && (this.featureChain.handleDoubleClick(t, e), this.setCursor(t)) }, openDialog: function (t, e) { return new d[t](this.grid, e) }, handleMouseDown: function (t, e) { this.featureChain && (this.featureChain.handleMouseDown(t, e), this.setCursor(t)) }, handleMouseExit: function (t, e) { this.featureChain && (this.featureChain.handleMouseExit(t, e), this.setCursor(t)) }, changed: function () { this.grid.behaviorChanged() }, shapeChanged: function () { this.grid.behaviorShapeChanged() }, stateChanged: function () { this.grid.behaviorStateChanged() }, isColumnReorderable: function () { return this.grid.properties.columnsReorderable }, getColumnProperties: function (t) { var e = this.getColumn(t); return e && e.properties }, setColumnProperties: function (t, e) { var i = this.getColumn(t); if (!i) throw "Expected column."; var n = o(i.properties).extendOwn(e); return this.changed(), n }, clearAllCellProperties: function (t) { if (void 0 === t) for (var e = this.allColumns.length - 1; e >= 0; --e) this.getColumn(e).clearAllCellProperties(); else { var i = this.getColumn(e); i && i.clearAllCellProperties() } }, getHiddenColumnDescriptors: function () { for (var t = this.grid.properties, e = t.columnIndexes, i = [], n = this.getActiveColumnCount(), o = 0; o < n; o++) if (e.indexOf(o) === -1) { var r = this.getActiveColumn(o); i.push({ id: o, header: r.header, field: r.name }) } return i }, getFixedColumnCount: function () { return this.grid.properties.fixedColumnCount }, setFixedColumnCount: function (t) { this.grid.properties.fixedColumnCount = t }, getFixedRowCount: function () { return this.grid.getHeaderRowCount() + this.grid.properties.fixedRowCount }, setFixedRowCount: function (t) { this.grid.properties.fixedRowCount = t }, getHeaderRowCount: function () { var t = 0; return this.subgrids.find(function (e) { return !e.type || void (t += e.getRowCount()) }), t }, endDragColumnNotification: function () { }, getCursorAt: function (t, e) { return null }, getActiveColumnCount: function () { return this.columns.length }, getColumnCount: function () { return this.deprecated("getColumnCount()", "getActiveColumnCount()", "1.0.6", arguments) }, setScrollPositionX: function (t) { this.scrollPositionX = t }, getScrollPositionX: function () { return this.scrollPositionX }, setScrollPositionY: function (t) { this.scrollPositionY = t }, getScrollPositionY: function () { return this.scrollPositionY }, getCellEditorAt: function (t) { return t.isGridColumn && (t.isFilterCell ? this.grid.cellEditors.create("filterbox", t) : t.column.getCellEditorAt(t)) }, highlightCellOnHover: function (t, e) { return t && e }, cellPropertiesPrePaintNotification: function (t) { }, cellFixedRowPrePaintNotification: function (t) { }, cellFixedColumnPrePaintNotification: function (t) { }, cellTopLeftPrePaintNotification: function (t) { }, enhanceDoubleClickEvent: function (t) { }, swapColumns: function (t, e) { var i = this.columns, n = i[t]; i[t] = i[e], i[e] = n, this.changed() }, getColumnEdge: function (t, e) { return this.dataModel.getColumnEdge(t, e) }, getRow: function (t) { return this.dataModel.getRow(t) }, convertViewPointToDataPoint: function (t) { return new r(this.getActiveColumn(t.x).index, t.y) }, hasHierarchyColumn: function () { return !1 }, getSelectionMatrixFunction: function (t) { return function () { return null } }, autosizeAllColumns: function () { this.checkColumnAutosizing(!0), this.changed() }, checkColumnAutosizing: function (t) { t = t === !0, this.autoSizeRowNumberColumn(); var e = this.allColumns[-2].checkColumnAutosizing(t); return this.allColumns.forEach(function (i) { e = i.checkColumnAutosizing(t) || e }), e }, autoSizeRowNumberColumn: function () { this.grid.isRowNumberAutosizing() && this.allColumns[-1].checkColumnAutosizing(!0) }, get filter() { return this.dataModel.filter }, set filter(t) { this.dataModel.filter = t }, get sorter() { return this.dataModel.sorter }, set sorter(t) { this.dataModel.sorter = t }, getSelectedRows: function () { return this.grid.selectionModel.getSelectedRows() }, getSelectedColumns: function () { return this.grid.selectionModel.getSelectedColumns() }, getSelections: function () { return this.grid.selectionModel.getSelections() }, getData: function () { return this.dataModel.getData() }, getFilteredData: function () { return this.deprecated("getIndexedData()", "getIndexedData", "1.2.0", arguments) }, getIndexedData: function () { this.dataModel.getIndexedData() }, set subgrids(t) { this._subgrids = t = t.map(n, this), t.forEach(function (e) { t[e.name || e.type || "data"] = e }), this.shapeChanged() }, get subgrids() { return this._subgrids }
        }); p.prototype.reindex = p.prototype.applyAnalytics, e.exports = p
    }, { "../Base": 49, "../dataModels/FilterSubgrid": 79, "../dataModels/HeaderSubgrid": 80, "../dataModels/SummarySubgrid": 82, "../dialogs": 90, "./../lib/cellEventFactory": 116, "./Column": 53, "object-iterators": 42, rectangular: 45 }], 53: [function (t, e, i) { "use strict"; function n(t, e) { function i(t) { return o.findIndex(function (e, i) { return e.name === t }) } var n, o; switch (this.behavior = t, this.dataModel = t.dataModel, o = this.behavior.dataModel.schema, typeof e) { case "number": n = e, e = {}; break; case "string": n = i(e), e = {}; break; case "object": n = void 0 !== e.index ? e.index : i(e.name) } if (void 0 === n) throw "Column not found in data."; switch (this._index = n, this.clearAllCellProperties(), n) { case -1: case -2: break; default: if (n < 0) throw "`index` out of range"; this.properties = e } } var o = t("overrider"), r = t("../lib/deprecated"), s = t("../lib/error"), a = {}; n.prototype = { constructor: n.prototype.constructor, HypergridError: s, mixIn: o.mixIn, deprecated: r, set: function (t) { return this.deprecated("set(options)", "setProperties(options)", "1.2.0", arguments) }, get index() { return this._index }, get name() { return this.dataModel.schema[this._index].name }, set header(t) { this.dataModel.schema[this.index].header = t, this.behavior.filter.prop(this.index, "header", t), this.behavior.grid.repaint() }, get header() { return this.dataModel.schema[this.index].header }, set calculator(t) { var e = this.dataModel.schema; void 0 === t ? delete e[this.index].calculator : e[this.index].calculator = t, this.behavior.filter.prop(this.index, "calculator", t), this.behavior.applyAnalytics() }, get calculator() { return this.dataModel.schema[this.index].calculator }, set type(t) { this._type = t, this.behavior.filter.prop(this.index, "type", t), this.behavior.sorter.prop(this.index, "type", t), this.behavior.reindex() }, get type() { return this._type }, getUnfilteredValue: function (t) { return this.deprecated("getUnfilteredValue(y)", null, "1.2.0", arguments, "No longer supported") }, getValue: function (t) { return this.dataModel.getValue(this.index, t) }, setValue: function (t, e) { return this.dataModel.setValue(this.index, t, e) }, getWidth: function () { return this.properties && this.properties.width || this.behavior.grid.properties.defaultColumnWidth }, setWidth: function (t) { this.properties.width = Math.max(5, t) }, getCellRenderer: function (t, e) { return t.untranslatedX = e.gridCell.x, t.y = e.gridCell.y, t.x = this.index, t.normalizedY = e.dataCell.y, this.dataModel.getCell(t, e.getCellProperty("renderer")) }, checkColumnAutosizing: function (t) { var e, i, n, o, r = this.properties; return r && (e = r.width, i = r.preferredWidth || e, n = r.columnAutosized && !t, e === i && n || (r.width = n ? Math.max(e, i) : i, r.columnAutosized = !isNaN(r.width), o = r.width !== e)), o }, getCellType: function (t) { var e = this.getValue(t); return this.typeOf(e) }, getType: function () { var t = this.properties, e = t.type; return e || (e = this.computeColumnType(), "unknown" !== e && (t.type = e)), e }, computeColumnType: function () { var t = this.behavior.getHeaderRowCount(), e = this.behavior.getRowCount(), i = this.getValue(t), n = this.typeOf(i); if (!n) return "unknown"; for (var o = this.typeOf(i), r = t; r < e; r++) i = this.getValue(r), n = this.typeOf(i); return o }, typeOf: function (t) { if (null == t) return null; var e = typeof t; switch (e) { case "object": return t.constructor.name.toLowerCase(); case "number": return parseInt(t) === t ? "int" : "float"; default: return e } }, get properties() { var t = this.behavior.grid.properties, e = t.columnProperties[this.index]; return e || (e = t.columnProperties[this.index] = this.createColumnProperties()), e }, set properties(t) { var e, i, n = this.properties; for (e in n) i = Object.getOwnPropertyDescriptor(n, e), i && !i.configurable || delete n[e]; this.addProperties(t) }, getProperties: function () { return this.deprecated("getProperties()", "properties", "1.2.0") }, setProperties: function (t, e) { e ? this.deprecated("setProperties(properties, preserve)", "addProperties(properties)", "1.2.0", arguments, "This warning pertains to setProperties only when preserve is truthy. When preserve is faulty, use the new properties setter.") : (a.setProperties || (a.setProperties = !0, console.warn("setProperties(properties) has been deprecated in favor of properties (setter) as of v1.2.0 and will be removed in a future version. This advice only pertains to usages of setProperties when called with a single parameter. When called with a truthy second parameter, use the new addProperties(properties) call instead.")), this.properties = t) }, addProperties: function (t) { var e, i, n = this.properties; for (e in t) i = Object.getOwnPropertyDescriptor(n, e), (!i || i.writable || i.set) && (n[e] = t[e]) }, getCellEditorAt: function (t) { var e = this.index, i = t.gridCell.y, n = t.getCellProperty("editor"), o = Object.defineProperties(t, { format: { writable: !0, value: t.getCellProperty("format") }, editPoint: { get: function () { return a.editPoint || (a.editPoint = !0, console.warn("The .editPoint property has been deprecated as of v1.2.0 in favor of .gridCell. It may be removed in a future release.")), this.gridCell } } }), r = this.dataModel.getCellEditorAt(e, i, n, o); return r && !r.grid && (r = void 0), r }, getFormatter: function () { var t = this.properties.format; return this.behavior.grid.localization.get(t).format } }, n.prototype.mixIn(t("./cellProperties")), n.prototype.mixIn(t("./columnProperties")), e.exports = n }, { "../lib/deprecated": 117, "../lib/error": 118, "./cellProperties": 55, "./columnProperties": 56, overrider: 43 }], 54: [function (t, e, i) { "use strict"; var n = t("./Behavior"), o = t("../dataModels/JSON"), r = t("../features"), s = /([^_A-Z])([A-Z]+)/g, a = n.extend("behaviors.JSON", { initialize: function (t, e) { this.setData(e), e.pipeline && this.setPipeline(e.pipeline) }, features: [r.CellSelection, r.KeyPaging, r.ColumnPicker, r.ColumnResizing, r.RowResizing, r.Filters, r.RowSelection, r.ColumnSelection, r.ColumnMoving, r.ColumnSorting, r.CellClick, r.CellEditing, r.OnHover], createColumns: function () { var t = this.dataModel.schema; this.clearColumns(), t.forEach(function (t, e) { this.addColumn({ index: e, header: t.header, calculator: t.calculator }), this.columnEnum[this.columnEnumKey(t.name)] = e }, this) }, columnEnumKey: function (t) { return t.replace(s, "$1_$2").toUpperCase() }, getNewDataModel: function (t) { return new o(this.grid, t) }, setHeaders: function (t) { if (t instanceof Array) { var e = this.allColumns; t.forEach(function (t, i) { e[i].header = t }) } else "object" == typeof t && this.allColumns.forEach(function (e) { t[e.name] && (e.header = t[e.name]) }) }, setFields: function (t) { this.dataModel.setFields(t), this.createColumns() }, setPipeline: function (t, e) { Array.isArray(t) || (e = t, t = void 0), this.dataModel.setPipeline(t, e), e && void 0 !== e.apply && !e.apply || this.reindex() }, unstashPipeline: function (t, e) { "object" == typeof t && (e = t, t = void 0), this.dataModel.unstashPipeline(t), e && void 0 !== e.apply && !e.apply || this.reindex() }, setData: function (t, e) { if (Array.isArray(t) || "function" == typeof t || (e = t, t = e && e.data), t = this.unwrap(t), void 0 !== t) { if (!Array.isArray(t)) throw "Data is not an array"; e = e || {}; var i = this.grid; this.dataModel.setData(t, this.unwrap(e.schema) || []), i.cellEditor && i.cellEditor.cancelEditing(), (void 0 === e.apply || e.apply) && this.reindex(); var n = this; this.createColumns(), n.grid.isColumnAutosizing() ? (setTimeout(function () { n.autosizeAllColumns() }, 100), n.grid.allowEvents(n.dataModel.getRowCount() > 0)) : setTimeout(function () { n.getColumn(-1).checkColumnAutosizing(!0), n.grid.allowEvents(n.dataModel.getRowCount() > 0) }) } }, updateData: function (t, e) { e = e || {}, Array.isArray(t) || "function" == typeof t || (e = t, t = e && e.data), t = this.unwrap(t), this.dataModel.setData(t, this.unwrap(e.schema)), this.reindex() }, setColumns: function (t) { console.warn("This function does not do anything") }, enhanceDoubleClickEvent: function (t) { t.row = this.getRow(t.gridCell.y) }, setDataProvider: function (t) { this.dataModel.setDataProvider(t) }, hasHierarchyColumn: function () { return this.dataModel.hasHierarchyColumn() }, getHiddenColumns: function () { return this.dataModel.getHiddenColumns() }, getActiveColumns: function () { return this.dataModel.getActiveColumns() }, getVisibleColumns: function () { return this.deprecated("getVisibleColumns()", "getActiveColumns()", "1.0.6", arguments) }, getSelectedColumns: function () { return this.grid.selectionModel.getSelectedColumns() }, getSelections: function () { return this.grid.selectionModel.getSelections() }, getSortedColumnIndexes: function () { return this.dataModel.getSortedColumnIndexes() } }); e.exports = a }, { "../dataModels/JSON": 81, "../features": 108, "./Behavior": 52 }], 55: [function (t, e, i) { "use strict"; function n(t, e) { return this.getCellOwnProperties(t, e) || o.call(this, t, e) } function o(t, e) { var i = (e || this.dataModel).getRow(t), n = i.__META = i.__META || {}; return n[this.name] = Object.create(this.properties) } var r = t("object-iterators"), s = { getCellProperties: function (t, e) { return this.getCellOwnProperties(t, e) || this.properties }, setCellProperties: function (t, e, i) { return r(o.call(this, t, i)).extendOwn(e) }, addCellProperties: function (t, e, i) { return r(n.call(this, t, i)).extendOwn(e) }, getCellOwnProperties: function (t, e) { var i; return this.index >= 0 && (i = (e || this.dataModel).getRow(t)) && i.__META && i.__META[this.name] }, getCellProperty: function (t, e, i) { return this.getCellProperties(t, i)[e] }, setCellProperty: function (t, e, i, o) { var r = n.call(this, t, o); return r[e] = i, r }, clearAllCellProperties: function () { } }; e.exports = s }, { "object-iterators": 42 }], 56: [function (t, e, i) { "use strict"; function n(t) { switch (typeof t) { case "undefined": case "function": return t; case "string": break; default: throw "Expected string, function, or undefined." } var e = t.match(/function\s*\(([^]*?)\)/); if (!e) throw "Expected function keyword with formal parameter list."; e = e[1].split(",").map(function (t, e) { if (t = t.match(/\s*(\w*)\s*/), !t && e) throw "Expected formal parameter."; return t[1] }); var i = t.match(/{\s*([^]*?)\s*}/); if (!i) throw "Expected function body."; return i = i[1], 1 !== e.length || e[0] ? e = e.concat(i) : e[0] = i, Function.apply(null, e) } function o() { var t, e = this, i = e.behavior.grid.properties; return t = Object.create(i, { index: { get: function () { return e.index } }, name: { get: function () { return e.name } }, field: { get: function () { return r && (console.warn(r), r = void 0), e.name } }, columnName: { get: function () { return s && (console.warn(s), s = void 0), e.name } }, header: { get: function () { return e.header }, set: function (t) { e.header = t } }, type: { get: function () { return e.type }, set: function (t) { e.type = t } }, calculator: { get: function () { return e.calculator }, set: function (t) { e.calculator = n(t) } } }), Object.defineProperty(t, "rowNumbersProperties", { value: Object.create(t, { foregroundSelectionColor: { configurable: !0, get: function () { return this.columnHeaderForegroundSelectionColor }, set: function (t) { this.columnHeaderForegroundSelectionColor = t } }, backgroundSelectionColor: { configurable: !0, get: function () { return this.columnHeaderBackgroundSelectionColor }, set: function (t) { this.columnHeaderBackgroundSelectionColor = t } } }) }), Object.defineProperty(t, "rowHeader", { value: Object.create(t, { font: { configurable: !0, get: function () { return this.rowHeaderFont }, set: function (t) { this.rowHeaderFont = t } }, color: { configurable: !0, get: function () { return this.rowHeaderColor }, set: function (t) { this.rowHeaderColor = t } }, backgroundColor: { configurable: !0, get: function () { return this.rowHeaderBackgroundColor }, set: function (t) { this.rowHeaderBackgroundColor = t } }, foregroundSelectionFont: { configurable: !0, get: function () { return this.rowHeaderForegroundSelectionFont }, set: function (t) { this.rowHeaderForegroundSelectionFont = t } }, foregroundSelectionColor: { configurable: !0, get: function () { return this.rowHeaderForegroundSelectionColor }, set: function (t) { this.rowHeaderForegroundSelectionColor = t } }, backgroundSelectionColor: { configurable: !0, get: function () { return this.rowHeaderBackgroundSelectionColor }, set: function (t) { this.rowHeaderBackgroundSelectionColor = t } } }) }), Object.defineProperty(t, "columnHeader", { value: Object.create(t, { font: { configurable: !0, get: function () { return this.columnHeaderFont }, set: function (t) { this.columnHeaderFont = t } }, color: { configurable: !0, get: function () { return this.columnHeaderColor }, set: function (t) { this.columnHeaderColor = t } }, backgroundColor: { configurable: !0, get: function () { return this.columnHeaderBackgroundColor }, set: function (t) { this.columnHeaderBackgroundColor = t } }, foregroundSelectionFont: { configurable: !0, get: function () { return this.columnHeaderForegroundSelectionFont }, set: function (t) { this.columnHeaderForegroundSelectionFont = t } }, foregroundSelectionColor: { configurable: !0, get: function () { return this.columnHeaderForegroundSelectionColor }, set: function (t) { this.columnHeaderForegroundSelectionColor = t } }, backgroundSelectionColor: { configurable: !0, get: function () { return this.columnHeaderBackgroundSelectionColor }, set: function (t) { this.columnHeaderBackgroundSelectionColor = t } }, halign: { configurable: !0, get: function () { return this.columnHeaderHalign }, set: function (t) { this.columnHeaderHalign = t } } }) }), Object.defineProperty(t, "columnHeaderColumnSelection", { value: Object.create(t.columnHeader, { foregroundSelectionColor: { configurable: !0, get: function () { return this.columnHeaderForegroundColumnSelectionColor }, set: function (t) { this.columnHeaderForegroundColumnSelectionColor = t } }, backgroundSelectionColor: { configurable: !0, get: function () { return this.columnHeaderBackgroundColumnSelectionColor }, set: function (t) { this.columnHeaderBackgroundColumnSelectionColor = t } } }) }), Object.defineProperty(t, "rowHeaderRowSelection", { value: Object.create(t.rowHeader, { foregroundSelectionColor: { configurable: !0, get: function () { return this.rowHeaderForegroundRowSelectionColor }, set: function (t) { this.rowHeaderForegroundRowSelectionColor = t } }, backgroundSelectionColor: { configurable: !0, get: function () { return this.rowHeaderBackgroundRowSelectionColor }, set: function (t) { this.rowHeaderBackgroundRowSelectionColor = t } } }) }), Object.defineProperty(t, "filterProperties", { value: Object.create(t, { font: { configurable: !0, get: function () { return this.filterFont }, set: function (t) { this.filterFont = t } }, color: { configurable: !0, get: function () { return this.filterColor }, set: function (t) { this.filterColor = t } }, backgroundColor: { configurable: !0, get: function () { return this.filterBackgroundColor }, set: function (t) { this.filterBackgroundColor = t } }, foregroundSelectionColor: { configurable: !0, get: function () { return this.filterForegroundSelectionColor }, set: function (t) { this.filterForegroundSelectionColor = t } }, backgroundSelectionColor: { configurable: !0, get: function () { return this.filterBackgroundSelectionColor }, set: function (t) { this.filterBackgroundSelectionColor = t } }, halign: { configurable: !0, get: function () { return this.filterHalign }, set: function (t) { this.filterHalign = t } } }) }), Object.defineProperty(t, "treeColumnProperties", { value: Object.create(t, { font: { configurable: !0, get: function () { return this.treeColumnFont }, set: function (t) { this.treeColumnFont = t } }, color: { configurable: !0, get: function () { return this.treeColumnColor }, set: function (t) { this.treeColumnColor = t } }, backgroundColor: { configurable: !0, get: function () { return this.treeColumnBackgroundColor }, set: function (t) { this.treeColumnBackgroundColor = t } }, foregroundSelectionColor: { configurable: !0, get: function () { return this.treeColumnForegroundSelectionColor }, set: function (t) { this.treeColumnForegroundSelectionColor = t } }, backgroundSelectionColor: { configurable: !0, get: function () { return this.treeColumnBackgroundSelectionColor }, set: function (t) { this.treeColumnBackgroundSelectionColor = t } } }) }), Object.defineProperty(t, "treeColumnPropertiesColumnSelection", { value: Object.create(t.treeColumnProperties, { foregroundSelectionColor: { configurable: !0, get: function () { return this.treeColumnForegroundColumnSelectionColor }, set: function (t) { this.treeColumnForegroundColumnSelectionColor = t } }, backgroundSelectionColor: { configurable: !0, get: function () { return this.treeColumnBackgroundColumnSelectionColor }, set: function (t) { this.treeColumnBackgroundColumnSelectionColor = t } } }) }), t } var r = "columnProperties.field is deprecated as of v1.1.0 in favor of columnProperties.name. (Will be removed in a future release.)", s = "columnProperties.columnName is deprecated as of v1.1.0 in favor of columnProperties.name. (Will be removed in a future release.)"; e.exports.createColumnProperties = o }, {}], 57: [function (t, e, i) { "use strict"; e.exports = { Behavior: t("./Behavior"), JSON: t("./JSON"), Column: t("./Column") } }, { "./Behavior": 52, "./Column": 53, "./JSON": 54 }], 58: [function (t, e, i) { "use strict"; function n() { } function o(t) { return t + "px" } var r = t("mustache"), s = t("object-iterators"), a = t("../Base"), l = t("../lib/DOM/effects"), u = t("../lib/Localization"), c = a.extend("CellEditor", { initialize: function (t, e) { for (var i in e) e.hasOwnProperty(i) && null !== this[i] && (this[i] = e[i]); this.event = e; var n = t.behavior.getValue(this.event); n instanceof Array && (n = n[1]), this.grid = t, this.grid.cellEditor = this, this.locale = t.localization.locale, e.format && (this.localizer = this.grid.localization.get(e.format)), this.initialValue = n; var o = document.createElement("DIV"); o.innerHTML = r.render(this.template, this), this.el = o.firstChild, this.input = this.el, this.errors = 0; var s = this; this.el.addEventListener("keyup", this.keyup.bind(this)), this.el.addEventListener("keydown", function (e) { t.fireSyntheticEditorKeyDownEvent(s, e) }), this.el.addEventListener("keypress", function (e) { t.fireSyntheticEditorKeyPressEvent(s, e) }), this.el.addEventListener("mousedown", function (t) { s.onmousedown(t) }) }, onmousedown: function (t) { t.stopPropagation() }, localizer: u.prototype["null"], specialKeyups: { 9: "stopEditing", 13: "stopEditing", 27: "cancelEditing" }, keyup: function (t) { if (t) { var e = this.specialKeyups[t.keyCode]; e && (t.preventDefault(), this[e](3) && (this.grid.repaint(), this.grid.takeFocus())), this.grid.fireSyntheticEditorKeyUpEvent(this, t) } }, checkEditorPositionFlag: !1, gridRenderedNotification: function () { this.checkEditor() }, scrollValueChangedNotification: function () { this.checkEditorPositionFlag = !0 }, moveEditor: function () { var t = this.event.bounds, e = this.grid.div.getBoundingClientRect().left - this.grid.divCanvas.getBoundingClientRect().left; t.x -= e, this.setBounds(t) }, beginEditing: function () { this.grid.fireRequestCellEdit(this.event.gridCell, this.initialValue) && (this.checkEditorPositionFlag = !0, this.checkEditor()) }, beginEditAt: function (t, e) { return this.deprecated("beginEditAt(point)", "beginEditing()", "1.0.6") }, setEditorValue: function (t) { this.input.value = this.localizer.format(t) }, showEditor: function () { this.el.style.display = "inline" }, hideEditor: function () { this.el.style.display = "none" }, stopEditing: function (t) { var e = this.validateEditorValue(); if (!e) try { var i = this.getEditorValue() } catch (n) { e = n } if (!e && this.grid.fireSyntheticEditorDataChangeEvent(this, this.initialValue, i)) try { this.saveEditorValue(i) } catch (n) { e = n } if (e) if (t >= 0) { var o = this.event.gridCell; this.grid.selectViewportCell(o.x, o.y - this.grid.getHeaderRowCount()), this.errorEffectBegin(++this.errors % t === 0 && e) } else this.cancelEditing(); else this.hideEditor(), this.grid.cellEditor = null, this.el.remove(); return !e }, cancelEditing: function () { return this.setEditorValue(this.initialValue), this.hideEditor(), this.grid.cellEditor = null, this.el.remove(), !0 }, errorEffectBegin: function (t) { var e = { callback: t && this.errorEffectEnd.bind(this, t) }, i = this.errorEffect; if ("string" == typeof i && (i = this.errorEffects[i]), "object" == typeof i && (s(e).extendOwn(i.options), i = i.effector), "function" != typeof i) throw "Expected `this.errorEffect` to resolve to an error effect function."; i.call(this, e) }, errorEffectEnd: function (t) { if (t) { var e = 'Invalid value. To resolve, do one of the following:\n\n   * Correct the error and try again.\n         - or -\n   * Cancel editing by pressing the "esc" (escape) key.'; t = t.message || t, "string" != typeof t && (t = ""), this.localizer.expectation && (t = t ? t + "\n" + this.localizer.expectation : this.localizer.expectation), t && (/[\n\r]/.test(t) && (t = "\n" + t, t = t.replace(/[\n\r]+/g, "\n\n   * ")), e += "\n\nAdditional information about this error: " + t), alert(e) } }, errorEffect: "shaker", errorEffects: { shaker: l.shaker, glower: l.glower }, saveEditorValue: function (t) { var e = !(t && t === this.initialValue) && this.grid.fireBeforeCellEdit(this.event.gridCell, this.initialValue, t, this); return e && (this.grid.behavior.setValue(this.event, t), this.grid.fireAfterCellEdit(this.event.gridCell, this.initialValue, t, this)), e }, getEditorValue: function () { return this.localizer.parse(this.input.value) }, validateEditorValue: function () { return this.localizer.invalid && this.localizer.invalid(this.input.value) }, takeFocus: function () { var t = this.el, e = t.style.left, i = t.style.top; t.style.left = t.style.top = 0; var n = window.scrollX, o = window.scrollY; this.input.focus(), window.scrollTo(n, o), this.selectAll(), t.style.left = e, t.style.top = i }, selectAll: n, setBounds: function (t) { var e = this.el.style; e.left = o(t.x), e.top = o(t.y), e.width = o(t.width), e.height = o(t.height) }, checkEditor: function () { this.checkEditorPositionFlag && (this.checkEditorPositionFlag = !1, this.event.isCellVisible ? (this.setEditorValue(this.initialValue), this.attachEditor(), this.moveEditor(), this.showEditor(), this.takeFocus()) : this.hideEditor()) }, attachEditor: function () { this.grid.div.appendChild(this.el) }, template: "" }); c["abstract"] = !0, e.exports = c }, { "../Base": 49, "../lib/DOM/effects": 110, "../lib/Localization": 113, mustache: 41, "object-iterators": 42 }], 59: [function (t, e, i) { "use strict"; var n = t("./CellEditor"), o = n.extend("Color", { template: '<input type="color" lang="{{locale}}" style="{{style}}">' }); e.exports = o }, { "./CellEditor": 58 }], 60: [function (t, e, i) { "use strict"; function n(t) { var e = t.target; if ("SPAN" === e.tagName) { var i = Array.prototype.find.call(e.classList, function (t) { return 0 === t.indexOf(d) }), n = i.substr(d.length), r = this.menuModes[n] ^= 1; o.call(this, e, n, r) } } function o(t, e, i) { function n(t) { d && t.parentElement !== l || (t.style.display = a) } var o, r, s, a, l = this.dropdown, u = this.modes.find(function (t) { return t.name === e }); t.classList.toggle("active", !!i), i ? (o = this.el.style, o.cursor = "progress", setTimeout(function () { o.cursor = null }, 333), u.selector ? (r = l.querySelector(u.selector), s = u.appendOptions.call(this, r), r.label = r.label.replace(/ \(\d+\)$/, ""), r.label += " (" + s + ")") : (s = u.appendOptions.call(this, l), this.controllable || (t.textContent = s + " values")), a = null) : a = "none"; var c = u.selector; if (!c) { c = "option,optgroup:not([class])"; var d = !0 } h.each(c, n, l) } function r() { this.selectionStart = this.input.selectionStart, this.selectionEnd = this.input.selectionEnd, this.dropdown.selectedIndex = -1, this.dropdown.style.scrollTop = 0, this.options.style.visibility = "visible"; var t = a(this.dropdown, "marginTop"), e = this.dropdown.size, i = Math.ceil(2 * (this.dropdown.length ? a(this.dropdown[0], "height") : 13.1875)) / 2 + 1; this.options.style.height = t + i * e + "px", this.input.addEventListener("mousedown", this.slideUpBound = s.bind(this)), this.optionsTransition.begin() } function s() { this.input.removeEventListener("mousedown", this.slideUpBound), this.options.style.height = 0, this.optionsTransition.begin(function (t) { this.style.visibility = "hidden" }) } function a(t, e) { return parseFloat(window.getComputedStyle(t)[e]) } var l = t("./Textfield"), u = t("./CellEditor").prototype, c = t("../lib/DOM/queueless"), h = t("../lib/DOM/elfor"), d = "toggle-mode-", g = { hidden: r, visible: s }, f = l.extend("ComboBox", { initialize: function () { var t = this.el; this.input = t.querySelector("input"), this.dropper = t.querySelector("span"), this.options = t.querySelector("div"), this.controls = this.options.querySelector("div"), this.dropdown = this.options.querySelector("select"), this.controllable = this.modes.length > 1, this.optionsTransition = new c(this.options, this), this.menuModesSource = this.column.menuModes || { distinctValues: !0 }, this.dropper.addEventListener("mousedown", this.toggleDropDown.bind(this)), this.dropdown.addEventListener("mousewheel", function (t) { t.stopPropagation() }), this.dropdown.addEventListener("change", this.insertText.bind(this)) }, template: ['<div class="hypergrid-combobox" title="">', '    <input type="text" lang="{{locale}}" style="{{style}}">', '    <span title="Click for options"></span>', "    <div>", "        <div></div>", '        <select size="15" lang="{{locale}}"></select>', "    </div>", "</div>"].join("\n"), modes: [{ name: "distinctValues", appendOptions: function (t) { var e = {}, i = [], n = this.column.name, o = this.column.getFormatter(); this.grid.behavior.getData().forEach(function (t) { var i = o(t[n]); e[i] = (e[i] || 0) + 1 }); for (var r in e) i.push(r); for (; t.firstElementChild;) t.firstElementChild.remove(); return i.sort().forEach(function (i) { var n = new Option(i + " (" + e[i] + ")", i); t.appendChild(n) }), i.length } }], showEditor: function () { var t = this.menuModesSource, e = this.menuModes = {}; this.modes.forEach(function (i) { var n = i.name; n in t && (e[n] = t[n]) }), this.controllable && this.controls.addEventListener("click", n.bind(this)), this.modes.forEach(function (t) { var i = document.createElement("span"); if (this.controllable && (i.className = d + t.name, i.title = "Toggle " + (t.label || t.name).toLowerCase(), i.textContent = t.symbol), this.controls.appendChild(i), t.selector) { var n = document.createElement("optgroup"); n.label = t.label, n.className = "submenu-" + t.name, n.style.backgroundColor = t.backgroundColor, this.dropdown.add(n) } o.call(this, i, t.name, e[t.name]) }.bind(this)), u.showEditor.call(this) }, hideEditor: function () { u.hideEditor.call(this) }, toggleDropDown: function () { if (!this.optionsTransition.transitioning) { var t = window.getComputedStyle(this.dropdown).visibility; g[t].call(this) } }, insertText: function (t) { this.input.focus(), this.input.value = this.dropdown.value, this.input.setSelectionRange(0, this.input.value.length), this.toggleDropDown() } }); e.exports = f }, { "../lib/DOM/elfor": 111, "../lib/DOM/queueless": 112, "./CellEditor": 58, "./Textfield": 66 }], 61: [function (t, e, i) { "use strict"; var n = t("./CellEditor"), o = window.chrome, r = window.navigator, s = r.vendor, a = r.userAgent.indexOf("OPR") > -1, l = r.userAgent.indexOf("Edge") > -1, u = r.userAgent.match("CriOS"), c = !u && null !== o && void 0 !== o && "Google Inc." === s && 0 == a && 0 == l, h = n.extend("Date", { initialize: function (t) { var e, i = c; i ? (e = "chromeDate", this.template = '<input type="date">') : (e = "date", this.template = '<input type="text" lang="{{locale}}">', this.selectAll = function () { var t = this.getEditorValue().length; this.input.setSelectionRange(0, t) }), this.localizer = t.localization.get(e) } }); e.exports = h }, { "./CellEditor": 58 }], 62: [function (t, e, i) {
        "use strict"; var n = t("pop-menu"), o = t("./ComboBox"), r = t("./CellEditor").prototype, s = o.extend("FilterBox", {
            initialize: function () { var t = this.grid.behavior.filter, e = t && t.columnFilters; if (!e) throw "Column filters not available."; var i = this.column.name, n = t.getColumnFilter(i) || {}, o = t.schema.lookup(i) || {}; this.opMenu = o.opMenu || t.typeOpMap && t.typeOpMap[o.type || n.type] || t.opMenu, this.menuModesSource = this.column.menuModes || n.menuModes || o.menuModes || e.menuModes }, abortEditing: r.cancelEditing, modes: [{ name: "operators", symbol: "<", appendOptions: function (t) { if (!t.length) { var e = this.grid.behavior.filter.opMenuGroups; n.build(t, this.opMenu, { group: function (t) { return e[t] }, prompt: null }); var i = document.createElement("optgroup"); i.label = "Conjunctions", i.appendChild(new Option("and", " and ")), i.appendChild(new Option("or", " or ")), i.appendChild(new Option("nor", " nor ")) } } }, { name: "columnNames", label: "Column Names", selector: "optgroup.submenu-columnNames", symbol: "A", backgroundColor: "#eff", appendOptions: function (t) { for (var e = this.grid.behavior.columns, i = this.event.gridCell.x; t.firstElementChild;) t.firstElementChild.remove(); return e.forEach(function (e, n) { if (n !== i) { var o = e.name, r = new Option(o); r.title = "[" + o + ']\r"' + e.header + '"', t.appendChild(r) } }), e.length } }, {
                name: "distinctValues", label: "Distinct Values", selector: "optgroup.submenu-distinctValues", symbol: "#", backgroundColor: "#fef",
                appendOptions: o.prototype.modes[0].appendOptions
            }], hideEditor: function () { var t = this.grid.behavior.filter, e = this.column.name, i = t.getColumnFilter(e); i && (i.menuModes = this.menuModes), this.column.menuModes = this.menuModes, o.prototype.hideEditor.call(this) }, keyup: function (t) { t && (r.keyup.call(this, t), "immediate" === this.grid.properties.filteringMode && (this.saveEditorValue(this.getEditorValue()), this.moveEditor())) }, insertText: function (t) { var e = this.selectionStart, i = this.selectionEnd, n = this.dropdown, o = n.value, r = n.options[n.selectedIndex], s = r.parentElement, a = !("OPTGROUP" === s.tagName && s.className); if (this.input.focus(), e === i && a) { var l = this.grid.behavior.filter.parserCQL, u = this.input.value, c = l.getOperatorPosition(u, this.selectionStart, o); e = c.start, i = c.end, e > 0 && !/\s/.test(u[e - 1]) && (o = " " + o), i !== u.length && /\s/.test(u[i]) || (o += " ") } this.input.setRangeText(o, e, i, "end"), this.toggleDropDown() }, saveEditorValue: function (t) { r.saveEditorValue.call(this, t), this.grid.behavior.applyAnalytics() }
        }); e.exports = s
    }, { "./CellEditor": 58, "./ComboBox": 60, "pop-menu": 44 }], 63: [function (t, e, i) { "use strict"; var n = t("./Textfield"), o = n.extend("Number", { initialize: function (t) { this.localizer = t.localization.get("number") } }); e.exports = o }, { "./Textfield": 66 }], 64: [function (t, e, i) { "use strict"; var n = t("./CellEditor"), o = n.extend("Slider", { template: '<input type="range" lang="{{locale}}" style="{{style}}">' }); e.exports = o }, { "./CellEditor": 58 }], 65: [function (t, e, i) { "use strict"; var n = t("./CellEditor"), o = n.extend("Spinner", { template: '<input type="number" lang="{{locale}}" style="{{style}}">' }); e.exports = o }, { "./CellEditor": 58 }], 66: [function (t, e, i) { "use strict"; var n = t("./CellEditor"), o = t("../lib/Localization"), r = n.extend("Textfield", { template: '<input type="text" lang="{{locale}}" class="hypergrid-textfield" style="{{style}}">', initialize: function () { this.input.style.textAlign = this.event.getCellProperty("halign") }, localizer: o.prototype.string, selectAll: function () { this.input.setSelectionRange(0, this.input.value.length) } }); e.exports = r }, { "../lib/Localization": 113, "./CellEditor": 58 }], 67: [function (t, e, i) { "use strict"; function n(e, i) { this.grid = e, i && (this.editors = {}), !i && this.get("celleditor") || (this.add(t("./CellEditor")), this.add(t("./ComboBox")), this.add(t("./Color")), this.add(t("./Date")), this.add(t("./FilterBox")), this.add(t("./Number")), this.add(t("./Slider")), this.add(t("./Spinner")), this.add(t("./Textfield"))) } n.prototype = { constructor: n.prototype.constructor, add: function (t, e) { return "function" == typeof t && (e = t, t = void 0), t = t || e.prototype.$$CLASS_NAME, t = t && t.toLowerCase(), this.editors[t] = e, e }, addSynonym: function (t, e) { var i = this.get(e); return this.editors[t] = i }, get: function (t) { return this.editors[t && t.toLowerCase()] }, create: function (t, e) { var i, n = this.get(t); if (n) { if (n["abstract"]) throw 'Attempt to instantiate an "abstract" cell editor class.'; i = new n(this.grid, e) } return i }, editors: {} }, e.exports = n }, { "./CellEditor": 58, "./Color": 59, "./ComboBox": 60, "./Date": 61, "./FilterBox": 62, "./Number": 63, "./Slider": 64, "./Spinner": 65, "./Textfield": 66 }], 68: [function (t, e, i) { "use strict"; var n = t("./CellRenderer"), o = n.extend("Button", { paint: function (t, e) { var i = e.value, n = e.x, o = e.y, r = e.bounds, s = r.x + 1, a = r.y + 1, l = r.width - 1 - e.lineWidth, u = r.height - 1 - e.lineWidth, c = u / 2, h = t.createLinearGradient(s, a, s, a + u); e.mouseDown ? (h.addColorStop(0, "#B5CBED"), h.addColorStop(1, "#4d74ea")) : (h.addColorStop(0, "#ffffff"), h.addColorStop(1, "#aaaaaa")), t.fillStyle = e.backgroundColor, t.fillRect(r.x, r.y, r.width, r.height), t.fillStyle = h, t.strokeStyle = "#000000", this.roundRect(t, s, a, l, u, c, h, !0); var d = (l - e.getTextWidth(t, i)) / 2, g = (u - e.getTextHeight(t.font).descent) / 2; t.textBaseline = "middle", t.fillStyle = "#333333", t.font = u - 2 + "px sans-serif", e.backgroundColor = "rgba(0,0,0,0)", t.fillText(i, s + d, a + g), e.buttonCells[n + "," + o] = !0 } }); e.exports = o }, { "./CellRenderer": 69 }], 69: [function (t, e, i) { "use strict"; var n = t("../Base"), o = n.extend("CellRenderer", { paint: function (t, e) { }, roundRect: function (t, e, i, n, o, r, s, a) { a || (a = !0), r || (r = 5), t.beginPath(), t.moveTo(e + r, i), t.lineTo(e + n - r, i), t.quadraticCurveTo(e + n, i, e + n, i + r), t.lineTo(e + n, i + o - r), t.quadraticCurveTo(e + n, i + o, e + n - r, i + o), t.lineTo(e + r, i + o), t.quadraticCurveTo(e, i + o, e, i + o - r), t.lineTo(e, i + r), t.quadraticCurveTo(e, i, e + r, i), t.closePath(), a && t.stroke(), s && t.fill(), t.closePath() } }); o["abstract"] = !0, e.exports = o }, { "../Base": 49 }], 70: [function (t, e, i) { "use strict"; var n = t("./CellRenderer"), o = n.extend("ErrorCell", { paint: function (t, e, i) { var n = e.bounds.x, o = e.bounds.y, r = e.bounds.width, s = e.bounds.height; t.fillStyle = "#FFD500", t.fill(), t.lineWidth = 5, t.beginPath(), t.moveTo(n, o), t.lineTo(n + r, o), t.lineTo(n + r, o + s), t.lineTo(n, o + s), t.lineTo(n, o), t.stroke(), t.beginPath(), t.rect(n, o, r - 2, s), t.clip(), t.fillStyle = "#A00", t.textAlign = "start", t.textBaseline = "middle", t.font = 'bold 6pt "arial narrow", verdana, geneva', t.fillText(i, n + 4, o + s / 2 + .5) } }); e.exports = o }, { "./CellRenderer": 69 }], 71: [function (t, e, i) { "use strict"; var n = t("./CellRenderer"), o = n.extend("LastSelection", { paint: function (t, e) { var i = e.bounds.x, n = e.bounds.y, o = e.bounds.width, r = e.bounds.height; t.rect(i + 1, n, o - 2, r - 2), t.fillStyle = e.selectionRegionOverlayColor, t.fill(), t.lineWidth = 1, t.strokeStyle = e.selectionRegionOutlineColor, t.stroke() } }); e.exports = o }, { "./CellRenderer": 69 }], 72: [function (t, e, i) { "use strict"; function n(t, e, i, n) { return o(t, e, r(i).split(" "), n) } function o(t, e, i, n) { if (1 === i.length) return i; for (var r, s = [i.shift()]; (r = e.getTextWidth(t, s.join(" ")) < n) && i.length;) s.push(i.shift()); return !r && s.length > 1 && i.unshift(s.pop()), s = [s.join(" ")], i.length && (s = s.concat(o(t, e, i, n))), s } function r(t) { return (t + "").trim().replace(/\s\s+/g, " ") } function s(t, e, i, n, o, r) { var s = t.getTextHeight(t.font), a = t.getTextWidth(e, i); switch (o -= .4 * s.height, e.textAlign) { case "center": n -= a / 2; break; case "right": n -= a } e.lineWidth = r, e.moveTo(n + .5, o + .5), e.lineTo(n + a + .5, o + .5) } function a(t, e, i, n, o, r) { var s = t.getTextWidth(e, i); switch (e.textAlign) { case "center": n -= s / 2; break; case "right": n -= s } e.lineWidth = r, e.moveTo(n + .5, o + .5), e.lineTo(n + s + .5, o + .5) } function l(t, e, i, n, o, r) { e.forEach(function (e) { t.fillStyle = e, t.fillRect(i, n, o, r) }) } function u(t, e, i) { var n = t; return e.isGridColumn && e.isGridRow && e.dataRow && (i = "f" === (typeof t)[0] && t || i, i && (n = i(e.dataRow, e.name))), n || 0 === n || n === !1 ? n : "" } function c(t) { if (void 0 === t) return 0; var e = t.match(c.regex); if (null === e) return 1; var i = e[4]; return void 0 === i ? 0 : Number(i) } var h = t("./CellRenderer"), d = h.extend("SimpleCell", { paint: function (t, e) { var i, n, o, r, s, a, h = e.value, d = e.bounds, g = d.x, f = d.y, p = d.width, m = d.height, v = 2; h && h.constructor === Array && (i = h[0], n = h[2], h = h[1], h && "object" == typeof h && "HTMLImageElement" === h.constructor.name && (o = h, h = null), i && "IMG" !== i.nodeName && (i = null), n && "IMG" !== n.nodeName && (n = null), o && "IMG" !== o.nodeName && (o = null)), e.isUserDataArea && (h = u(h, e, e.calculator)), h = e.formatValue(h), a = e.isSelected ? e.foregroundSelectionFont : e.font, t.font !== a && (t.font = a), "left" !== t.textAlign && (t.textAlign = "left"), "middle" !== t.textBaseline && (t.textBaseline = "middle"); var b, C, w, y, x = []; e.isCellHovered && e.hoverCellHighlight.enabled ? w = e.hoverCellHighlight.backgroundColor : e.isRowHovered && (C = e.hoverRowHighlight).enabled ? w = e.isGridColumn || !C.header || void 0 === C.header.backgroundColor ? C.backgroundColor : C.header.backgroundColor : e.isColumnHovered && (C = e.hoverColumnHighlight).enabled && (w = e.isGridRow || !C.header || void 0 === C.header.backgroundColor ? C.backgroundColor : C.header.backgroundColor), c(w) < 1 && (e.isSelected && (y = u(e.backgroundSelectionColor, e)), c(y) < 1 && (b = u(e.backgroundColor, e), c(b) > 0 && x.push(b)), void 0 !== y && x.push(y)), void 0 !== w && x.push(w), l(t, x, g, f, p, m); var S = u(e.isSelected ? e.foregroundSelectionColor : e.color, e); t.fillStyle !== S && (t.fillStyle = S, t.strokeStyle = S), e.isHeaderRow && e.headerTextWrapping ? this.renderMultiLineText(t, e, h) : this.renderSingleLineText(t, e, h); var E = 0; if (i && (s = Math.round((m - i.height) / 2), t.drawImage(i, g + v, f + s), E = Math.max(i.width + 2)), n && p > 1.75 * m) { s = Math.round((m - n.height) / 2); var A = g + p - n.width; void 0 !== b ? l(t, x, A, f, n.width, m) : t.clearRect(A, f, n.width, m), t.drawImage(n, A, f + s), E = Math.max(n.width + 2) } o && (s = Math.round((m - o.height) / 2), r = Math.round((p - o.width) / 2), t.drawImage(o, g + p - r - o.width, f + s), E = Math.max(o.width + 2)), e.cellBorderThickness && (t.beginPath(), t.rect(g, f, p, m), t.lineWidth = e.cellBorderThickness, t.strokeStyle = e.cellBorderStyle, t.stroke(), t.closePath()), e.minWidth = e.minWidth + 2 * E }, renderMultiLineText: function (t, e, i) { var o = e.bounds.x, s = e.bounds.y, a = e.bounds.width, l = e.bounds.height, u = n(t, e, i, a); if (1 === u.length) return this.renderSingleLineText(t, e, r(i)); var c = e.cellPadding, h = 0, d = e.voffset, g = e.halign, f = e.getTextHeight(e.font).height; switch (g) { case "right": h = a - c; break; case "center": h = a / 2; break; case "left": h = c } var p = 0, m = Math.ceil(f / 2); d += Math.ceil((l - (u.length - 1) * f) / 2), h = Math.max(p, h), d = Math.max(m, d), t.save(), t.beginPath(), t.rect(o, s, a, l), t.clip(), t.textAlign = g; for (var v = 0; v < u.length; v++) t.fillText(u[v], o + h, s + d + v * f); t.restore() }, renderSingleLineText: function (t, e, i) { var n = e.bounds.x, o = e.bounds.y, r = e.bounds.width, l = e.bounds.height, u = e.cellPadding, c = 0, h = e.voffset, d = e.halign, g = e.isCellHovered, f = e.link, p = e.getTextHeight(e.font), m = e.getTextWidth(t, i); switch (e.minWidth = m + 2 * u, d) { case "right": c = r - u - m; break; case "center": c = (r - m) / 2; break; case "left": c = u } c = Math.max(0, c), h += Math.ceil(l / 2), null !== i && t.fillText(i, n + c, o + h), g && (t.beginPath(), f && (a(e, t, i, n + c, o + h + Math.floor(p.height / 2), 1), t.stroke()), t.closePath()), e.strikeThrough === !0 && (t.beginPath(), s(e, t, i, n + c, o + h + Math.floor(p.height / 2), 1), t.stroke(), t.closePath()) } }); c.regex = /^(transparent|((RGB|HSL)A\(.*,\s*([\d\.]+)\)))$/i, e.exports = d }, { "./CellRenderer": 69 }], 73: [function (t, e, i) { "use strict"; var n = t("./CellRenderer"), o = n.extend("Slider", { paint: function (t, e) { var i = e.bounds.x, n = e.bounds.y, o = e.bounds.width, r = e.bounds.height; t.strokeStyle = "white"; var s = e.value, a = r / 2, l = o * s, u = e.isSelected ? e.backgroundColor : "#333333", c = t.createLinearGradient(i, n, i, n + r); c.addColorStop(0, u), c.addColorStop(1, "#666666"); var h = t.createLinearGradient(i, n, i, n + r); h.addColorStop(0, "#aaaaaa"), h.addColorStop(1, "#777777"), t.fillStyle = c, this.roundRect(t, i, n, o, r, a, c), s < 1 ? t.fillStyle = h : t.fillStyle = "#eeeeee", t.beginPath(), t.arc(i + Math.max(l - a, a), n + a, a, 0, 2 * Math.PI), t.fill(), t.closePath(), e.minWidth = 100 } }); e.exports = o }, { "./CellRenderer": 69 }], 74: [function (t, e, i) { "use strict"; var n = t("./CellRenderer"), o = n.extend("SparkBar", { paint: function (t, e) { var i = e.bounds.x, n = e.bounds.y, o = e.bounds.width, r = e.bounds.height; t.beginPath(); var s = e.value; if (s && s.length) { var a = s.length, l = o / a, u = e.isSelected ? e.foregroundSelectionColor : e.color; (e.backgroundColor || e.isSelected) && (t.fillStyle = e.isSelected ? "blue" : e.backgroundColor, t.fillRect(i, n, o, r)), t.fillStyle = u; for (var c = 0; c < s.length; c++) { var h = s[c] / 110 * r; t.fillRect(i + 5, n + r - h, .6666 * l, h), i += l } t.closePath(), e.minWidth = 10 * a } } }); e.exports = o }, { "./CellRenderer": 69 }], 75: [function (t, e, i) { "use strict"; var n = t("./CellRenderer"), o = n.extend("SparkLine", { paint: function (t, e) { var i = e.bounds.x, n = e.bounds.y, o = e.bounds.width, r = e.bounds.height; t.beginPath(); var s = e.value; if (s && s.length) { var a = s.length, l = o / a, u = e.isSelected ? e.foregroundSelectionColor : e.color; (e.backgroundColor || e.isSelected) && (t.fillStyle = e.isSelected ? e.backgroundSelectionColor : e.backgroundColor, t.fillRect(i, n, o, r)), t.strokeStyle = u, t.fillStyle = u, t.beginPath(); for (var c, h = 0; h < s.length; h++) { var d = s[h] / 110 * r; c || (c = d), t.lineTo(i + 5, n + r - d), t.arc(i + 5, n + r - d, 1, 0, 2 * Math.PI, !1), i += l } e.minWidth = 10 * a, t.stroke(), t.closePath() } } }); e.exports = o }, { "./CellRenderer": 69 }], 76: [function (t, e, i) { "use strict"; var n = t("./CellRenderer"), o = n.extend("TreeCell", { paint: function (t, e) { var i = e.bounds.x, n = e.bounds.y, o = e.bounds.width, r = e.bounds.height, s = e.value.data, a = e.value.indent, l = e.value.icon; if ((e.backgroundColor || e.isSelected) && (t.fillStyle = e.isSelected ? e.backgroundColor : e.backgroundColor, t.fillRect(i, n, o, r)), s && s.length) { var u = Math.ceil(r / 2); t.fillStyle = e.isSelected ? e.backgroundColor : e.backgroundColor, t.fillText(l + s, i + a, n + u); var c = e.getTextWidth(t, l + s), h = i + a + c + 10; e.minWidth = h } } }); e.exports = o }, { "./CellRenderer": 69 }], 77: [function (t, e, i) { "use strict"; function n(e) { e && (this.singletons = {}), !e && this.get("emptycell") || (this.add("EmptyCell", t("./CellRenderer")), this.add(t("./Button")), this.add(t("./SimpleCell")), this.add(t("./SliderCell")), this.add(t("./SparkBar")), this.add(t("./LastSelection")), this.add(t("./SparkLine")), this.add(t("./ErrorCell")), this.add(t("./TreeCell"))) } n.prototype = { constructor: n.prototype.constructor, add: function (t, e) { return "function" == typeof t && (e = t, t = void 0), t = t || e.prototype.$$CLASS_NAME, t = t && t.toLowerCase(), this.singletons[t] = new e }, addSynonym: function (t, e) { var i = this.get(e); return this.singletons[t] = i }, get: function (t) { return this.singletons[t && t.toLowerCase()] }, singletons: {} }, e.exports = n }, { "./Button": 68, "./CellRenderer": 69, "./ErrorCell": 70, "./LastSelection": 71, "./SimpleCell": 72, "./SliderCell": 73, "./SparkBar": 74, "./SparkLine": 75, "./TreeCell": 76 }], 78: [function (t, e, i) { "use strict"; var n = t("../Base"), o = n.extend("DataModel", { grid: null, initialize: function (t, e) { this.grid = t }, changed: function () { this.deprecated("changed()", "grid.behavior.changed()", "1.1.0") }, getPrivateState: function () { return this.deprecated("getPrivateState()", "grid.properties", "1.2.0") }, getCell: function (t, e) { return this.grid.cellRenderers.get(e) }, getCellEditorAt: function (t, e, i, n) { return this.grid.cellEditors.create(i, n) } }); e.exports = o }, { "../Base": 49 }], 79: [function (t, e, i) { "use strict"; function n(t) { this.grid = t, this.behavior = t.behavior, this.dataRow = {} } function o() { if (!this.behavior.filter.getColumnFilterState) throw new this.behavior.HypergridError("Column filters not available.") } var r = t("../../images"); n.prototype = { constructor: n.prototype.constructor, type: "filter", getRowCount: function () { return this.grid.isShowFilterRow() ? 1 : 0 }, getValue: function (t, e) { o.call(this); var i = this.behavior.getColumn(t), n = this.behavior.filter.getColumnFilterState(i.name) || ""; return n = [null, n, r.filter(n.length)] }, setValue: function (t, e, i) { o.call(this); var n = this.behavior.getColumn(t); this.behavior.filter.setColumnFilterState(n.name, i) }, getRow: function (t) { return this.dataRow } }, e.exports = n }, { "../../images": 4 }], 80: [function (t, e, i) { "use strict"; function n(t) { this.grid = t, this.behavior = t.behavior, this.dataRow = {} } n.prototype = { constructor: n.prototype.constructor, type: "header", getRowCount: function () { return this.grid.isShowHeaderRow() ? 1 : 0 }, getValue: function (t, e) { var i, n = this.behavior.getColumn(t), o = n.header || n.name, r = this.behavior.dataModel.getSortImageForColumn(t); return r && ((i = o.lastIndexOf(this.behavior.groupHeaderDelimiter) + 1) && (r = o.substr(0, i) + r, o = o.substr(i)), o = r + o), o }, setValue: function (t, e, i) { this.behavior.getColumn(t).header = i }, getRow: function (t) { return this.dataRow } }, e.exports = n }, {}], 81: [function (t, e, i) { "use strict"; function n() { var t = this.selectedData, e = this.grid.selectionModel.hasRowSelections(), i = t.length || e; if (i) var n = this.getIndexedData(); t.forEach(function (e, i) { n.indexOf(e) >= 0 && delete t[i] }), e && this.grid.getSelectedRows().forEach(function (e) { var i = n[e]; t.indexOf(i) < 0 && t.push(i) }) } function o() { if (this.selectedData.length) { var t = this.grid.selectionModel, e = this.grid.getHeaderRowCount(), i = this.getIndexedData(); t.clearRowSelection(), this.selectedData.forEach(function (n) { var o = i.indexOf(n); o >= 0 && t.selectRow(e + o) }) } } function r(t, e, i, n) { var o, r = {}, s = arguments.length; switch ("number" == typeof e ? s-- : (n = i, i = e, e = void 0), s) { case 2: "object" == typeof i ? r = i : r.getPropName = i; break; case 3: "string" != typeof i ? o = !0 : r[i] = n; break; default: o = !0 } if (o) throw "Invalid overload."; return void 0 !== e && Object.defineProperty(r, "column", { value: { index: e, name: t.source.schema[e].name } }), this.properties(r) } function s(t, e) { return h[e] || (console.warn(e + "() has been deprecated as of v1.2.0 and will be removed in a future release. Constructs like " + e + "()[i] should be changed to schema[i]. (This deprecated method now returns a new array derived from schema.)"), h[e] = !0), this.schema.map(function (e) { return e[t] }, this) } var a = t("./DataModel"), l = t("../dataSources/DataSourceOrigin"), u = { properties: function (t) { var e, i = "getPropName" in t; return i && (e = null), e } }, c = a.extend("dataModels.JSON", { initialize: function (t, e) { this.reset(e) }, DataSourceOrigin: l, pipelineSchemaStash: [], reset: function (t) { this.selectedData = [], this.api = {}, delete this.pipelineSchemaStash, this.source = new this.DataSourceOrigin(t.data, t.schema), this.setPipeline(), this.registerHelperAPI("filter"), this.registerHelperAPI("sorter") }, defaultPipelineSchema: [], clearSelectedData: function () { this.selectedData.length = 0 }, getDataSource: function () { return this.deprecated("getDataSource()", "dataSource", "1.0.7") }, getData: function () { return this.source.data }, getFilteredData: function () { return this.deprecated("getFilteredData()", "getIndexedData()", "1.2.0", arguments) }, getIndexedData: function () { for (var t = this.dataSource, e = t.getRowCount(), i = new Array(e), n = 0; n < e; n++) i[n] = t.getRow(n); return i }, getValue: function (t, e) { return this.hasHierarchyColumn() ? t === -2 && (t = 0) : this.isDrillDown() && (t += 1), this.dataSource.getValue(t, e) }, getDataIndex: function (t) { return this.dataSource.getDataIndex(t) }, setValue: function (t, e, i) { this.hasHierarchyColumn() ? t === -2 && (t = 0) : this.isDrillDown() && (t += 1), this.dataSource.setValue(t, e, i) }, getColumnProperties: function (t) { return this.deprecated("getColumnProperties(x)", "grid.behavior.getColumnProperties(x)", "1.2.0", arguments) }, getColumnCount: function () { var t = this.grid.properties.showTreeColumn === !0, e = this.isDrillDown() && !t ? -1 : 0; return this.dataSource.getColumnCount() + e }, getRowCount: function () { return this.dataSource.getRowCount() }, getHeaders: function () { return s.call(this, "header", "getHeaders") }, setHeaders: function (t) { this.dataSource.setHeaders(t) }, setFields: function (t) { this.dataSource.setFields(t) }, getFields: function () { return s.call(this, "name", "getFields") }, getCalculators: function () { return s.call(this, "calculator", "getCalculators") }, reindex: function (t) { n.call(this), this.pipeline.forEach(function (e) { e && e.apply && e.apply(t) }), o.call(this) }, setData: function (t, e) { this.source.setData(t, e) }, setPipeline: function (t, e) { Array.isArray(t) || (e = t, t = void 0), e && e.stash && this.getPipelineSchemaStash(e.stash).push(this.DataSources); var i = this.source; this.pipeline = [], t = t || this.defaultPipelineSchema, t.forEach(function (t) { t && (i = new t(i), this.pipeline.push(i), i.type && i.set && !this.api[i.type] && this.registerHelperAPI(i.type)) }, this), this.updateDataSources(), this.dataSource = i, this.DataSources = t }, findDataSourceByType: function (t) { for (var e, i = this.pipeline.length - 1; i >= 0; i--) if (e = this.pipeline[i], e.type === t) return e }, updateDataSources: function (t) { var e = {}, i = this.api; return this.pipeline.forEach(function (n) { t && n.type !== t || !i[n.type] || (n.set(i[n.type]), e[n.type] = (e[n.type] || 0) + 1) }), t ? e[t] : e }, getPipelineSchemaStash: function (t) { var e; switch (t) { case "shared": e = a.prototype.stash; break; case "own": case "instance": this.hasOwnProperty("pipelineSchemaStash") || (this.pipelineSchemaStash = []); case "default": case void 0: e = this.pipelineSchemaStash } return e }, unstashPipeline: function (t) { var e = this.getPipelineSchemaStash(t); e.length && this.setPipeline(e.pop()) }, truncatePipeline: function (t) { return this.deprecated("truncatePipeline(newLength)", "setPipeline()", "1.2.0", arguments, "Build a local pipeline (array of data source constructors) and pass it to setPipeline.") }, isDrillDown: function (t) { var e = t && t.gridCell && t.gridCell.x; return this.dataSource.isDrillDown(e) }, setTopTotals: function (t) { return this.deprecate("setTopTotals(rows)", "grid.behavior.setTopTotals(rows)", "1.1.0", arguments) }, getTopTotals: function () { return this.deprecate("getTopTotals(rows)", "grid.behavior.getTopTotals(rows)", "1.1.0", arguments) }, setBottomTotals: function (t) { return this.deprecate("setBottomTotals(rows)", "grid.behavior.setBottomTotals(rows)", "1.1.0", arguments) }, getBottomTotals: function () { return this.deprecate("getBottomTotals(rows)", "grid.behavior.getBottomTotals(rows)", "1.1.0", arguments) }, getActiveColumns: function () { return this.grid.behavior.columns.filter(function (t) { return "tree" !== t.name }) }, getVisibleColumns: function () { return this.deprecated("getVisibleColumns()", "getActiveColumns()", "1.0.6", arguments) }, getHiddenColumns: function () { for (var t = this.grid.behavior.columns, e = this.grid.behavior.allColumns, i = [], n = 0; n < e.length; n++) t.indexOf(e[n]) === -1 && i.push(e[n]); return i.sort(function (t, e) { return t.header < e.header }), i }, hasHierarchyColumn: function () { var t = this.grid.properties.showTreeColumn === !0; return this.isDrillDown() && t }, getSortImageForColumn: function (t) { }, cellClicked: function (t) { return 2 === arguments.length ? this.deprecated("cellClicked(cell, event)", "cellClicked(event)", "1.2.0", arguments) : this.toggleRow(t.dataCell.y) }, toggleRow: function (t, e) { var i; return this.isDrillDown() && (i = this.dataSource.click(t, e), i && (this.reindex({ rowClick: !0 }), this.grid.behavior.changed())), i }, getRow: function (t) { return this.dataSource.getRow(t) }, get filter() { return this.api.filter }, set filter(t) { this.registerHelperAPI("filter", t) }, get sorter() { return this.api.sorter }, set sorter(t) { this.registerHelperAPI("sorter", t) }, registerHelperAPI: function (t, e) { this.api[t] = e = e || u, "function" == typeof e.properties && 1 === e.properties.length && (e.prop = r.bind(e, this)), this.updateDataSources(t) && this.reindex() }, applyState: function () { return this.deprecated("applyState()", "reindex()", "1.2.0", arguments) }, getUnfilteredValue: function (t, e) { return this.deprecated("getUnfilteredValue(x, y)", null, "1.2.0", arguments, "No longer supported") }, getUnfilteredRowCount: function () { return this.deprecated("getUnfilteredValue(x, y)", null, "1.2.0", arguments, "No longer supported") }, addRow: function (t) { return this.getData().push(t), t }, get schema() { return this.source.schema }, set schema(t) { this.source.setSchema(t) } }), h = {}; c.prototype.applyAnalytics = c.prototype.reindex, e.exports = c }, { "../dataSources/DataSourceOrigin": 84, "./DataModel": 78 }], 82: [function (t, e, i) { "use strict"; function n(t, e) { this.behavior = t.behavior, this.data = [], e && e.name && (this.name = e.name) } n.prototype = { constructor: n.prototype.constructor, type: "summary", getRowCount: function () { return this.getData().length }, getData: function () { return this.behavior.dataModel.dataSource.getGrandTotals() || this.data }, setData: function (t) { this.data = t || [] }, getValue: function (t, e) { return this.data[e][t] }, setValue: function (t, e, i) { this.data[t] = i }, getRow: function (t) { return this.data[t] } }, e.exports = n }, {}], 83: [function (t, e, i) { "use strict"; e.exports = { DataModel: t("./DataModel"), JSON: t("./JSON"), HeaderSubgrid: t("./HeaderSubgrid"), FilterSubgrid: t("./FilterSubgrid"), SummarySubgrid: t("./SummarySubgrid") } }, { "./DataModel": 78, "./FilterSubgrid": 79, "./HeaderSubgrid": 80, "./JSON": 81, "./SummarySubgrid": 82 }], 84: [function (t, e, i) { "use strict"; function n(t, e) { this.data = t || [], e && this.setSchema(e) } function o(t) { return t ? Object.getOwnPropertyNames(t || []).filter(function (t) { return "__" !== t.substr(0, 2) }) : [] } var r = t("fin-hypergrid-data-source-base"), s = r.extend("DataSourceOrigin", { initialize: function (t, e) { delete this.dataSource, this.setData.call(this, t, e || []) }, setData: n, get schema() { return this._schema }, set schema(t) { this._schema = t }, getSchema: function () { return this._schema }, setSchema: function (t) { if (!t.length) { var e = o(this.data[0]); t = Array(e.length); for (var i = 0; i < e.length; i++) t[i] = { name: e[i] } } this._schema = t }, isNullObject: !1, getDataIndex: function (t) { return t }, getRow: function (t) { return this.data[t] }, findRow: function (t, e, i) { var n, o, r, s, a; if ("object" == typeof t) { if (s = t, e instanceof Array) { if (a = 2, r = e, r.reduce(function (t, e) { return e in s && t++, t }, 0) !== r.length) throw "Expected all keys given in 2nd arg to be found in hash given in 1st arg." } else a = 1, r = Object.keys(s), i = e; 1 === r.length ? (t = r[0], e = s[t], s = void 0) : r.length && (n = this.data.find(function (e, i) { if (e) { o = i; for (var n in r) if (t = r[n], e[t] !== s[t]) return; return !0 } })) } else { if (arguments.length < 2) throw "Expected at least 2 arguments when first argument not object but found " + arguments.length + "."; a = 2 } if (s || (n = this.data.find(function (i, n) { if (i) return o = n, i[t] === e })), n) if (this.foundRowIndex = o, null === i) this.data.splice(o, 1); else if ("object" == typeof i) this.data[o] = i; else { if (void 0 !== i) throw "Expected null, undefined, or object but found " + typeof i + "."; arguments.length > a && delete this.data[o] } else this.foundRowIndex = void 0; return n }, findRowByIndex: function (t, e) { var i; if (arguments.length < 1) throw "Expected at least 1 argument but found " + arguments.length + "."; if ("number" != typeof t) throw "Expected at index to be a number but got " + t + "."; if (i = this.data[t]) if (null === e) this.data.splice(t, 1); else if ("object" == typeof e) this.data[t] = e; else if (void 0 === e && arguments.length >= 2) delete this.data[t]; else if (void 0 !== e) throw "Expected null, undefined, or object but found " + typeof e + "."; return i }, getValue: function (t, e) { var i = this.getRow(e); return i ? i[this.schema[t].name] : null }, setValue: function (t, e, i) { this.getRow(e)[this.schema[t].name] = i }, getRowCount: function () { return this.data.length }, getColumnCount: function () { return this.schema.length }, getFields: function () { return this.schema.map(function (t) { return t.name }) }, getHeaders: function () { return this.schema.map(function (t) { return t.header }) }, setFields: function (t) { if (!Array.isArray(t) || t.length !== this.schema.length) throw new this.DataSourceError("Expected argument to be an array with correct length."); t.forEach(function (t, e) { this.schema[e].field = t }, this) }, setHeaders: function (t) { if (!Array.isArray(t) || t.length !== this.schema.length) throw new this.DataSourceError("Expected argument to be an array with correct length."); t.forEach(function (t, e) { this.schema[e].header = t }, this) } }); e.exports = s }, { "fin-hypergrid-data-source-base": 8 }], 85: [function (t, e, i) { "use strict"; e.exports = { dataSourceOrigin: t("./DataSourceOrigin"), DataSourceBase: t("fin-hypergrid-data-source-base") } }, { "./DataSourceOrigin": 84, "fin-hypergrid-data-source-base": 8 }], 86: [function (t, e, i) { "use strict"; function n(t, e) { if (null === e || void 0 === e) return 0; if (e += "", 0 === e.length) return 0; var i = t.font + e, n = s.get(i); return n || (n = t.measureText(e).width, s.set(i, n)), n } function o(t) { var e = a[t]; if (!e) { e = {}; var i = document.createElement("span"); i.textContent = "Hg", i.style.font = t; var n = document.createElement("div"); n.style.display = "inline-block", n.style.width = "1px", n.style.height = "0px"; var o = document.createElement("div"); o.appendChild(i), o.appendChild(n), o.style.position = "absolute", document.body.appendChild(o); try { n.style.verticalAlign = "baseline"; var r = n.getBoundingClientRect(), s = i.getBoundingClientRect(); e.ascent = r.top - s.top, n.style.verticalAlign = "bottom", e.height = r.top - s.top, e.descent = e.height - e.ascent } finally { document.body.removeChild(o) } 0 !== e.height && (a[t] = e) } return e } var r = t("lru-cache"); e.exports = { noDataMessage: "", font: "13px Tahoma, Geneva, sans-serif", color: "rgb(25, 25, 25)", backgroundColor: "rgb(241, 241, 241)", foregroundSelectionFont: "bold 13px Tahoma, Geneva, sans-serif", foregroundSelectionColor: "rgb(0, 0, 128)", sortOnHiddenColumns: !0, backgroundSelectionColor: "rgba(147, 185, 255, 0.625)", columnHeaderFont: "12px Tahoma, Geneva, sans-serif", columnHeaderColor: "rgb(25, 25, 25)", columnHeaderForegroundSelectionFont: "bold 12px Tahoma, Geneva, sans-serif", columnHeaderBackgroundColor: "rgb(223, 227, 232)", columnHeaderForegroundSelectionColor: "rgb(80, 80, 80)", columnHeaderBackgroundSelectionColor: "rgba(255, 220, 97, 0.45)", columnHeaderForegroundColumnSelectionColor: "rgb(25, 25, 25)", columnHeaderBackgroundColumnSelectionColor: "rgb(255, 180, 0)", columnHeaderHalign: "center", rowHeaderFont: "12px Tahoma, Geneva, sans-serif", rowHeaderColor: "rgb(25, 25, 25)", rowHeaderBackgroundColor: "rgb(223, 227, 232)", rowHeaderForegroundSelectionColor: "rgb(80, 80, 80)", rowHeaderForegroundSelectionFont: "bold 12px Tahoma, Geneva, sans-serif", rowHeaderBackgroundSelectionColor: "rgba(255, 220, 97, 0.45)", rowHeaderForegroundRowSelectionColor: "rgb(25, 25, 25)", rowHeaderBackgroundRowSelectionColor: "rgb(255, 180, 0)", filterFont: "12px Tahoma, Geneva, sans-serif", filterColor: "rgb(25, 25, 25)", filterBackgroundColor: "white", filterForegroundSelectionColor: "rgb(25, 25, 25)", filterBackgroundSelectionColor: "rgb(255, 220, 97)", filterHalign: "center", treeColumnFont: "12px Tahoma, Geneva, sans-serif", treeColumnColor: "rgb(25, 25, 25)", treeColumnBackgroundColor: "rgb(223, 227, 232)", treeColumnForegroundSelectionColor: "rgb(25, 25, 25)", treeColumnBackgroundSelectionColor: "rgba(255, 220, 97, 0.45)", treeColumnForegroundColumnSelectionColor: "rgb(25, 25, 25)", treeColumnBackgroundColumnSelectionColor: "rgb(255, 180, 0)", backgroundColor2: "rgb(201, 201, 201)", voffset: 0, scrollbarHoverOver: "visible", scrollbarHoverOff: "hidden", scrollingEnabled: !0, vScrollbarClassPrefix: "", hScrollbarClassPrefix: "", fixedRowAlign: "center", fixedColAlign: "center", halign: "center", cellPadding: 5, gridLinesH: !0, gridLinesV: !0, gridLinesVOverflow: !1, lineColor: "rgb(199, 199, 199)", lineWidth: 1, defaultRowHeight: 15, defaultColumnWidth: 100, repaintIntervalRate: 60, repaintImmediately: !1, useBitBlit: !1, useHiDPI: !0, editorActivationKeys: ["alt", "esc"], readOnly: !1, getTextWidth: n, getTextHeight: o, fixedColumnCount: 0, fixedRowCount: 0, showRowNumbers: !0, showTreeColumn: !0, showHeaderRow: !0, showFilterRow: !1, cellSelection: !0, columnSelection: !0, rowSelection: !0, singleRowSelectionMode: !0, selectionRegionOverlayColor: "rgba(0, 0, 48, 0.2)", selectionRegionOutlineColor: "rgb(69, 69, 69)", columnAutosizing: !0, rowNumberAutosizing: !0, headerTextWrapping: !1, rowResize: !1, editable: !0, filterable: !0, editOnDoubleClick: !0, doubleClickDelay: 325, editOnKeydown: !0, checkboxOnlyRowSelections: !1, format: void 0, editor: void 0, renderer: "SimpleCell", hoverCellHighlight: { enabled: !0, backgroundColor: "rgba(160, 160, 40, 0.45)" }, hoverRowHighlight: { enabled: !0, backgroundColor: "rgba(100, 100, 25, 0.30)" }, hoverColumnHighlight: { enabled: !0, backgroundColor: "rgba(60, 60, 15, 0.15)" }, link: !1, strikeThrough: !1, unsortable: !1, multipleSelections: !1, enableContinuousRepaint: !1, columnsReorderable: !0, applyCellProperties: !0, reapplyCellProperties: !1, columnGrabMargin: 5 }; var s = new r(2e3), a = {} }, { "lru-cache": 40 }], 87: [function (t, e, i) { "use strict"; function n(t, e) { return t = t.header.toString().toUpperCase(), e = e.header.toString().toUpperCase(), t < e ? -1 : t > e ? 1 : 0 } var o = t("list-dragon"), r = t("./Dialog"), s = t("../lib/stylesheet"), a = r.extend("ColumnPicker", { initialize: function (t, e) { var i = t.behavior; if (this.grid = t, i.isColumnReorderable()) { var r = s.inject("list-dragon-addendum"); if (i.setGroups) { this.selectedGroups = { title: "Groups", models: i.getGroups() }, this.availableGroups = { title: "Available Groups", models: i.getAvailableGroups() }; var a = new o([this.selectedGroups, this.availableGroups]); this.append(a.modelLists[0].container), this.append(a.modelLists[1].container) } this.inactiveColumns = { title: "Inactive Columns", models: i.getHiddenColumns().sort(n) }, this.activeColumns = { title: "Active Columns", models: i.getActiveColumns() }, this.sortOnHiddenColumns = this.wasSortOnHiddenColumns = t.properties.sortOnHiddenColumns; var l = new o([this.inactiveColumns, this.activeColumns], { cssStylesheetReferenceElement: r, label: "{header}" }); this.append(l.modelLists[0].container), this.append(l.modelLists[1].container), l.modelLists[1].element.addEventListener("listchanged", function (e) { t.fireSyntheticOnColumnsChangedEvent() }), this.sortOnHiddenColumns = this.grid.properties.sortOnHiddenColumns } else { var u = document.createElement("div"); u.style.textAlign = "center", u.style.marginTop = "2em", u.innerHTML = "The selection of visible columns in the grid may not be changed.", this.append(u) } var c = document.createElement("label"); c.innerHTML = '<input type="checkbox"> Allow sorting on hidden columns', c.style.fontWeight = "normal", c.style.marginRight = "2em"; var h = c.querySelector("input"); h.checked = this.sortOnHiddenColumns, h.addEventListener("click", function (t) { self.sortOnHiddenColumns = h.checked, t.stopPropagation() }); var d = this.el.querySelector(".hypergrid-dialog-control-panel"); d.insertBefore(c, d.firstChild), this.open(e.container) }, onClosed: function () { var t = this.grid.behavior, e = t.columns; if (this.activeColumns) { var i = e[0]; e.length = 0, i && "Tree" === i.label && e.push(i), this.activeColumns.models.forEach(function (t) { e.push(t) }), this.sortOnHiddenColumns !== this.wasSortOnHiddenColumns && (this.grid.addProperties({ sortOnHiddenColumns: this.sortOnHiddenColumns }), t.sortChanged(this.inactiveColumns.models)), t.changed() } if (this.selectedGroups) { var n = this.selectedGroups.models.map(function (t) { return t.id }); t.setGroups(n) } } }); e.exports = a }, { "../lib/stylesheet": 120, "./Dialog": 88, "list-dragon": 39 }], 88: [function (t, e, i) {
        "use strict"; function n() { } function o(t) { t.target === this.el && "opacity" === t.propertyName && ("BODY" !== this.el.parentElement.tagName && (this.el.parentElement.style.visibility = "hidden"), this.el.remove(), delete this.el, this.onClosed(), this.terminate(), this.closing = !1, this.closed = !0) } function r(t) { t.target === this.el && "opacity" === t.propertyName && (this.appVisible("hidden"), this.el.removeEventListener("transitionend", this.hideAppBound), this.onOpened(), this.opening = !1, this.opened = !0) } function s(t) { this && (t.target.classList.contains("hypergrid-dialog-close") ? (t.preventDefault(), this.close()) : t.target.classList.contains("hypergrid-dialog-settings") ? (t.preventDefault(), this.settings && this.settings()) : this.onClick && !this.onClick.call(this, t) && "A" === t.target.tagName && t.preventDefault()), t.stopPropagation() } var a = t("automat"), l = t("../Base"), u = t("../../html"), c = t("../../images"), h = t("../lib/DOM/elfor"), d = l.extend("Dialog", { initialize: function (t, e) { if (e = e || {}, this.grid = t, this.el = a.firstChild(e.dialogTemplate || u.dialog, e.dialogReplacements), this.originalFirstChild = this.el.firstElementChild, e.settings === !1) { var i = this.el.querySelector(".hypergrid-dialog-settings"); i && i.remove() } e.backgroundImage !== !1 && (this.el.style.backgroundImage = "url('" + (e.backgroundImage || c.dialog.src) + "')"), this.el.addEventListener("click", s.bind(this)), e.terminate && (this.terminate = e.terminate) }, append: function (t, e) { var i = this.el; if ("string" == typeof t || "function" == typeof t) { var n = Array.prototype.slice.call(arguments); n.splice(1, 0, i, this.originalFirstChild), a.append.apply(null, n) } else if ("length" in t) for (var o = 0; o < t.length; ++o) i.insertBefore(t[o], this.originalFirstChild); else i.insertBefore(t, this.originalFirstChild) }, open: function (t) { var e; if (!(this.opened || this.opening || this.closed || this.closing || (e = this.onOpen()))) { var i = this.el; this.opening = !0, t = t || document.querySelector("body"), "BODY" !== t.tagName && (t.style.visibility = "visible"), t.appendChild(i), setTimeout(function () { i.classList.add("hypergrid-dialog-visible") }, 50), i.addEventListener("transitionend", this.hideAppBound = r.bind(this)) } return e }, close: function () { var t; if (this.opened && !this.closed && !this.closing && (t = this.onClose(), !t)) { var e = this.el; this.closing = !0, this.appVisible("visible"), e.classList.remove("hypergrid-dialog-visible"), e.addEventListener("transitionend", this.removeDialogBound = o.bind(this)) } return t }, appSelector: "canvas.hypergrid", appVisible: function (t) { h.each(this.appSelector, function (e) { e.style.visibility = t }) }, onOpen: n, onOpened: n, onClose: n, onClosed: n, terminate: n }); e.exports = d
    }, { "../../html": 2, "../../images": 4, "../Base": 49, "../lib/DOM/elfor": 111, automat: 5 }], 89: [function (t, e, i) { "use strict"; function n(t, e, i, n) { return (!n || "tableFilterPanel" === n.id) && o.call(this, this.filter.tableFilter, t) || (!n || "columnFiltersPanel" === n.id) && o.call(this, this.filter.columnFilters, t) } function o(t, e) { var i, n, o = t === this.filter.columnFilters, s = this.tabz.tab(o ? "#columnsQB" : "#tableQB"), a = this.tabz.enabledTab(s), l = this.tabz.folder(a), u = a === s, c = e || { alert: !0, focus: !0 }, h = { alert: c.alert, focus: c.focus && u }; if (o || u ? i = t.invalid(h) : (n = l.querySelector("textarea"), i = this.filter.setTableFilterState(n.value, e)), i && !u && o) { var d = i.node.el.parentElement.querySelector("input").value; n = l.querySelector('[name="' + d + '"]') } return n && r(n, i), i } function r(t, e) { t.classList.toggle("filter-tree-error", !!e), t.focus(); var i; do t = t.parentElement, i = t.querySelector(".filter-tree-warn"); while (!i); i.innerHTML = e.message || e || "" } function s(t) { if (o.call(this, this.filter.columnFilters)) t.preventDefault(); else { var e = t.target, i = e.options[0].text.replace("…", ""), n = this.filter.columnFilters.children.map(function (t) { return t.children.length && t.children[0].column }), r = { prompt: i, blacklist: n }; d.build(e, this.filter.root.schema, r) } } function a(t) { var e = t.target, i = this.tabz.folder("#tableQB"), n = this.tabz.enabledTab(i.parentElement), o = n === i, r = v[n.id]; for (this.filter.columnFilters.add({ state: { type: "columnFilter", children: [{ column: e.value }] }, focus: o }), r.isColumnFilter && r.lanugage && l.call(this, n), e.selectedIndex = 0; e.lastChild !== e.firstChild;) e.removeChild(e.lastChild) } function l(t) { var e = v[t.id], i = e.language; if (i) { var n = this.filter, o = this.tabz.folder(t); if (e.isTableFilter) o.querySelector("textarea").value = n.tableFilter.getState({ syntax: "SQL" }); else { var r = n.columnFilters.children, s = o.lastElementChild, a = s.querySelector("span"), l = s.querySelector("ol"), h = s.querySelector("a:first-of-type"); a.innerHTML = c(r.length), l.innerHTML = "", r.forEach(function (t) { var e = t.children[0], n = e.schema[0], o = e.column, r = n.alias || o, s = t.getState({ syntax: i }), a = "(NULL IS NULL)" === s || "" === s, u = a ? "" : s, c = a ? "filter-tree-error" : "", h = g.firstChild(p[i], r, o, u, c); l.appendChild(h) }), o.onkeyup = u.bind(this, i), h && (h.style.display = r.length > 1 ? "block" : "none") } } } function u(t, e) { var i = e.target; if (i.classList.contains("filter-text-box")) { var n, o = { syntax: t, alert: !0 }; try { n = this.filter.setColumnFilterState(i.name, i.value, o) } catch (s) { n = s } r(i, n) } } function c(t) { var e; switch (t) { case 0: e = "There are no active column filters."; break; case 1: e = "There is 1 active column filter:"; break; default: e = "There are " + t + " active column filters:" } return e } var h = t("tabz"), d = t("pop-menu"), g = t("automat"), f = t("./Dialog"), p = t("../../html"), m = t("../lib/DOM/copy-input"), v = { tableQB: { isTableFilter: !0 }, tableSQL: { isTableFilter: !0, language: "SQL" }, columnsQB: { isColumnFilter: !0 }, columnsSQL: { isColumnFilter: !0, language: "SQL" }, columnsCQL: { isColumnFilter: !0, language: "CQL" } }, b = f.extend("ManageFilters", { initialize: function (t, e) { this.filter = t.filter, this.append(p.filterTrees); var i = this.tabz = new h({ root: this.el, onEnable: l.bind(this), onDisable: n.bind(this, null) }), o = this.el.querySelector("#add-column-filter-subexpression"); o.onmousedown = s.bind(this), o.onchange = a.bind(this), i.folder("#tableQB").appendChild(this.filter.tableFilter.el), i.folder("#columnsQB").appendChild(this.filter.columnFilters.el); var r = i.folder("#columnsSQL"), u = i.folder("#tableSQL").firstElementChild.cloneNode(!0); r.insertBefore(u, r.firstChild), this.open(e.container), o.selectedIndex = 0 }, onClose: function () { return n.call(this) }, onClosed: function () { var t = this.grid.behavior; t.reindex(), t.changed() }, onClick: function (t) { var e = t.target; if (e.classList.contains("more-info")) for (var i = this.el.querySelectorAll(".more-info"), n = 0; n < i.length; ++n) { var o = i[n]; if ("A" === o.tagName) { var r = o === e; o.classList[r ? "toggle" : "remove"]("hide-info"), o = i[n + 1], o.style.display = r && "block" !== o.style.display ? "block" : "none" } } else { if (!e.classList.contains("filter-copy")) return !0; var s = e.childNodes.length; s ? (e = this.tabz.folder(e).querySelector(m.selectorTextControls), m(e, this.filter.columnFilters.getState({ syntax: "SQL" }))) : m(e.parentElement.querySelector(m.selectorTextControls)) } } }); e.exports = b }, { "../../html": 2, "../lib/DOM/copy-input": 109, "./Dialog": 88, automat: 5, "pop-menu": 44, tabz: 47 }], 90: [function (t, e, i) { "use strict"; e.exports.ColumnPicker = t("./ColumnPicker"), e.exports.ManageFilters = t("./ManageFilters") }, { "./ColumnPicker": 87, "./ManageFilters": 89 }], 91: [function (t, e, i) { "use strict"; var n = t("./Hypergrid"); n.images = t("../images"), n.behaviors = t("./behaviors"), n.dataModels = t("./dataModels"), n.features = t("./features"), n.analytics = t("./Shared.js").analytics, n.DataSourceBase = t("./dataSources").DataSourceBase, n.rectangular = t("rectangular"), (window.fin = window.fin || {}).Hypergrid = n, (window.datasaur = window.datasaur || {}).base = n.DataSourceBase }, { "../images": 4, "./Hypergrid": 50, "./Shared.js": 51, "./behaviors": 57, "./dataModels": 83, "./dataSources": 85, "./features": 108, rectangular: 45 }], 92: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("CellClick", { handleClick: function (t, e) { var i; e.gridCell.y >= t.behavior.getHeaderRowCount() && e.gridCell.x >= 0 && (i = t.cellClicked(e)), !i && this.next && this.next.handleClick(t, e) } }); e.exports = o }, { "./Feature": 101 }], 93: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = t("../cellEditors/CellEditor"), r = n.extend("CellEditing", { handleDoubleClick: function (t, e) { t.properties.editOnDoubleClick && e.isGridCell ? t.onEditorActivate(e) : this.next && this.next.handleDoubleClick(t, e) }, handleClick: function (t, e) { !t.properties.editOnDoubleClick && e.isGridCell ? t.onEditorActivate(e) : this.next && this.next.handleClick(t, e) }, handleKeyDown: function (t, e) { var i, n, r, s, a; if (t.properties.editOnKeydown && !t.cellEditor && ("F2" === (i = e.detail["char"]) || (n = 1 === i.length && !(e.detail.meta || e.detail.ctrl)) || (r = "DELETE" === i || "BACKSPACE" === i))) { if (s = t.selectionModel.getLastSelection()) { var l = new t.behavior.CellEvent(s.origin.x, s.origin.y + t.behavior.getHeaderRowCount()); a = t.onEditorActivate(l), a instanceof o && (n ? a.input.value = i : r && a.setEditorValue(""), e.detail.primitiveEvent.preventDefault()) } } else this.next && this.next.handleKeyDown(t, e) } }); e.exports = r }, { "../cellEditors/CellEditor": 58, "./Feature": 101 }], 94: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("CellSelection", { currentDrag: null, lastDragCell: null, sbLastAuto: 0, sbAutoStart: 0, handleMouseUp: function (t, e) { this.dragging && (this.dragging = !1), this.next && this.next.handleMouseUp(t, e) }, handleMouseDown: function (t, e) { var i = e.gridCell.x, n = e.dataCell.y, o = t.behavior.getCellProperty(e.dataCell.x, e.gridCell.y, "cellSelection"); if (o && e.isGridCell && !e.primitiveEvent.detail.isRightClick) { var r = t.newPoint(i, n), s = e.primitiveEvent, a = s.detail.keys; this.dragging = !0, this.extendSelection(t, r, a) } else this.next && this.next.handleMouseDown(t, e) }, handleMouseDrag: function (t, e) { this.dragging && t.isCellSelection() && !e.primitiveEvent.detail.isRightClick ? (this.currentDrag = e.primitiveEvent.detail.mouse, this.lastDragCell = t.newPoint(e.gridCell.x, e.dataCell.y), this.checkDragScroll(t, this.currentDrag), this.handleMouseDragCellSelection(t, this.lastDragCell, e.primitiveEvent.detail.keys)) : this.next && this.next.handleMouseDrag(t, e) }, handleKeyDown: function (t, e) { var i; (i = this["handle" + e.detail["char"]]) ? i.call(this, t, e.detail) : this.next && this.next.handleKeyDown(t, e) }, handleMouseDragCellSelection: function (t, e, i) { var n = Math.max(0, e.x), o = Math.max(0, e.y), r = t.getDragExtent(), s = t.getMouseDown(), a = n - s.x, l = o - s.y; r.x === a && r.y === l || (t.clearMostRecentSelection(), t.select(s.x, s.y, a, l), t.setDragExtent(t.newPoint(a, l)), t.repaint()) }, checkDragScroll: function (t, e) { if (t.properties.scrollingEnabled) { var i = t.getDataBounds(), n = i.contains(e); n ? t.isScrollingNow() && t.setScrollingNow(!1) : t.isScrollingNow() || (t.setScrollingNow(!0), this.scrollDrag(t)) } }, scrollDrag: function (t) { if (t.isScrollingNow()) { var e = t.isMouseDownInHeaderArea(), i = this.lastDragCell, n = t.getDataBounds(), o = 0, r = 0, s = t.getFixedColumnCount(), a = t.getFixedRowCount(), l = i.x < s, u = i.y < a; e || (this.currentDrag.x < n.origin.x && (o = -1), this.currentDrag.y < n.origin.y && (r = -1)), this.currentDrag.x > n.origin.x + n.extent.x && (o = 1), this.currentDrag.y > n.origin.y + n.extent.y && (r = 1); var c = o, h = r; l && (c = 0), u && (h = 0), this.lastDragCell = i.plusXY(c, h), t.scrollBy(o, r), this.handleMouseDragCellSelection(t, i, []), t.repaint(), setTimeout(this.scrollDrag.bind(this, t), 25) } }, extendSelection: function (t, e, i) { var n = i.indexOf("CTRL") >= 0, o = i.indexOf("SHIFT") >= 0, r = t.getMouseDown(), s = e.x, a = e.y; if (!(s < 0 || a < 0)) { if (n && s === r.x && a === r.y) return t.clearMostRecentSelection(), t.popMouseDown(), void t.repaint(); n || o || t.clearSelections(), o ? (t.clearMostRecentSelection(), t.select(r.x, r.y, s - r.x, a - r.y), t.setDragExtent(t.newPoint(s - r.x, a - r.y))) : (t.select(s, a, 0, 0), t.setMouseDown(t.newPoint(s, a)), t.setDragExtent(t.newPoint(0, 0))), t.repaint() } }, handleDOWNSHIFT: function (t) { this.moveShiftSelect(t, 0, 1) }, handleUPSHIFT: function (t) { this.moveShiftSelect(t, 0, -1) }, handleLEFTSHIFT: function (t) { this.moveShiftSelect(t, -1, 0) }, handleRIGHTSHIFT: function (t) { this.moveShiftSelect(t, 1, 0) }, handleDOWN: function (t, e) { e.primitiveEvent.preventDefault(); var i = this.getAutoScrollAcceleration(); this.moveSingleSelect(t, 0, i) }, handleUP: function (t, e) { e.primitiveEvent.preventDefault(); var i = this.getAutoScrollAcceleration(); this.moveSingleSelect(t, 0, -i) }, handleLEFT: function (t) { this.moveSingleSelect(t, -1, 0) }, handleRIGHT: function (t) { this.moveSingleSelect(t, 1, 0) }, getAutoScrollAcceleration: function () { var t = 1, e = this.getAutoScrollDuration() / 2e3; return t = Math.max(1, Math.floor(e * e * e * e)) }, setAutoScrollStartTime: function () { this.sbAutoStart = Date.now() }, pingAutoScroll: function () { var t = Date.now(); t - this.sbLastAuto > 500 && this.setAutoScrollStartTime(), this.sbLastAuto = Date.now() }, getAutoScrollDuration: function () { return Date.now() - this.sbLastAuto > 500 ? 0 : Date.now() - this.sbAutoStart }, moveShiftSelect: function (t, e, i) { var n = t.getColumnCount() - 1, o = t.getRowCount() - 1, r = t.renderer.visibleColumns.length - 1, s = t.renderer.visibleRows.length - 1, a = t.getMouseDown(), l = t.getDragExtent(), u = l.x + e, c = l.y + i; t.properties.scrollingEnabled || (n = Math.min(n, r), o = Math.min(o, s)), u = Math.min(n - a.x, Math.max(-a.x, u)), c = Math.min(o - a.y, Math.max(-a.y, c)), t.clearMostRecentSelection(), t.select(a.x, a.y, u, c), t.setDragExtent(t.newPoint(u, c)), t.insureModelColIsVisible(u + a.x, e) && this.pingAutoScroll(), t.insureModelRowIsVisible(c + a.y, i) && this.pingAutoScroll(), t.repaint() }, moveSingleSelect: function (t, e, i) { var n = t.getMouseDown().plus(t.getDragExtent()), o = n.x + e, r = n.y + i, s = t.getColumnCount() - 1, a = t.getRowCount() - 1, l = t.getVisibleColumnsCount() - 1, u = t.getVisibleRowsCount() - 1; t.properties.scrollingEnabled || (s = Math.min(s, l), a = Math.min(a, u)), o = Math.min(s, Math.max(0, o)), r = Math.min(a, Math.max(0, r)), t.clearSelections(), t.select(o, r, 0, 0), t.setMouseDown(t.newPoint(o, r)), t.setDragExtent(t.newPoint(0, 0)), t.selectCellAndScrollToMakeVisible(o, r), t.repaint() } }); e.exports = o }, { "./Feature": 101 }], 95: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("ColumnAutosizing", { handleDoubleClick: function (t, e) { var i = t.getHeaderRowCount(), n = e.gridCell; n.y <= i ? t.autosizeColumn(n.x) : this.next && this.next.handleDoubleClick(t, e) } }); e.exports = o }, { "./Feature": 101 }], 96: [function (t, e, i) { "use strict"; var n, o, r, s, a = t("./Feature"), l = "-webkit-grab", u = "-webkit-grabbing", c = 150, h = a.extend("ColumnMoving", { floaterAnimationQueue: [], columnDragAutoScrollingRight: !1, columnDragAutoScrollingLeft: !1, dragArmed: !1, dragging: !1, dragCol: -1, dragOffset: 0, initializeOn: function (t) { this.isFloatingNow = !1, this.initializeAnimationSupport(t), this.next && this.next.initializeOn(t) }, initializeAnimationSupport: function (t) { n || (n = document.createElement("canvas"), n.setAttribute("width", "0px"), n.setAttribute("height", "0px"), n.style.position = "fixed", document.body.appendChild(n), o = n.getContext("2d")), r || (r = document.createElement("canvas"), r.setAttribute("width", "0px"), r.setAttribute("height", "0px"), r.style.position = "fixed", document.body.appendChild(r), s = r.getContext("2d")) }, handleMouseDrag: function (t, e) { var i, n = e.gridCell, o = Math.abs(e.primitiveEvent.detail.dragstart.x - e.primitiveEvent.detail.mouse.x); return o < 10 || e.isColumnFixed ? void (this.next && this.next.handleMouseDrag(t, e)) : (e.isHeaderCell && this.dragArmed && !this.dragging ? (this.dragging = !0, this.dragCol = n.x, this.dragOffset = e.mousePoint.x, this.detachChain(), i = e.primitiveEvent.detail.mouse.x - this.dragOffset, this.createDragColumn(t, i, this.dragCol)) : this.next && this.next.handleMouseDrag(t, e), void (this.dragging && (i = e.primitiveEvent.detail.mouse.x - this.dragOffset, this.dragColumn(t, i)))) }, handleMouseDown: function (t, e) { t.behavior.isColumnReorderable() && !e.isColumnFixed && e.isHeaderCell && (this.dragArmed = !0, this.cursor = u, t.clearSelections()), this.next && this.next.handleMouseDown(t, e) }, handleMouseUp: function (t, e) { if (this.dragging) { this.cursor = null; var i = this; this.endDragColumn(t), setTimeout(function () { i.attachChain() }, 200) } this.dragCol = -1, this.dragging = !1, this.dragArmed = !1, this.cursor = null, t.repaint(), this.next && this.next.handleMouseUp(t, e) }, handleMouseMove: function (t, e) { t.behavior.isColumnReorderable() && !e.isColumnFixed && !this.dragging && e.isHeaderCell && e.mousePoint.y < t.properties.columnGrabMargin ? this.cursor = l : this.cursor = null, this.next && this.next.handleMouseMove(t, e), e.isHeaderCell && this.dragging && (this.cursor = u) }, floatColumnTo: function (t, e) { this.floatingNow = !0; var i, n, o = t.renderer.visibleColumns, r = t.getHScrollValue(), s = t.renderOverridesCache.floater.columnIndex, a = t.renderOverridesCache.dragger.columnIndex, l = t.renderOverridesCache.dragger.hdpiratio, u = t.getFixedColumnCount(), c = t.getColumnWidth(a), h = t.getColumnWidth(s), d = t.getVisibleColumnsCount(), g = 0, f = 0; a >= u && (g = r), s >= u && (f = r), e ? (i = o[Math.min(d, a - g)].left, n = o[Math.min(d, s - f)].left, t.renderOverridesCache.dragger.startX = (i + h) * l, t.renderOverridesCache.floater.startX = i * l) : (n = o[Math.min(d, s - f)].left, i = n + c, t.renderOverridesCache.dragger.startX = n * l, t.renderOverridesCache.floater.startX = i * l), t.swapColumns(a, s), t.renderOverridesCache.dragger.columnIndex = s, t.renderOverridesCache.floater.columnIndex = a, this.floaterAnimationQueue.unshift(this.doColumnMoveAnimation(t, n, i)), this.doFloaterAnimation(t) }, doColumnMoveAnimation: function (t, e, i) { var n = this; return function () { var o = r; o.style.display = "inline", n.setCrossBrowserProperty(o, "transform", "translate(" + e + "px, 0px)"), requestAnimationFrame(function () { n.setCrossBrowserProperty(o, "transition", (n.isWebkit ? "-webkit-" : "") + "transform " + c + "ms ease"), n.setCrossBrowserProperty(o, "transform", "translate(" + i + "px, " + -2 + "px)") }), t.repaint(), setTimeout(function () { n.setCrossBrowserProperty(o, "transition", ""), t.renderOverridesCache.floater = null, t.repaint(), n.doFloaterAnimation(t), requestAnimationFrame(function () { o.style.display = "none", n.isFloatingNow = !1 }) }, c + 50) } }, doFloaterAnimation: function (t) { if (0 === this.floaterAnimationQueue.length) return this.floatingNow = !1, void t.repaint(); var e = this.floaterAnimationQueue.pop(); e() }, createFloatColumn: function (t, e) { var i = t.getFixedColumnCount(), n = t.getHScrollValue(); e < i && (n = 0); var o = t.getColumnWidth(e), a = t.div.clientHeight, l = r, c = l.style, h = t.div.getBoundingClientRect(); c.top = h.top - 2 + "px", c.left = h.left + "px"; var d = t.getHiDPI(s); l.setAttribute("width", Math.round(o * d) + "px"), l.setAttribute("height", Math.round(a * d) + "px"), c.boxShadow = "0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)", c.width = o + "px", c.height = a + "px", c.borderTop = "1px solid " + t.properties.lineColor, c.backgroundColor = t.properties.backgroundColor; var g = t.renderer.visibleColumns[e - n].left * d; s.scale(d, d), t.renderOverridesCache.floater = { columnIndex: e, ctx: s, startX: g, width: o, height: a, hdpiratio: d }, c.zIndex = "4", this.setCrossBrowserProperty(l, "transform", "translate(" + g + "px, " + -2 + "px)"), c.cursor = u, t.repaint() }, setCrossBrowserProperty: function (t, e, i) { var n = e[0].toUpperCase() + e.substr(1); this.setProp(t, "webkit" + n, i), this.setProp(t, "Moz" + n, i), this.setProp(t, "ms" + n, i), this.setProp(t, "O" + n, i), this.setProp(t, e, i) }, setProp: function (t, e, i) { e in t.style && (t.style[e] = i) }, createDragColumn: function (t, e, i) { var r = t.getFixedColumnCount(), s = t.getHScrollValue(); i < r && (s = 0); var a = t.getHiDPI(o), l = t.getColumnWidth(i), c = t.div.clientHeight, h = n, d = t.div.getBoundingClientRect(), g = h.style; g.top = d.top + "px", g.left = d.left + "px", g.opacity = .85, g.boxShadow = "0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)", g.borderTop = "1px solid " + t.properties.lineColor, g.backgroundColor = t.properties.backgroundColor, h.setAttribute("width", Math.round(l * a) + "px"), h.setAttribute("height", Math.round(c * a) + "px"), g.width = l + "px", g.height = c + "px"; var f = t.renderer.visibleColumns[i - s].left * a; o.scale(a, a), t.renderOverridesCache.dragger = { columnIndex: i, startIndex: i, ctx: o, startX: f, width: l, height: c, hdpiratio: a }, this.setCrossBrowserProperty(h, "transform", "translate(" + e + "px, -5px)"), g.zIndex = "5", g.cursor = u, t.repaint() }, dragColumn: function (t, e) { var i = this, r = this.columnDragAutoScrollingRight || this.columnDragAutoScrollingLeft, s = t.getHiDPI(o), a = t.renderOverridesCache.dragger.columnIndex, l = 0, u = t.renderer.getFinalVisibleColumnBoundary(); e = Math.min(e, u + 15), e = Math.max(l - 15, e); var h = e < l && 0 !== a, d = e > u, g = n; this.setCrossBrowserProperty(g, "transition", (i.isWebkit ? "-webkit-" : "") + "transform 0ms ease, box-shadow " + c + "ms ease"), this.setCrossBrowserProperty(g, "transform", "translate(" + e + "px, " + -10 + "px)"), requestAnimationFrame(function () { g.style.display = "inline" }); var f = t.renderer.getColumnFromPixelX(e + g.width / 2 / s); h && (f = 0), d && (f = t.getColumnCount() - 1); var p = a > f; if (p = p || f - a >= 1, !p || d || r) { if (e < l - 10 && this.checkAutoScrollToLeft(t, e), e > l - 10 && (this.columnDragAutoScrollingLeft = !1), d || e > u + 10) return void this.checkAutoScrollToRight(t, e); e < u + 10 && (this.columnDragAutoScrollingRight = !1) } else { var m = a < f; if (this.isFloatingNow) return; this.isFloatingNow = !0, this.createFloatColumn(t, f), this.floatColumnTo(t, m) } }, checkAutoScrollToRight: function (t, e) { this.columnDragAutoScrollingRight || (this.columnDragAutoScrollingRight = !0, this._checkAutoScrollToRight(t, e)) }, _checkAutoScrollToRight: function (t, e) { if (this.columnDragAutoScrollingRight) { var i = t.getHScrollValue(); if (t.dragging && !(i > t.sbHScroller.range.max - 2)) { var n = t.renderOverridesCache.dragger.columnIndex; t.scrollBy(1, 0); var o = n + 1; t.swapColumns(o, n), t.renderOverridesCache.dragger.columnIndex = o, setTimeout(this._checkAutoScrollToRight.bind(this, t, e), 250) } } }, checkAutoScrollToLeft: function (t, e) { this.columnDragAutoScrollingLeft || (this.columnDragAutoScrollingLeft = !0, this._checkAutoScrollToLeft(t, e)) }, _checkAutoScrollToLeft: function (t, e) { if (this.columnDragAutoScrollingLeft) { var i = t.getHScrollValue(); if (t.dragging && !(i < 1)) { var n = t.renderOverridesCache.dragger.columnIndex; t.swapColumns(n + i, n + i - 1), t.scrollBy(-1, 0), setTimeout(this._checkAutoScrollToLeft.bind(this, t, e), 250) } } }, endDragColumn: function (t) { var e = t.getFixedColumnCount(), i = t.getHScrollValue(), o = t.renderOverridesCache.dragger.columnIndex; o < e && (i = 0); var r = this, s = t.renderer.visibleColumns[o - i].left, a = n, l = t.renderOverridesCache.dragger.startIndex !== t.renderOverridesCache.dragger.columnIndex; r.setCrossBrowserProperty(a, "transition", (r.isWebkit ? "-webkit-" : "") + "transform " + c + "ms ease, box-shadow " + c + "ms ease"), r.setCrossBrowserProperty(a, "transform", "translate(" + s + "px, " + -1 + "px)"), a.style.boxShadow = "0px 0px 0px #888888", setTimeout(function () { t.renderOverridesCache.dragger = null, t.repaint(), requestAnimationFrame(function () { a.style.display = "none", t.endDragColumnNotification(), l && t.fireSyntheticOnColumnsChangedEvent() }) }, c + 50) } }); e.exports = h }, { "./Feature": 101 }], 97: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("ColumnPicker", { handleKeyUp: function (t, e) { var i = e.detail["char"].toLowerCase(), n = t.properties.editorActivationKeys; n.indexOf(i) > -1 && t.toggleDialog("ColumnPicker") } }); e.exports = o }, { "./Feature": 101 }], 98: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("ColumnResizing", { dragIndex: -2, dragStart: -1, dragIndexStartingSize: -1, getMouseValue: function (t) { return t.primitiveEvent.detail.mouse.x }, getGridCellValue: function (t) { return t.y }, getScrollValue: function (t) { return t.getHScrollValue() }, getAreaSize: function (t, e) { return t.getColumnWidth(e) }, setAreaSize: function (t, e, i) { t.setColumnWidth(e, i) }, getPreviousAbsoluteSize: function (t, e) { return t.getRenderedWidth(e) }, overAreaDivider: function (t, e) { return t.overColumnDivider(e) }, isFirstFixedOtherArea: function (t, e) { return this.isFirstFixedRow(t, e) }, getCursorName: function () { return "col-resize" }, handleMouseDrag: function (t, e) { if (this.dragIndex > -2) { var i = this.getMouseValue(e), n = this.getScrollValue(t); this.dragIndex < this.getFixedAreaCount(t) && (n = 0); var o = this.getPreviousAbsoluteSize(t, this.dragIndex - n), r = i - o; this.setAreaSize(t, this.dragIndex, r) } else this.next && this.next.handleMouseDrag(t, e) }, getSize: function (t, e) { return this.getAreaSize(t, e) }, getOtherFixedAreaCount: function (t) { return t.getFixedRowCount() }, handleMouseDown: function (t, e) { var i = this.isEnabled(t), n = this.overAreaDivider(t, e); if (i && n > -1 && this.isFirstFixedOtherArea(t, e)) { var o = this.getScrollValue(t); n < this.getFixedAreaCount(t) && (o = 0), this.dragIndex = n - 1 + o, this.dragStart = this.getMouseValue(e), this.dragIndexStartingSize = 0, this.detachChain() } else this.next && this.next.handleMouseDown(t, e) }, handleMouseUp: function (t, e) { var i = this.isEnabled(t); if (i && this.dragIndex > -2) { this.cursor = null, this.dragIndex = -2, e.primitiveEvent.stopPropagation(); var n = this; t.synchronizeScrollingBoundaries(), setTimeout(function () { n.attachChain() }, 200) } else this.next && this.next.handleMouseUp(t, e) }, handleMouseMove: function (t, e) { this.dragIndex > -2 || (this.cursor = null, this.next && this.next.handleMouseMove(t, e), this.checkForAreaResizeCursorChange(t, e)) }, checkForAreaResizeCursorChange: function (t, e) { var i = this.isEnabled(t); i && this.overAreaDivider(t, e) > -1 && this.isFirstFixedOtherArea(t, e) ? this.cursor = this.getCursorName() : this.cursor = null }, getFixedAreaCount: function (t) { var e = t.getFixedColumnCount() + (t.isShowRowNumbers() ? 1 : 0) + (t.hasHierarchyColumn() ? 1 : 0); return e }, handleDoubleClick: function (t, e) { var i = this.isEnabled(t), n = this.overAreaDivider(t, e) > -1, o = t.getHeaderRowCount(), r = e.gridCell; i && n && r.y <= o ? t.autosizeColumn(r.x - 1) : this.next && this.next.handleDoubleClick(t, e) }, isEnabled: function (t) { return !0 } }); e.exports = o }, { "./Feature": 101 }], 99: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = 50, r = n.extend("ColumnSelection", { currentDrag: null, lastDragColumn: null, sbLastAuto: 0, sbAutoStart: 0, handleMouseUp: function (t, e) { this.dragging && (this.dragging = !1), this.next && this.next.handleMouseUp(t, e) }, handleDoubleClick: function (t, e) { this.doubleClickTimer && (clearTimeout(this.doubleClickTimer), this.doubleClickTimer = void 0), this.next && this.next.handleDoubleClick(t, e) }, handleMouseDown: function (t, e) { this.doubleClickTimer || (t.isColumnSelection() && e.mousePoint.y >= 5 && !e.primitiveEvent.detail.isRightClick && e.isHeaderCell ? this.doubleClickTimer = setTimeout(function () { this.doubleClickTimer = void 0, this.dragging = !0, this.extendSelection(t, e.gridCell.x, e.primitiveEvent.detail.keys) }.bind(this), t.properties.doubleClickDelay + o) : this.next && this.next.handleMouseDown(t, e)) }, handleMouseDrag: function (t, e) { t.isColumnSelection() && !this.isColumnDragging(t) && !e.primitiveEvent.detail.isRightClick && this.dragging ? (this.lastDragColumn = e.gridCell.x, this.currentDrag = e.primitiveEvent.detail.mouse, this.checkDragScroll(t, this.currentDrag), this.handleMouseDragCellSelection(t, this.lastDragColumn, e.primitiveEvent.detail.keys)) : this.next && this.next.handleMouseDrag(t, e) }, handleKeyDown: function (t, e) { var i; "column" === t.getLastSelectionType() && (i = this["handle" + e.detail["char"]]) ? i.call(this, t, e.detail) : this.next && this.next.handleKeyDown(t, e) }, handleMouseDragCellSelection: function (t, e, i) { var n = t.getMouseDown().x; t.clearMostRecentColumnSelection(), t.selectColumn(n, e), t.setDragExtent(t.newPoint(e - n, 0)), t.repaint() }, checkDragScroll: function (t, e) { t.properties.scrollingEnabled && t.getDataBounds().contains(e) ? t.isScrollingNow() && t.setScrollingNow(!1) : t.isScrollingNow() || (t.setScrollingNow(!0), this.scrollDrag(t)) }, scrollDrag: function (t) { if (t.isScrollingNow()) { var e, i = t.getDataBounds(); this.currentDrag.x < i.origin.x ? e = -1 : this.currentDrag.x > i.origin.x + i.extent.x && (e = 1), e && (this.lastDragColumn >= t.getFixedColumnCount() && (this.lastDragColumn += e), t.scrollBy(e, 0)), this.handleMouseDragCellSelection(t, this.lastDragColumn, []), t.repaint(), setTimeout(this.scrollDrag.bind(this, t), 25) } }, extendSelection: function (t, e, i) { if (t.abortEditing()) { var n = t.getMouseDown().x, o = i.indexOf("SHIFT") > 0; e < 0 || (o ? (t.clearMostRecentColumnSelection(), t.selectColumn(e, n), t.setDragExtent(t.newPoint(e - n, 0))) : (t.toggleSelectColumn(e, i), t.setMouseDown(t.newPoint(e, 0)), t.setDragExtent(t.newPoint(0, 0))), t.repaint()) } }, handleDOWNSHIFT: function (t) { }, handleUPSHIFT: function (t) { }, handleLEFTSHIFT: function (t) { this.moveShiftSelect(t, -1) }, handleRIGHTSHIFT: function (t) { this.moveShiftSelect(t, 1) }, handleDOWN: function (t) { }, handleUP: function (t) { }, handleLEFT: function (t) { this.moveSingleSelect(t, -1) }, handleRIGHT: function (t) { this.moveSingleSelect(t, 1) }, getAutoScrollAcceleration: function () { var t = this.getAutoScrollDuration() / 2e3; return Math.max(1, Math.floor(t * t * t * t)) }, setAutoScrollStartTime: function () { this.sbAutoStart = Date.now() }, pingAutoScroll: function () { var t = Date.now(); t - this.sbLastAuto > 500 && this.setAutoScrollStartTime(), this.sbLastAuto = Date.now() }, getAutoScrollDuration: function () { return Date.now() - this.sbLastAuto > 500 ? 0 : Date.now() - this.sbAutoStart }, moveShiftSelect: function (t, e) { var i = t.getMouseDown(), n = t.getDragExtent(), o = n.x + e, r = t.renderer.visibleColumns.length - 1, s = t.getColumnCount() - 1; t.properties.scrollingEnabled || (s = Math.min(s, r)), o = Math.min(s - i.x, Math.max(-i.x, o)), t.clearMostRecentColumnSelection(), t.selectColumn(i.x, i.x + o), t.setDragExtent(t.newPoint(o, 0)), t.insureModelColIsVisible(o + i.x, e) && this.pingAutoScroll(), t.repaint() }, moveSingleSelect: function (t, e) { var i = t.getDragExtent(), n = t.getMouseDown().plus(i), o = n.x + e, r = t.getColumnCount() - 1, s = t.getVisibleColumnsCount() - 1; t.properties.scrollingEnabled || (r = Math.min(r, s)), o = Math.min(r, Math.max(0, o)), t.clearSelections(), t.selectColumn(o), t.setMouseDown(t.newPoint(o, 0)), t.setDragExtent(t.newPoint(0, 0)), t.insureModelColIsVisible(o, e) && this.pingAutoScroll(), t.repaint() }, isColumnDragging: function (t) { var e = t.lookupFeature("ColumnMoving"); return e && e.dragging && !this.dragging } }); e.exports = r }, { "./Feature": 101 }], 100: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("ColumnSorting", { handleDoubleClick: function (t, e) { var i; e.isHeaderCell && (i = t.behavior.getColumnProperties(e.gridCell.x)) && !i.unsortable ? t.fireSyntheticColumnSortEvent(e.gridCell.x, e.primitiveEvent.detail.keys) : this.next && this.next.handleDoubleClick(t, e) }, handleMouseMove: function (t, e) { var i; e.isRowFixed && e.isHeaderCell && (i = t.behavior.getColumnProperties(e.gridCell.x)) && !i.unsortable ? this.cursor = "pointer" : this.cursor = null, this.next && this.next.handleMouseMove(t, e) } }); e.exports = o }, { "./Feature": 101 }], 101: [function (t, e, i) { "use strict"; var n = t("../Base"), o = {}, r = n.extend("Feature", { next: null, detached: null, cursor: null, currentHoverCell: null, setNext: function (t) { this.next ? this.next.setNext(t) : (this.next = t, this.detached = t) }, detachChain: function () { this.next = null }, attachChain: function () { this.next = this.detached }, handleMouseMove: function (t, e) { this.next && this.next.handleMouseMove(t, e) }, handleMouseExit: function (t, e) { this.next && this.next.handleMouseExit(t, e) }, handleMouseEnter: function (t, e) { this.next && this.next.handleMouseEnter(t, e) }, handleMouseDown: function (t, e) { this.next && this.next.handleMouseDown(t, e) }, handleMouseUp: function (t, e) { this.next && this.next.handleMouseUp(t, e) }, handleKeyDown: function (t, e) { this.next && this.next.handleKeyDown(t, e) }, handleKeyUp: function (t, e) { this.next && this.next.handleKeyUp(t, e) }, handleWheelMoved: function (t, e) { this.next && this.next.handleWheelMoved(t, e) }, handleDoubleClick: function (t, e) { this.next && this.next.handleDoubleClick(t, e) }, handleClick: function (t, e) { this.next && this.next.handleClick(t, e) }, handleMouseDrag: function (t, e) { this.next && this.next.handleMouseDrag(t, e) }, handleContextMenu: function (t, e) { this.next && this.next.handleContextMenu(t, e) }, moveSingleSelect: function (t, e, i) { this.next && this.next.moveSingleSelect(t, e, i) }, isFixedRow: function (t, e) { return o.isFixedRow || (o.isFixedRow = !0, console.warn("isFixedRow(grid, event) has been deprecated as of v1.2.0 in favor of event.isRowFixed and will be removed in a future version.")), e.isRowFixed }, isFirstFixedRow: function (t, e) { return e.gridCell.y < 1 }, isFixedColumn: function (t, e) { return o.isFixedColumn || (o.isFixedColumn = !0, console.warn("isFixedColumn(grid, event) has been deprecated as of v1.2.0 in favor of event.isColumnFixed and will be removed in a future version.")), e.isColumnFixed }, isFirstFixedColumn: function (t, e) { return 0 === e.gridCell.x }, isTopLeft: function (t, e) { return o.isTopLeft || (o.isTopLeft = !0, console.warn("isTopLeft(grid, event) has been deprecated as of v1.2.0 in favor of event.isCellFixed and will be removed in a future version.")), e.isCellFixed }, setCursor: function (t) { this.next && this.next.setCursor(t), this.cursor && t.beCursor(this.cursor) }, initializeOn: function (t) { this.next && this.next.initializeOn(t) } }); e.exports = r }, { "../Base": 49 }], 102: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("Filters", { handleDoubleClick: function (t, e) { e.isFilterCell ? t.onEditorActivate(e) : this.next && this.next.handleDoubleClick(t, e) }, handleClick: function (t, e) { e.isFilterCell ? t.onEditorActivate(e) : this.next && this.next.handleClick(t, e) } }); e.exports = o }, { "./Feature": 101 }], 103: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = { PAGEDOWN: function (t) { t.pageDown() }, PAGEUP: function (t) { t.pageUp() }, PAGELEFT: function (t) { t.pageLeft() }, PAGERIGHT: function (t) { t.pageRight() } }, r = n.extend("KeyPaging", { handleKeyDown: function (t, e) { var i = o[e.detail["char"]]; i ? i(t) : this.next && this.next.handleKeyDown(t, e) } }); e.exports = r }, {
        "./Feature": 101
    }], 104: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("OnHover", { handleMouseMove: function (t, e) { var i = t.hoverCell; e.gridCell.equals(i) ? this.next && this.next.handleMouseMove(t, e) : (i && this.handleMouseExit(t, i), this.handleMouseEnter(t, e), t.setHoverCell(e.gridCell)) } }); e.exports = o }, { "./Feature": 101 }], 105: [function (t, e, i) { "use strict"; var n = t("./ColumnResizing"), o = n.extend("RowResizing", { dragArea: -1, dragStart: -1, dragAreaStartingSize: -1, getMouseValue: function (t) { return t.primitiveEvent.detail.mouse.y }, getGridCellValue: function (t) { return t.x }, getScrollValue: function (t) { return t.getVScrollValue() }, getAreaSize: function (t, e) { return t.getRowHeight(e) }, setAreaSize: function (t, e, i) { t.setRowHeight(e, i) }, overAreaDivider: function (t, e) { return t.overRowDivider(e) }, isFirstFixedOtherArea: function (t, e) { return this.isFirstFixedColumn(t, e) }, getCursorName: function () { return "row-resize" }, getPreviousAbsoluteSize: function (t, e) { return t.getRenderedHeight(e) }, getOtherFixedAreaCount: function (t) { return t.getFixedColumnCount() }, getFixedAreaCount: function (t) { return t.getFixedRowCount() + t.getHeaderRowCount() }, isEnabled: function (t) { return t.isRowResizeable() } }); e.exports = o }, { "./ColumnResizing": 98 }], 106: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("RowSelection", { currentDrag: null, lastDragCell: null, sbLastAuto: 0, sbAutoStart: 0, dragArmed: !1, handleMouseUp: function (t, e) { this.dragArmed ? (this.dragArmed = !1, t.fireSyntheticRowSelectionChangedEvent()) : this.dragging ? (this.dragging = !1, t.fireSyntheticRowSelectionChangedEvent()) : this.next && this.next.handleMouseUp(t, e) }, handleMouseDown: function (t, e) { var i = t.isRowSelection() && !e.primitiveEvent.detail.isRightClick && t.isShowRowNumbers() && e.isHandleColumn; i && e.isHeaderHandle ? t.toggleSelectAllRows() : i && e.isGridRow ? (this.dragArmed = !0, this.extendSelection(t, e.dataCell.y, e.primitiveEvent.detail.keys)) : this.next && this.next.handleMouseDown(t, e) }, handleMouseDrag: function (t, e) { this.dragArmed && t.isRowSelection() && !e.primitiveEvent.detail.isRightClick ? (this.lastDragRow = e.dataCell.y, this.dragging = !0, this.currentDrag = e.primitiveEvent.detail.mouse, this.checkDragScroll(t, this.currentDrag), this.handleMouseDragCellSelection(t, this.lastDragRow, e.primitiveEvent.detail.keys)) : this.next && this.next.handleMouseDrag(t, e) }, handleKeyDown: function (t, e) { var i; "row" === t.getLastSelectionType() && (i = this["handle" + e.detail["char"]]) ? i.call(this, t, e.detail) : this.next && this.next.handleKeyDown(t, e) }, handleMouseDragCellSelection: function (t, e, i) { var n = t.getMouseDown().y; t.clearMostRecentRowSelection(), t.selectRow(n, e), t.setDragExtent(t.newPoint(0, e - n)), t.repaint() }, checkDragScroll: function (t, e) { t.properties.scrollingEnabled && t.getDataBounds().contains(e) ? t.isScrollingNow() && t.setScrollingNow(!1) : t.isScrollingNow() || (t.setScrollingNow(!0), this.scrollDrag(t)) }, scrollDrag: function (t) { if (t.isScrollingNow()) { var e, i = t.getDataBounds(); this.currentDrag.y < i.origin.y ? e = -1 : this.currentDrag.y > i.origin.y + i.extent.y && (e = 1), e && (this.lastDragRow >= t.getFixedRowCount() && (this.lastDragRow += e), t.scrollBy(0, e)), this.handleMouseDragCellSelection(t, this.lastDragRow, []), t.repaint(), setTimeout(this.scrollDrag.bind(this, t), 25) } }, extendSelection: function (t, e, i) { if (t.abortEditing()) { var n = t.getMouseDown().y, o = i.indexOf("SHIFT") > 0; e < 0 || (o ? (t.clearMostRecentRowSelection(), t.selectRow(e, n), t.setDragExtent(t.newPoint(0, e - n))) : (t.toggleSelectRow(e, i), t.setMouseDown(t.newPoint(0, e)), t.setDragExtent(t.newPoint(0, 0))), t.repaint()) } }, handleDOWNSHIFT: function (t) { this.moveShiftSelect(t, 1) }, handleUPSHIFT: function (t) { this.moveShiftSelect(t, -1) }, handleLEFTSHIFT: function (t) { }, handleRIGHTSHIFT: function (t) { }, handleDOWN: function (t) { this.moveSingleSelect(t, 1) }, handleUP: function (t) { this.moveSingleSelect(t, -1) }, handleLEFT: function (t) { }, handleRIGHT: function (t) { var e = t.getMouseDown().plus(t.getDragExtent()), i = t.getColumnCount() - 1, n = t.getHScrollValue(), o = e.y; n = Math.min(i, n), t.clearSelections(), t.select(n, o, 0, 0), t.setMouseDown(t.newPoint(n, o)), t.setDragExtent(t.newPoint(0, 0)), t.repaint() }, getAutoScrollAcceleration: function () { var t = 1, e = this.getAutoScrollDuration() / 2e3; return t = Math.max(1, Math.floor(e * e * e * e)) }, setAutoScrollStartTime: function () { this.sbAutoStart = Date.now() }, pingAutoScroll: function () { var t = Date.now(); t - this.sbLastAuto > 500 && this.setAutoScrollStartTime(), this.sbLastAuto = Date.now() }, getAutoScrollDuration: function () { return Date.now() - this.sbLastAuto > 500 ? 0 : Date.now() - this.sbAutoStart }, moveShiftSelect: function (t, e) { var i = t.getMouseDown(), n = t.getDragExtent(), o = t.renderer.visibleRows.length - 1, r = t.getRowCount() - 1; t.properties.scrollingEnabled || (r = Math.min(r, o)); var s = n.y + e; s = Math.min(r - i.y, Math.max(-i.y, s)), t.clearMostRecentRowSelection(), t.selectRow(i.y, i.y + s), t.setDragExtent(t.newPoint(0, s)), t.insureModelRowIsVisible(s + i.y, e) && this.pingAutoScroll(), t.fireSyntheticRowSelectionChangedEvent(), t.repaint() }, moveSingleSelect: function (t, e) { var i = t.getRowCount() - 1, n = t.getVisibleRowsCount() - 1, o = t.getMouseDown().plus(t.getDragExtent()), r = o.y + e; t.properties.scrollingEnabled || (i = Math.min(i, n)), r = Math.min(i, Math.max(0, r)), t.clearSelections(), t.selectRow(r), t.setMouseDown(t.newPoint(0, r)), t.setDragExtent(t.newPoint(0, 0)), t.insureModelRowIsVisible(r, e) && this.pingAutoScroll(), t.fireSyntheticRowSelectionChangedEvent(), t.repaint() }, isSingleRowSelection: function () { return !0 } }); e.exports = o }, { "./Feature": 101 }], 107: [function (t, e, i) { "use strict"; var n = t("./Feature"), o = n.extend("ThumbwheelScrolling", { handleWheelMoved: function (t, e) { if (t.properties.scrollingEnabled) { var i = e.primitiveEvent, n = Math.sign(i.wheelDeltaX || -i.deltaX), o = Math.sign(i.wheelDeltaY || -i.deltaY); (n || o) && t.scrollBy(-n || 0, -o || 0) } } }); e.exports = o }, { "./Feature": 101 }], 108: [function (t, e, i) { "use strict"; e.exports = { Feature: t("./Feature"), CellClick: t("./CellClick"), CellEditing: t("./CellEditing"), CellSelection: t("./CellSelection"), ColumnAutosizing: t("./ColumnAutosizing"), ColumnMoving: t("./ColumnMoving"), ColumnResizing: t("./ColumnResizing"), ColumnSelection: t("./ColumnSelection"), ColumnSorting: t("./ColumnSorting"), Filters: t("./Filters"), KeyPaging: t("./KeyPaging"), OnHover: t("./OnHover"), ColumnPicker: t("./ColumnPicker"), RowResizing: t("./RowResizing"), RowSelection: t("./RowSelection"), ThumbwheelScrolling: t("./ThumbwheelScrolling") } }, { "./CellClick": 92, "./CellEditing": 93, "./CellSelection": 94, "./ColumnAutosizing": 95, "./ColumnMoving": 96, "./ColumnPicker": 97, "./ColumnResizing": 98, "./ColumnSelection": 99, "./ColumnSorting": 100, "./Feature": 101, "./Filters": 102, "./KeyPaging": 103, "./OnHover": 104, "./RowResizing": 105, "./RowSelection": 106, "./ThumbwheelScrolling": 107 }], 109: [function (t, e, i) { "use strict"; function n(t, e, i, s, a) { var l, u, c = []; Array.prototype.forEach.call((t || document).querySelectorAll(n.selector), function (t) { u = (a || r)(t.value), u && c.push(u), l = t }), l && o(l, (e || "") + c.join(i || "") + (s || "")) } function o(t, e) { var i, n; e ? (n = t.value, t.value = e) : e = t.value, t.value = r(e); try { t.select(), i = document.execCommand("copy") } catch (o) { i = !1 } finally { void 0 !== n && (t.value = n), t.blur() } return i } function r(t) { return t.replace(/^\s*(.*?)\s*$/, "$1") } o.all = n, o.multiLineTrim = r, o.selectorTextControls = "input:not([type]), input[type=text], textarea", e.exports = o }, {}], 110: [function (t, e, i) { "use strict"; i.shaker = function (t) { function e(o) { o && "left" !== o.propertyName || (n.style.left = l + u + "px", c-- || (n.removeEventListener("transitionend", e), s.pop(), n.style.transition = s.join(","), n.style.position = a, t.callback && t.callback.call(i, t)), u = c ? -u : 0) } t = t || {}; var i = this, n = t.el || i.el, o = t.duration || "0.065s", r = window.getComputedStyle(n), s = r.transition.split(","), a = r.position, l = parseInt(r.left), u = -3, c = 6; s.push("left " + o), n.style.transition = s.join(","), n.addEventListener("transitionend", e), e() }; var n = { "background-color": "yellow", "box-shadow": "0 0 10px red" }; i.glower = function (t) { function e(n) { var r = u[n.propertyName]; r.undo ? (o.style[n.propertyName] = r.style, r.undo = !1) : --a || (o.removeEventListener("transitionend", e), o.style.transition = c, t.callback && t.callback.call(i, t)) } t = t || {}; var i = this, o = t.el || i.el, r = t.duration || "0.25s", s = t.styles || n, a = s.length, l = window.getComputedStyle(o), u = {}, c = l.transition, h = c.split(","); Object.keys(s).forEach(function (t) { u[t] = { style: l[t], undo: !0 }, h.push(t + " " + r) }), o.style.transition = h.join(","), o.addEventListener("transitionend", e), Object.keys(s).forEach(function (t) { o.style[t] = s[t] }) } }, {}], 111: [function (t, e, i) { "use strict"; e.exports.each = function (t, e, i) { return Array.prototype.forEach.call((i || document).querySelectorAll(t), e) }, e.exports.find = function (t, e, i) { return Array.prototype.find.call((i || document).querySelectorAll(t), e) } }, {}], 112: [function (t, e, i) { "use strict"; function n(t, e) { this.element = t, this.context = e, this.transitioning = !1 } n.prototype.begin = function (t) { var e = this; this.transitioning = !0, this.element.addEventListener("transitionend", function i(n) { e.element.removeEventListener("transitionend", i), t && t.call(this, n, e), e.transitioning = !1 }) }, e.exports = n }, {}], 113: [function (t, e, i) { "use strict"; function n(t) { var e = this.map.indexOf(t) % 11; return e < 0 ? "" : e < 10 ? e : "." } function o(t) { return this.localizedDigits[t] } function r(t) { var e = this.localizedDigits.indexOf(t); return e < 0 && (e = ""), e } function s(t, e, i) { this.locale = t, this["int"] = this["float"] = this.construct("number", c, e), this.construct("date", h, i) } var a = t("../Base"), l = t("./deprecated"), u = a.extend({ initialize: function (t, e, i) { "object" == typeof e && (i = e, e = t), this.locale = e, i && ("function" == typeof i.invalid && (this.invalid = i.invalid), i.expectation && (this.expectation = i.expectation)) } }); window.Intl || (window.Intl = { NumberFormat: function (t, e) { var i = "0123456789"; this.format = function (t) { var n = t.toString(); if (!e || void 0 === e.useGrouping || e.useGrouping) { var o = n.indexOf("."); for (o < 0 && (o = n.length) ; (o -= 3) > 0 && i.indexOf(n[o - 1]) >= 0;) n = n.substr(0, o) + "," + n.substr(o) } return n } }, DateTimeFormat: function (t, e) { this.format = function (t) { return null != t ? ("object" != typeof t && (t = new Date(t)), t = t.getMonth() + 1 + "-" + t.getDate() + "-" + t.getFullYear()) : t = null, t } } }); var c = u.extend("NumberFormatter", { initialize: function (t, e, i) { "object" == typeof e && (i = e), i = i || {}, this.format = new Intl.NumberFormat(this.locale, i).format; var o = { useGrouping: !1 }, r = new Intl.NumberFormat(this.locale, o).format; this.demapper = n.bind(this), this.map = r(10123456789.5).substr(1, 11), i.acceptStandardDigits && "0123456789." !== this.map && (this.map += "0123456789."), this.invalids = new RegExp("[^" + this.format(11111).replace(this.map[1], "") + this.map + "]") }, invalid: function (t) { return this.invalids.test(t) }, expectation: "Expected a number with optional commas (thousands grouping separator), optional decimal point, and an optional fractional part.\nComma separators are part of the format and will always be displayed for values >= 1000.\nEdited values are always saved in their entirety even though the formatted value is rounded to the specified number of decimal places.", parse: function (t) { var e = Number(t.split("").map(this.demapper).join("")); if (isNaN(e)) throw "Invalid Number"; return e } }), h = u.extend("DateFormatter", { initialize: function (t, e, i) { "object" == typeof e && (i = e), i = i || {}, this.format = new Intl.DateTimeFormat(this.locale, i).format; var n = { useGrouping: !1, style: "decimal" }, s = new Intl.NumberFormat(this.locale, n).format, a = this.localizedDigits = s(10123456789).substr(1, 10); this.digitFormatter = o.bind(this), this.digitParser = r.bind(this); var l = 1987, u = 12, c = 30, h = this.transformNumber(this.digitFormatter, l), d = this.transformNumber(this.digitFormatter, u), g = this.transformNumber(this.digitFormatter, c), f = new Date(l, u - 1, c), p = new Intl.DateTimeFormat(this.locale).format, m = p(f), v = new Intl.NumberFormat(this.locale).format(456), b = this.localizedNumberPattern = new RegExp("[" + a + "]+", "g"), C = m.match(b); this.partsMap = { yy: C.indexOf(h), mm: C.indexOf(d), dd: C.indexOf(g) }, i.acceptStandardDigits && (v += "1234567890"), this.invalids = new RegExp("[^" + m.replace(/-/g, "\\-") + v + "]") }, invalid: function (t) { return this.invalids.test(t) }, parse: function (t) { var e, i = t.match(this.localizedNumberPattern); if (!i || 3 !== i.length) throw "Invalid Date"; var n = this.transformNumber(this.digitParser, i[this.partsMap.yy]), o = this.transformNumber(this.digitParser, i[this.partsMap.mm]) - 1, r = this.transformNumber(this.digitParser, i[this.partsMap.dd]); return e = new Date(n, o, r) }, transformNumber: function (t, e) { return e.toString().split("").map(t).join("") } }); s.prototype = { constructor: s.prototype.constructor, construct: function (t, e, i) { var n = t[0].toUpperCase() + t.substr(1).toLowerCase() + "Formatter", o = e.bind(null, this.locale), r = new o(i); return this[n] = o, this.add(t, r) }, add: function (t, e) { if ("object" == typeof t && (e = t, t = void 0), "object" != typeof e || "function" != typeof e.format || "function" != typeof e.parse || e.invalid && "function" != typeof e.invalid || e.expectation && "string" != typeof e.expectation) throw "Expected localizer object to conform to interface."; return t = t || e.name, t = t && t.toLowerCase(), this[t] = e, e }, deprecated: l, set: function (t) { return this.deprecated("set(name, localizer)", "add(name, localizer)", "1.0.6", arguments) }, get: function (t) { return this[t && t.toLowerCase()] || this.string }, chromeDate: { format: function (t) { if (null != t) { "object" != typeof t && (t = new Date(t)); var e = t.getFullYear(), i = t.getMonth() + 1, n = i < 10 ? "0" + i : i, o = t.getDate(), r = o < 10 ? "0" + o : o; t = e + "-" + n + "-" + r } else t = null; return t }, parse: function (t) { var e, i = t.split("-"); return e = i && 3 === i.length ? new Date(i[0], i[1] - 1, i[2]) : null } }, "null": { format: function (t) { return t }, parse: function (t) { return t } }, string: { format: function (t) { return t + "" }, parse: function (t) { return t + "" } } }, e.exports = s }, { "../Base": 49, "./deprecated": 117 }], 114: [function (t, e, i) { "use strict"; function n(t, e, i) { var n = e.getColumnProperties(-1), o = n.rowHeader, r = a.checked; t.font = o.font, n.preferredWidth = r.width + 7 + o.getTextWidth(t, i + 1) } function o(t, e) { u[t] || (u[t] = !0, console.warn(e)) } var r = t("object-iterators"), s = t("../Base"), a = t("../../images"), l = s.extend("Renderer", { cell: { x: 0, y: 0, width: 0, height: 0 }, scrollHeight: 0, viewHeight: 0, reset: function () { this.bounds = { width: 0, height: 0 }, this.renderedColumnMinWidths = [], this.visibleColumns = [], this.visibleRows = [], this.insertionBounds = [] }, initialize: function (t) { this.grid = t, this.reset() }, computeCellsBounds: function () { var t, e, i, n, o, r, s, a, l, u, c, h, d, g, f, p, m, v, b, C, w, y, x, S, E, A, R, D, M, k, P, T, F = this.getScrollTop(), H = this.getScrollLeft(), O = this.getFixedColumnCount(), I = this.getFixedRowCount(), B = this.getRowCount(), N = this.getBounds(), V = this.grid, L = V.behavior, j = V.cellEditor && V.cellEditor.event, z = j && j.gridCell.x, _ = j && j.dataCell.y, G = 0, U = 0, W = V.properties.lineWidth, K = this.grid.isShowRowNumbers() ? -1 : 0, Q = L.subgrids; for (this.scrollHeight = 0, this.visibleColumns.length = 0, this.visibleRows.length = 0, this.visibleColumnsByIndex = [], this.visibleRowsByDataRowIndex = {}, this.insertionBounds = [], i = 0, s = K, a = this.getColumnCount(), n = N.width || V.canvas.width; s < a && i <= n && (b = s, s >= O && (A = b += H, void 0 === E && (E = A)), !(b >= a)) ; s++) x = V.getColumnWidth(b), k = i ? i + W : i, P = i ? x - W : x, this.visibleColumns[s] = this.visibleColumnsByIndex[b] = y = { index: s, columnIndex: b, left: k, width: P, right: k + P }, z === b && (t = y), i += x, G += Math.round(x / 2) + U, this.insertionBounds.push(G), U = Math.round(x / 2); for (v = V.properties.defaultRowHeight * Q.reduce(function (t, e) { return m ? t += e.getRowCount() : m = !e.type, t }, 0), g = c = l = o = 0, u = Q.length, r = N.height - v; l < u; l++, g += d) { for (f = Q[l], d = f.getRowCount(), m = !f.type, M = c, h = Math.min(B, c + d) ; c < h && o < r && (C = c, !(m && c >= I && (C += F, D = C - g, void 0 === R && (R = D), C >= h))) ; c++) p = C - g, S = L.getRowHeight(p, f), T = S - W, this.visibleRows[c] = w = { index: c, subgrid: f, rowIndex: p, top: o, height: T, bottom: o + T }, m && (this.visibleRowsByDataRowIndex[C - g] = w, _ === p && (e = w)), o += S; m && (d = c - M, r += v) } j && (j.visibleColumn = t, j.visibleRow = e, j.gridCell.y = e && e.index, j._bounds = null), this.viewHeight = r, this.dataWindow = this.grid.newRectangle(E, R, A - E, D - R) }, resolveProperty: function (t) { return this.grid.properties[t] }, paint: function (t) { if (this.grid) if (this.hasData()) this.renderGrid(t), this.grid.gridRenderedNotification(); else { var e = this.grid.properties.noDataMessage; t.font = "20px Arial", t.fillText(e, 20, 30) } }, hasData: function () { var t = this.grid.behavior.getData(); return !!t && t.length > 0 }, getVisibleRowsCount: function () { return this.visibleRows.length - 1 }, getVisibleScrollHeight: function () { return this.viewHeight - this.grid.getFixedRowsHeight() }, getVisibleRows: function () { return o("getVisibleRows", "The getVisibleRows() method has been deprecated as of v1.2.0 and will be removed in a future version. Previously returned the this.visibleRows array but because this.visibleRows is no longer a simple array of integers but is now an array of objects, it now returns an array mapped to this.visibleRows[*].rowIndex. Note however that this mapping is not equivalent to what this method previously returned because while each object's .rowIndex property is still adjusted for scrolling within the data subgrid, the index is now local to (zero-based within) each subgrid"), this.visibleRows.map(function (t) { return t.rowIndex }) }, getVisibleColumnsCount: function () { return this.visibleColumns.length - 1 }, getVisibleColumns: function () { return o("visibleColumns", "The getVisibleColumns() method has been deprecated as of v1.2.0 and will be removed in a future version. Previously returned the this.visibleColumns but because this.visibleColumns is no longer a simple array of integers but is now an array of objects, it now returns an array mapped to the equivalent visibleColumns[*].columnIndex."), this.visibleColumns.map(function (t) { return t.columnIndex }) }, overColumnDivider: function (t) { for (var e = this.visibleColumns, i = Math.round(t), n = i - 3, o = i + 1, r = (-1 in e ? -1 : 0), s = e.length; r < s; ++r) if (t = e[r].right, n <= t && t <= o) return r + 1; return -1 }, overRowDivider: function (t) { for (var e = this.visibleRows, i = Math.round(t), n = i - 3, o = i + 1, r = 0, s = e.length; r < s; ++r) if (t = e[r].bottom, n <= t && t <= o) return r + 1; return -1 }, getBoundsOfCell: function (t, e) { var i = this.visibleColumns[t], n = this.visibleRows[e]; return { x: i.left, y: n.top, width: i.width, height: n.height } }, getColumnFromPixelX: function (t) { for (var e = 0, i = this.getFixedColumnCount(), n = this.grid.getHScrollValue(), o = this.visibleColumns, r = 1; r < o.length - 1; r++) if (e = o[r].left - (o[r].left - o[r - 1].left) / 2, t < e) return r > i && (r += n), r - 1; return r > i && (r += n), r - 1 }, getGridCellFromMousePoint: function (t) { var e = t.x, i = t.y, n = this.visibleRows, o = this.visibleColumns, r = o[this.grid.isShowRowNumbers() ? -1 : 0], s = e < r.right, a = s ? r : o.find(function (t) { return e < t.right }) || o[o.length - 1], l = n.find(function (t) { return i < t.bottom }) || n[n.length - 1], u = this.grid.newPoint(e - a.left, i - l.top), c = new this.grid.behavior.CellEvent(a.columnIndex, l.index); return Object.defineProperty(c, "mousePoint", { value: u }) }, isColumnVisible: function (t) { return !!this.visibleColumns.find(function (e) { return e.columnIndex === t }) }, getFinalVisibleColumnBoundary: function () { var t = this.isLastColumnVisible() ? 2 : 1, e = this.visibleColumns[this.visibleColumns.length - t].right; return Math.min(e, this.getBounds().width) }, isRowVisible: function (t) { return !!this.visibleRows[t] }, isSelected: function (t, e) { return this.grid.isSelected(t, e) }, renderGrid: function (t) { t.beginPath(), this.paintCells(t), this.renderOverrides(t), this.renderLastSelection(t), t.closePath() }, renderLastSelection: function (t) { t.beginPath(), this._renderLastSelection(t), t.closePath() }, _renderLastSelection: function (t) { var e = this.grid.selectionModel.getSelections(); if (e && 0 !== e.length) { var i = this.grid.selectionModel.getLastSelection(); if (i.origin.x !== -1) { var n = this.visibleColumnsByIndex, o = this.visibleRowsByDataRowIndex, r = this.visibleColumns[this.visibleColumns.length - 1], s = o[this.dataWindow.corner.y]; if (!(!r || !s || i.origin.x > r.columnIndex || i.origin.y > s.rowIndex)) { var a = n[i.origin.x], l = n[i.corner.x], u = o[i.origin.y], c = o[i.corner.y]; if ((a || l) && (u || c)) { var h = this.grid.properties; a = a || r, l = l || i.corner.x > r.columnIndex ? r.columnIndex : n[h.fixedColumnCount - 1], u = u || s, c = c || i.corner.y > s.rowIndex ? s.rowIndex : o[h.fixedRowCount - 1]; var d = { bounds: { x: a.left, y: u.top, width: l.right - a.left, height: c.bottom - u.top }, selectionRegionOverlayColor: this.grid.properties.selectionRegionOverlayColor, selectionRegionOutlineColor: this.grid.properties.selectionRegionOutlineColor }; this.grid.cellRenderers.get("lastselection").paint(t, d) } } } } }, renderOverrides: function (t) { var e = this.grid.renderOverridesCache; for (var i in e) if (e.hasOwnProperty(i)) { var n = e[i]; n && this.renderOverride(t, n) } }, renderOverride: function (t, e) { var i = e.hdpiratio, n = e.startX, o = e.width + 1, r = e.height, s = e.ctx, a = t.getImageData(n, 0, Math.round(o * i), Math.round(r * i)); s.putImageData(a, 0, 0), t.fillStyle = this.grid.properties.backgroundColor2, t.fillRect(Math.round(n / i), 0, o, r) }, getScrollTop: function () { return this.grid.getVScrollValue() }, getScrollLeft: function () { return this.grid.getHScrollValue() }, getColumnEdges: function () { return o("columnEdges", "The getColumnEdges() mehtod has been deprecated as of version 1.2.0 in favor of visibleColumns[*].top and will be removed in a future version. Note however that columnEdges had one additional element (representing the right edge of the last visible column) which visibleColumns lacks. Instead you can reference visibleColumns[*].bottom."), this.visibleColumns.map(function (t) { return t.left }).concat([this.visibleColumns[this.visibleColumns.length - 1].right]) }, getRowEdges: function () { return o("rowEdges", "The getRowEdges() method has been deprecated as of version 1.2.0 in favor of visibleRows[*].top and will be removed in a future version. Note however that rowEdges had one additional element (representing the bottom edge of the last visible row) which visibleRows lacks. Instead you can reference visibleRows[*].bottom."), this.visibleRows.map(function (t) { return t.top }).concat([this.visibleRows[this.visibleRows.length - 1].bottom]) }, isLastColumnVisible: function () { var t = this.getColumnCount() - 1; return !!this.visibleColumns.find(function (e) { return e.columnIndex === t }) }, getRenderedWidth: function (t) { var e, i = this.visibleColumns; return e = t >= i.length ? i[i.length - 1].right : i[t].left }, getRenderedHeight: function (t) { var e, i = this.visibleRows; if (t >= i.length) { var n = i[i.length - 1]; e = n.bottom } else e = i[t].top; return e }, getCanvas: function () { return this.grid.getCanvas() }, isDraggingColumn: function () { return this.grid.isDraggingColumn() }, getPageUpRow: function () { for (var t = this.grid, e = this.getVisibleScrollHeight(), i = this.dataWindow.origin.y - this.grid.properties.fixedRowCount - 1, n = 0; n < e && i >= 0;) n += t.getRowHeight(i), i--; return i + 1 }, getPageDownRow: function () { return this.dataWindow.corner.y - this.grid.properties.fixedRowCount + 1 }, getColumnCount: function () { return this.grid.getColumnCount() }, getRowCount: function () { return this.grid.getRowCount() }, getFixedColumnCount: function () { return this.grid.getFixedColumnCount() }, getFixedRowCount: function () { return this.grid.getFixedRowCount() }, getHeaderRowCount: function () { return this.grid.getHeaderRowCount() }, paintCells: function (t) { var e, i, o, r, s, a, l, u = this.grid.behavior, c = new u.CellEvent(0, 0), h = c._bounds = { x: 0, y: 0, width: 0, height: 0 }, d = c.gridCell, g = c.dataCell, f = this.visibleColumns, p = this.visibleRows, m = this.getBounds().height; for (this.buttonCells = {}, i = this.grid.isShowRowNumbers() ? -1 : 0, o = f.length; i < o; i++) { for (c.visibleColumn = a = f[i], c.column = u.getActiveColumn(a.columnIndex), d.x = a.columnIndex, g.x = c.column && c.column.index, h.x = a.left, h.width = a.width, this.renderedColumnMinWidths[d.x] = 0, t.save(), t.beginPath(), t.rect(0, 0, h.x + h.width, m), t.clip(), r = 0, s = p.length; r < s; r++) { c.visibleRow = l = p[r], h.y = l.top, h.height = l.height, d.y = l.index, g.y = l.rowIndex; try { this._paintCell(t, c) } catch (v) { e = v && (v.message || v) || "Unknown error.", console.error(e); var b = t.gc || t, C = a.left, w = a.right, y = l.top, x = l.bottom, S = { bounds: { c: C, y: y, width: w, height: x } }; b.save(), b.beginPath(), b.rect(C, y, w, x), b.clip(), this.grid.cellRenderers.get("errorcell").paint(b, S, e), b.restore() } } t.restore() } n(t, u, this.grid.getRowCount()) }, paintCell: function (t, e, i) { t.moveTo(0, 0); var n = this.visibleColumns[e].index, o = this.visibleRows[i].index; n && this._paintCell(t, n, o) }, _paintCell: function (t, e) { var i, n, o = this.grid, s = o.behavior, l = e.gridCell.x, u = e.dataCell.x, c = e.dataCell.y, h = e.isHandleColumn, d = e.isHierarchyColumn, g = e.isColumnSelected, f = o.isShowRowNumbers(), p = f && h || d, m = e.isGridRow, v = e.isRowSelected, b = e.isCellSelected, C = e.isHeaderRow, w = e.isFilterRow, y = s.getCellOwnProperties(e), x = this.config; y && y.applyCellProperties ? (this.c = void 0, x = void 0, i = y, n = !m) : x && u === this.c || (this.c = u, x = void 0); var S; if (S = p ? v ? 1 : 2 : m ? 3 : w ? 4 : g ? 5 : 6, !x || S !== this.configType) { if (this.configType = S, !i && (i = s.getColumnProperties(u), !i)) return void (this.config = void 0); switch (S) { case 1: x = Object.create(i.rowHeaderRowSelection); break; case 2: x = Object.create(i.rowHeader); break; case 3: x = Object.create(i); break; case 4: x = Object.create(i.filterProperties); break; case 5: x = Object.create(i.columnHeaderColumnSelection); break; case 6: x = Object.create(i.columnHeader) } this.config = x, this.baseProperties = i } var E; p ? (E = v || o.isCellSelectedInRow(c), x.halign = d ? "left" : "right") : E = m ? b || v || g : !w && (!!g || o.isCellSelectedInColumn(l)), h ? m ? x.value = [a.checkbox(v), c + 1, null] : C ? x.value = [a.checkbox(o.areAllRowsSelected()), "", null] : w ? x.value = [a.filter(!1), "", null] : x.value = "" : (x.dataRow = o.getRow(c), x.value = e.value), x.isSelected = E, x.isGridColumn = !p, x.isGridRow = m, x.isHeaderRow = C, x.isFilterRow = w, x.isUserDataArea = !p && m, x.isColumnHovered = e.isColumnHovered, x.isRowHovered = e.isRowHovered, x.isCellHovered = e.isCellHovered, x.bounds = e.bounds, x.isCellSelected = b, x.isRowSelected = v, x.isColumnSelected = g, x.isInCurrentSelectionRectangle = o.isInCurrentSelectionRectangle(l, c), o.mouseDownState && (x.mouseDown = o.mouseDownState.gridCell.equals(e.gridCell)); var A = s.getCellRenderer(x, e); (x.reapplyCellProperties || n) && r(x).extendOwn(y), s.cellPropertiesPrePaintNotification(x), x.buttonCells = this.buttonCells, x.formatValue = o.getFormatter(x.isUserDataArea && x.format), A.paint(t, x), this.renderedColumnMinWidths[l] = Math.max(x.minWidth || 0, this.renderedColumnMinWidths[l]), this.baseProperties.preferredWidth = this.renderedColumnMinWidths[l] }, isViewableButton: function (t, e) { var i = t + "," + e; return this.buttonCells[i] === !0 }, startAnimator: function () { var t = this; requestAnimationFrame(function e() { t.animate(), requestAnimationFrame(e) }) }, animate: function () { var t = this.getCanvas().canvasCTX; t.beginPath(), t.save(), this.renderLastSelection(t), t.restore(), t.closePath() }, getBounds: function () { return this.bounds }, setBounds: function (t) { return this.bounds = t } }), u = {}; e.exports = l }, { "../../images": 4, "../Base": 49, "object-iterators": 42 }], 115: [function (t, e, i) { "use strict"; function n(t) { this.grid = t, this.multipleSelections = t[t.behavior ? "getProperties" : "_getProperties"]().multipleSelections, this.selections = [], this.flattenedX = [], this.flattenedY = [], this.rowSelectionModel = new o, this.columnSelectionModel = new o, this.setLastSelectionType("") } var o = t("sparse-boolean-array"); n.prototype = { constructor: n.prototype.constructor, allRowsSelected: !1, getLastSelection: function () { var t = this.selections, e = t[t.length - 1]; return e }, getLastSelectionType: function () { return this.lastSelectionType }, setLastSelectionType: function (t) { this.lastSelectionType = t }, select: function (t, e, i, n, o) { var r = this.grid.newRectangle(t, e, i, n); r.firstSelectedCell = this.grid.newPoint(t, e), r.lastSelectedCell = r.firstSelectedCell.x === r.origin.x && r.firstSelectedCell.y === r.origin.y ? r.corner : r.origin, this.multipleSelections ? (this.selections.push(r), this.flattenedX.push(r.flattenXAt(0)), this.flattenedY.push(r.flattenYAt(0))) : (this.selections[0] = r, this.flattenedX[0] = r.flattenXAt(0), this.flattenedY[0] = r.flattenYAt(0)), this.setLastSelectionType("cell"), o || this.grid.selectionChanged() }, toggleSelect: function (t, e, i, n) { var o, r; o = this.selections.find(function (o, s) { return r = s, o.origin.x === t && o.origin.y === e && o.extent.x === i && o.extent.y === n }), o ? (this.selections.splice(r, 1), this.flattenedX.splice(r, 1), this.flattenedY.splice(r, 1), this.grid.selectionChanged()) : this.select(t, e, i, n) }, clearMostRecentSelection: function (t) { t = t === !0, t || this.setAllRowsSelected(!1), this.selections.length && --this.selections.length, this.flattenedX.length && --this.flattenedX.length, this.flattenedY.length && --this.flattenedY.length }, clearMostRecentColumnSelection: function () { this.columnSelectionModel.clearMostRecentSelection(), this.setLastSelectionType("column") }, clearMostRecentRowSelection: function () { this.rowSelectionModel.clearMostRecentSelection(), this.setLastSelectionType("row") }, clearRowSelection: function () { this.rowSelectionModel.clear(), this.setLastSelectionType("row") }, getSelections: function () { return this.selections }, hasSelections: function () { return 0 !== this.selections.length }, hasRowSelections: function () { return !this.rowSelectionModel.isEmpty() }, hasColumnSelections: function () { return !this.columnSelectionModel.isEmpty() }, isCellSelectedInRow: function (t) { return this._isCellSelected(this.flattenedX, 0, t) }, isCellSelectedInColumn: function (t) { return this._isCellSelected(this.flattenedY, t, 0) }, isSelected: function (t, e) { return this.isColumnSelected(t) || this.isRowSelected(e) || this._isCellSelected(this.selections, t, e) }, isCellSelected: function (t, e) { return this._isCellSelected(this.selections, t, e) }, _isCellSelected: function (t, e, i) { var n = this; return !!t.find(function (t) { return n.rectangleContains(t, e, i) }) }, clear: function (t) { t = t === !0, this.selections.length = 0, this.flattenedX.length = 0, this.flattenedY.length = 0, this.columnSelectionModel.clear(), t || (this.setAllRowsSelected(!1), this.rowSelectionModel.clear()) }, isRectangleSelected: function (t, e, i, n) { return !!this.selections.find(function (o) { return o.origin.x === t && o.origin.y === e && o.extent.x === i && o.extent.y === n }) }, isColumnSelected: function (t) { return this.columnSelectionModel.isSelected(t) }, isRowSelected: function (t) { return this.allRowsSelected || this.rowSelectionModel.isSelected(t) }, selectColumn: function (t, e) { this.columnSelectionModel.select(t, e), this.setLastSelectionType("column") }, selectAllRows: function () { this.clear(), this.setAllRowsSelected(!0) }, setAllRowsSelected: function (t) { this.allRowsSelected = t }, areAllRowsSelected: function () { return this.allRowsSelected }, selectRow: function (t, e) { this.rowSelectionModel.select(t, e), this.setLastSelectionType("row") }, deselectColumn: function (t, e) { this.columnSelectionModel.deselect(t, e), this.setLastSelectionType("column") }, deselectRow: function (t, e) { this.areAllRowsSelected() && (this.setAllRowsSelected(!1), this.rowSelectionModel.select(0, this.grid.getRowCount() - 1)), this.rowSelectionModel.deselect(t, e), this.setLastSelectionType("row") }, getSelectedRows: function () { if (this.areAllRowsSelected()) { for (var t = this.grid.getHeaderRowCount(), e = this.grid.getRowCount() - t, i = new Array(e), n = 0; n < e; n++) i[n] = n + t; return i } return this.rowSelectionModel.getSelections() }, getSelectedColumns: function () { return this.columnSelectionModel.getSelections() }, isColumnOrRowSelected: function () { return !this.columnSelectionModel.isEmpty() || !this.rowSelectionModel.isEmpty() }, getFlattenedYs: function () { var t = [], e = {}; return this.selections.forEach(function (i) { for (var n = i.origin.y, o = i.extent.y + 1, r = 0; r < o; r++) { var s = r + n; e[s] || (t.push(s), e[s] = !0) } }), t.sort(function (t, e) { return t - e }), t }, selectRowsFromCells: function (t, e) { t = t || 0, e = e === !0; var i = this.rowSelectionModel; e || (this.setAllRowsSelected(!1), i.clear()), this.selections.forEach(function (e) { var n = e.origin.y, o = e.extent.y; n += t, i.select(n, n + o) }) }, selectColumnsFromCells: function (t) { t = t || 0; var e = this.columnSelectionModel; e.clear(), this.selections.forEach(function (i) { var n = i.origin.x, o = i.extent.x; n += t, e.select(n, n + o) }) }, isInCurrentSelectionRectangle: function (t, e) { var i = this.selections[this.selections.length - 1]; return i && this.rectangleContains(i, t, e) }, rectangleContains: function (t, e, i) { var n = t.origin.x, o = t.origin.y, r = n + t.extent.x, s = o + t.extent.y; t.extent.x < 0 && (n = r, r = t.origin.x), t.extent.y < 0 && (o = s, s = t.origin.y); var a = e >= n && i >= o && e <= r && i <= s; return a } }, e.exports = n }, { "sparse-boolean-array": 46 }], 116: [function (t, e, i) {
        "use strict"; function n(t, e) { this.x = t, this.y = e } function o(t) { function e(e, i) { var o = t.renderer.visibleRows[i]; this.column = t.behavior.getActiveColumn(e), Object.defineProperties(this, { visibleColumn: { writable: !0, value: this.grid.renderer.visibleColumns.find(function (t) { return t.columnIndex === e }) }, visibleRow: { writable: !0, value: o }, gridCell: { value: new n(e, i) }, dataCell: { value: new n(this.column && this.column.index, o.rowIndex) } }) } return e.prototype = Object.create(s), Object.defineProperties(e.prototype, { constructor: { value: e }, grid: { value: t }, renderer: { value: t.renderer }, selectionModel: { value: t.selectionModel }, behavior: { value: t.behavior }, dataModel: { value: t.behavior.dataModel } }), e } var r = t("rectangular"); n.prototype = r.Point.prototype; var s = Object.defineProperties({}, {
            value: { get: function () { return this.visibleRow.subgrid.getValue(this.dataCell.x, this.dataCell.y) }, set: function (t) { this.visibleRow.subgrid.setValue(this.dataCell.x, this.dataCell.y, t) } }, formattedValue: { get: function () { return this.grid.formatValue(this.getCellProperty("format"), this.value) } }, bounds: { get: function () { return this._bounds || (this._bounds = { x: this.visibleColumn.left, y: this.visibleRow.top, width: this.visibleColumn.width, height: this.visibleRow.height }) } }, getCellProperty: { value: function (t) { return this.column.getCellProperty(this.dataCell.y, t, this.visibleRow.subgrid) } }, isRowVisible: { get: function () { return !!this.visibleRow } }, isColumnVisible: { get: function () { return !!this.visibleColumn } }, isCellVisible: { get: function () { return this.isRowVisible && this.isColumnVisible } }, isGridRow: { get: function () { return !this.visibleRow.subgrid.type } }, isGridColumn: { get: function () { return this.gridCell.x >= 0 } }, isGridCell: { get: function () { return this.isGridRow && this.isGridColumn } }, isRowSelected: { get: function () { return this.isGridRow && this.selectionModel.isRowSelected(this.dataCell.y) } }, isColumnSelected: { get: function () { return this.isGridColumn && this.selectionModel.isColumnSelected(this.gridCell.x) } }, isCellSelected: { get: function () { return this.selectionModel.isCellSelected(this.gridCell.x, this.dataCell.y) } }, isRowHovered: { get: function () { return this.isGridRow && this.grid.hoverCell && this.grid.hoverCell.y === this.gridCell.y } }, isColumnHovered: { get: function () { return this.isGridColumn && this.grid.hoverCell && this.grid.hoverCell.x === this.gridCell.x } }, isCellHovered: { get: function () { return this.isRowHovered && this.isColumnHovered } }, isRowFixed: { get: function () { return this.isGridRow && this.dataCell.y < this.grid.properties.fixedRowCount } }, isColumnFixed: { get: function () { return this.isGridColumn && this.gridCell.x < this.grid.properties.fixedColumnCount } }, isCellFixed: { get: function () { return this.isRowFixed && this.isColumnFixed } }, isHandleColumn: { get: function () { return !this.isGridColumn } }, isHandleCell: { get: function () { return this.isHandleColumn && this.isGridRow } }, isHierarchyColumn: { get: function () { return 0 === this.gridCell.x && this.grid.properties.showTreeColumn && this.dataModel.isDrillDown(this.dataCell.x) } }, isHeaderRow: { get: function () { return "header" === this.visibleRow.subgrid.type } }, isHeaderHandle: { get: function () { return this.isHeaderRow && this.isHandleColumn } }, isHeaderCell: { get: function () { return this.isHeaderRow && this.isGridColumn } }, isFilterRow: { get: function () { return "filter" === this.visibleRow.subgrid.type } }, isFilterHandle: { get: function () { return this.isFilterRow && this.isHandleColumn } }, isFilterCell: { get: function () { return this.isFilterRow && this.isGridColumn } }, isSummaryRow: { get: function () { return "summary" === this.visibleRow.subgrid.type } }, isSummaryHandle: { get: function () { return this.isSummaryRow && this.isHandleColumn } }, isSummaryCell: { get: function () { return this.isSummaryRow && this.isGridColumn } }, isTopTotalsRow: { get: function () { return this.visibleRow.subgrid === this.behavior.subgrids.topTotals } }, isTopTotalsHandle: { get: function () { return this.isTopTotalsRow && this.isHandleColumn } }, isTopTotalsCell: { get: function () { return this.isTopTotalsRow && this.isGridColumn } }, isBottomTotalsRow: { get: function () { return this.visibleRow.subgrid === this.behavior.subgrids.bottomTotals } }, isBottomTotalsHandle: { get: function () { return this.isBottomTotalsRow && this.isHandleColumn } }, isBottomTotalsCell: { get: function () { return this.isBottomTotalsRow && this.isGridColumn } }
        }); e.exports = o
    }, { rectangular: 45 }], 117: [function (t, e, i) { "use strict"; function n(t) { return t.match(/^\w+\((.*)\)$/)[1].match(/(\w+)/g) } console.warn || (console.warn = function () { console.log.apply(console, ["WARNING:"].concat(Array.prototype.slice.call(arguments))) }); var o = {}, r = /\)$/, s = function (t, e, i, a, l) { function u(t) { var e = h.indexOf(t); if (e === -1) throw 'Actual arg "' + t + '" not found in formal arg list ' + h; return a[e] } if (!r.test(t)) throw "Expected method name to have parentheses."; "string" == typeof a && (l = a, a = void 0); var c = e.split("."), h = n(t), d = this; if (t in o || (o[t] = s.warnings), o[t]) { var g = r.test(e) ? "method" : "property", f = "The ." + t + " method is deprecated as of v" + i + " in favor of the ." + c.join(".") + " " + g + ". (Will be removed in a future release.)"; l && (f += " " + l), console.warn(f), --o[t] } for (var p = 0, m = c.length - 1; p <= m; ++p) { var v = c[p], b = v.match(/\w+/)[0], C = r.test(v), w = C ? n(v) : void 0, y = []; w ? (y = w.map(u), d = d[b].apply(d, y)) : d = C ? d[b]() : d[b] } return d }; s.warnings = 1, e.exports = s }, {}], 118: [function (t, e, i) { "use strict"; function n(t) { this.message = t } n.prototype = Object.create(Error.prototype), n.prototype.name = "HypergridError", e.exports = n }, {}], 119: [function (t, e, i) { "use strict"; Math.sign = Math.sign || function (t) { return t = +t, 0 === t || isNaN(t) ? t : t > 0 ? 1 : -1 }, Array.prototype.findIndex || (Array.prototype.findIndex = function (t) { if (null == this) throw new TypeError("Array.prototype.findIndex called on null or undefined"); if ("function" != typeof t) throw new TypeError("predicate must be a function"); for (var e, i = Object(this), n = i.length >>> 0, o = arguments[1], r = 0; r < n; r++) if (e = i[r], t.call(o, e, r, i)) return r; return -1 }) }, {}], 120: [function (t, e, i) { "use strict"; var n = t("automat"), o = t("../../css"), r = document.querySelector("head"), s = Array.prototype.slice.call(r.children).find(function (t) { return "STYLE" === t.tagName || "LINK" === t.tagName && "stylesheet" === t.getAttribute("rel") && "text/css" === t.getAttribute("type") }); i.prefix = "injected-stylesheet-", i.inject = function (t, e) { var i = document.querySelector("#" + this.prefix + t); if (!i) { i = o[t], i = "<style>\n" + i + "\n</style>\n"; var a = [i, r, s].concat(Array.prototype.slice.call(arguments, 1)); i = n.append.apply(null, a)[0], i.id = this.prefix + t } return i } }, { "../../css": 1, automat: 5 }]
}, {}, [91]);